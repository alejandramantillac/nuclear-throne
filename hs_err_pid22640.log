#
# A fatal error has been detected by the Java Runtime Environment:
#
#  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x00007ff9710e6ce9, pid=22640, tid=35328
#
# JRE version: Java(TM) SE Runtime Environment (19.0.2+7) (build 19.0.2+7-44)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (19.0.2+7-44, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)
# Problematic frame:
# C  0x00007ff9710e6ce9
#
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#
# If you would like to submit a bug report, please visit:
#   https://bugreport.java.com/bugreport/crash.jsp
# The crash happened outside the Java Virtual Machine in native code.
# See problematic frame for where to report the bug.
#

---------------  S U M M A R Y ------------

Command Line: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2022.3.2\lib\idea_rt.jar=53419:C:\Program Files\JetBrains\IntelliJ IDEA 2022.3.2\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 --module-path=C:\Users\andre\.m2\repository\org\openjfx\javafx-controls\19\javafx-controls-19-win.jar;C:\Users\andre\.m2\repository\org\openjfx\javafx-media\17.0.2\javafx-media-17.0.2-win.jar;C:\Users\andre\.m2\repository\org\openjfx\javafx-graphics\19\javafx-graphics-19-win.jar;C:\Users\andre\.m2\repository\org\openjfx\javafx-base\19\javafx-base-19-win.jar;D:\temporal\nuclear-throne\target\classes;C:\Users\andre\.m2\repository\org\openjfx\javafx-fxml\19\javafx-fxml-19-win.jar -Djdk.module.main=com.example.nuclearthrone com.example.nuclearthrone/com.example.nuclearthrone.MainMenu

Host: Intel(R) Core(TM) i5-6200U CPU @ 2.30GHz, 4 cores, 11G,  Windows 11 , 64 bit Build 22621 (10.0.22621.1778)
Time: Wed Jun  7 18:19:29 2023 Hora est. Pacífico, Sudamérica elapsed time: 182.585909 seconds (0d 0h 3m 2s)

---------------  T H R E A D  ---------------

Current thread (0x00000150fd542b10):  JavaThread "QuantumRenderer-0" daemon [_thread_in_native, id=35328, stack(0x0000001ec5300000,0x0000001ec5400000)]

Stack: [0x0000001ec5300000,0x0000001ec5400000],  sp=0x0000001ec53fe350,  free space=1016k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
C  0x00007ff9710e6ce9

Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)
J 2748  com.sun.javafx.font.directwrite.OS.GetDesignGlyphMetrics(JSZ)Lcom/sun/javafx/font/directwrite/DWRITE_GLYPH_METRICS; javafx.graphics@19 (0 bytes) @ 0x00000150e765fa91 [0x00000150e765fa40+0x0000000000000051]
J 5084 c2 com.sun.javafx.font.directwrite.DWGlyph.checkMetrics()V javafx.graphics@19 (136 bytes) @ 0x00000150e7857334 [0x00000150e78572c0+0x0000000000000074]
J 2782 c2 com.sun.prism.impl.GlyphCache.getCachedGlyph(II)Lcom/sun/prism/impl/GlyphCache$GlyphData; javafx.graphics@19 (491 bytes) @ 0x00000150e766253c [0x00000150e7661d80+0x00000000000007bc]
J 4942 c2 com.sun.prism.impl.GlyphCache.render(Lcom/sun/prism/impl/BaseContext;Lcom/sun/javafx/scene/text/GlyphList;FFIILcom/sun/prism/paint/Color;Lcom/sun/prism/paint/Color;Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/BaseBounds;)V javafx.graphics@19 (326 bytes) @ 0x00000150e771fa0c [0x00000150e771f5c0+0x000000000000044c]
J 4961 c2 com.sun.prism.impl.ps.BaseShaderGraphics.drawString(Lcom/sun/javafx/scene/text/GlyphList;Lcom/sun/javafx/font/FontStrike;FFLcom/sun/prism/paint/Color;II)V javafx.graphics@19 (820 bytes) @ 0x00000150e7809ed0 [0x00000150e7808900+0x00000000000015d0]
J 5001 c2 com.sun.javafx.sg.prism.NGText.renderText(Lcom/sun/prism/Graphics;Lcom/sun/javafx/font/FontStrike;Lcom/sun/javafx/geom/BaseBounds;Lcom/sun/prism/paint/Color;I)V javafx.graphics@19 (523 bytes) @ 0x00000150e75d30d8 [0x00000150e75d2f40+0x0000000000000198]
J 4938 c2 com.sun.javafx.sg.prism.NGText.renderContent2D(Lcom/sun/prism/Graphics;Z)V javafx.graphics@19 (355 bytes) @ 0x00000150e770d7b4 [0x00000150e770cfc0+0x00000000000007f4]
J 3051 c2 com.sun.javafx.sg.prism.NGShape.renderContent(Lcom/sun/prism/Graphics;)V javafx.graphics@19 (458 bytes) @ 0x00000150e769a85c [0x00000150e769a7a0+0x00000000000000bc]
J 4977 c2 com.sun.javafx.sg.prism.NGNode.doRender(Lcom/sun/prism/Graphics;)V javafx.graphics@19 (473 bytes) @ 0x00000150e7678cac [0x00000150e7678a80+0x000000000000022c]
J 4666 c2 com.sun.javafx.sg.prism.NGGroup.renderContent(Lcom/sun/prism/Graphics;)V javafx.graphics@19 (422 bytes) @ 0x00000150e77d684c [0x00000150e77d6680+0x00000000000001cc]
J 2968 c2 com.sun.javafx.sg.prism.NGRegion.renderContent(Lcom/sun/prism/Graphics;)V javafx.graphics@19 (115 bytes) @ 0x00000150e768aadc [0x00000150e768a980+0x000000000000015c]
J 4977 c2 com.sun.javafx.sg.prism.NGNode.doRender(Lcom/sun/prism/Graphics;)V javafx.graphics@19 (473 bytes) @ 0x00000150e7678cac [0x00000150e7678a80+0x000000000000022c]
J 4666 c2 com.sun.javafx.sg.prism.NGGroup.renderContent(Lcom/sun/prism/Graphics;)V javafx.graphics@19 (422 bytes) @ 0x00000150e77d684c [0x00000150e77d6680+0x00000000000001cc]
J 2968 c2 com.sun.javafx.sg.prism.NGRegion.renderContent(Lcom/sun/prism/Graphics;)V javafx.graphics@19 (115 bytes) @ 0x00000150e768aadc [0x00000150e768a980+0x000000000000015c]
J 4977 c2 com.sun.javafx.sg.prism.NGNode.doRender(Lcom/sun/prism/Graphics;)V javafx.graphics@19 (473 bytes) @ 0x00000150e7678cac [0x00000150e7678a80+0x000000000000022c]
J 4666 c2 com.sun.javafx.sg.prism.NGGroup.renderContent(Lcom/sun/prism/Graphics;)V javafx.graphics@19 (422 bytes) @ 0x00000150e77d684c [0x00000150e77d6680+0x00000000000001cc]
J 2968 c2 com.sun.javafx.sg.prism.NGRegion.renderContent(Lcom/sun/prism/Graphics;)V javafx.graphics@19 (115 bytes) @ 0x00000150e768aadc [0x00000150e768a980+0x000000000000015c]
J 4977 c2 com.sun.javafx.sg.prism.NGNode.doRender(Lcom/sun/prism/Graphics;)V javafx.graphics@19 (473 bytes) @ 0x00000150e7678cac [0x00000150e7678a80+0x000000000000022c]
J 5105 c2 com.sun.javafx.tk.quantum.ViewPainter.paintImpl(Lcom/sun/prism/Graphics;)V javafx.graphics@19 (1449 bytes) @ 0x00000150e785fb08 [0x00000150e785e840+0x00000000000012c8]
J 5144 c2 com.sun.javafx.tk.quantum.PresentingPainter.run()V javafx.graphics@19 (680 bytes) @ 0x00000150e78840ac [0x00000150e7883ce0+0x00000000000003cc]
J 5140 c2 com.sun.javafx.tk.RenderJob.run()V javafx.graphics@19 (92 bytes) @ 0x00000150e7881454 [0x00000150e7881360+0x00000000000000f4]
j  java.util.concurrent.ThreadPoolExecutor.runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V+92 java.base@19.0.2
j  java.util.concurrent.ThreadPoolExecutor$Worker.run()V+5 java.base@19.0.2
j  com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.run()V+8 javafx.graphics@19
j  java.lang.Thread.run()V+13 java.base@19.0.2
v  ~StubRoutines::call_stub 0x00000150e6fc100e

siginfo: EXCEPTION_ACCESS_VIOLATION (0xc0000005), reading address 0x00000150ffb622a2


Registers:
RAX=0x00000150ffb62240, RBX=0x0000001ec53fe630, RCX=0x00000150fe7363b8, RDX=0x0000001ec53fe508
RSP=0x0000001ec53fe350, RBP=0x0000001ec53fe450, RSI=0x0000001ec53fe5b8, RDI=0x00000150fe7363b8
R8 =0x00000150d5afdbc0, R9 =0x0000001ec53fe5b8, R10=0x0000000000000000, R11=0xf7fef8000000001f
R12=0x0000001ec53fe630, R13=0x00000150fe751b50, R14=0x00000150fe7363b8, R15=0x0000001ec53fe508
RIP=0x00007ff9710e6ce9, EFLAGS=0x0000000000010206


Register to memory mapping:

RIP=0x00007ff9710e6ce9 points into unknown readable memory: 0f b7 40 62 66 89 44
RAX=0x00000150ffb62240 is an unknown value
RBX=0x0000001ec53fe630 is pointing into the stack for thread: 0x00000150fd542b10
RCX=0x00000150fe7363b8 points into unknown readable memory: 0x00007ff97121b100 | 00 b1 21 71 f9 7f 00 00
RDX=0x0000001ec53fe508 is pointing into the stack for thread: 0x00000150fd542b10
RSP=0x0000001ec53fe350 is pointing into the stack for thread: 0x00000150fd542b10
RBP=0x0000001ec53fe450 is pointing into the stack for thread: 0x00000150fd542b10
RSI=0x0000001ec53fe5b8 is pointing into the stack for thread: 0x00000150fd542b10
RDI=0x00000150fe7363b8 points into unknown readable memory: 0x00007ff97121b100 | 00 b1 21 71 f9 7f 00 00
R8 =0x00000150d5afdbc0 points into unknown readable memory: 0x00000150ffb62240 | 40 22 b6 ff 50 01 00 00
R9 =0x0000001ec53fe5b8 is pointing into the stack for thread: 0x00000150fd542b10
R10=0x0 is NULL
R11=0xf7fef8000000001f is an unknown value
R12=0x0000001ec53fe630 is pointing into the stack for thread: 0x00000150fd542b10
R13=0x00000150fe751b50 points into unknown readable memory: 0x0000000000000000 | 00 00 00 00 00 00 00 00
R14=0x00000150fe7363b8 points into unknown readable memory: 0x00007ff97121b100 | 00 b1 21 71 f9 7f 00 00
R15=0x0000001ec53fe508 is pointing into the stack for thread: 0x00000150fd542b10


Top of Stack: (sp=0x0000001ec53fe350)
0x0000001ec53fe350:   0000000000000000 0000000000000000
0x0000001ec53fe360:   0000000000000000 0000001e00000000
0x0000001ec53fe370:   0000000000000020 0000000000000060
0x0000001ec53fe380:   0000000000000080 0000000000000010
0x0000001ec53fe390:   0000000000000018 0000001ec53fe428
0x0000001ec53fe3a0:   0000001ec53fe638 0000001ec53fe6c8
0x0000001ec53fe3b0:   0000000000000001 00000150d5afdbc0
0x0000001ec53fe3c0:   0000000000000008 0000000000000001
0x0000001ec53fe3d0:   0000001ec53fe549 00007ff97611cb80
0x0000001ec53fe3e0:   0000000000000000 0000000000000008
0x0000001ec53fe3f0:   00000150fd0411e0 0000000000000000
0x0000001ec53fe400:   0000001ec53fe4f0 00007ff97111d450
0x0000001ec53fe410:   0000000000000008 00000150d5afdbc0
0x0000001ec53fe420:   000000000000006f 000000257110a560
0x0000001ec53fe430:   0000000000000000 00007ff9710e5992
0x0000001ec53fe440:   00000150fd0421eb 00007ff92ba9b307 

Instructions: (pc=0x00007ff9710e6ce9)
0x00007ff9710e6be9:   60 49 8b 5b 30 49 8b 6b 38 49 8b 73 40 45 0f 28
0x00007ff9710e6bf9:   43 d0 45 0f 28 4b c0 0f 28 7c 24 40 49 8b e3 41
0x00007ff9710e6c09:   5f 41 5e 41 5d 41 5c 5f c3 cc 41 8a cd eb 88 41
0x00007ff9710e6c19:   8a c5 eb 93 41 0f 2f f9 72 b8 0f 2f cf 72 b3 0f
0x00007ff9710e6c29:   2f f7 f3 0f 10 05 01 21 17 00 76 2a 0f 28 c7 f3
0x00007ff9710e6c39:   41 0f 5c f1 f3 41 0f 5c c1 f3 0f 5e c6 f3 0f 59
0x00007ff9710e6c49:   06 f3 0f 11 06 66 03 ea 66 41 3b ee 0f 82 f4 fe
0x00007ff9710e6c59:   ff ff 8a c2 eb 81 0f 2f fe 76 e2 0f 28 c1 f3 0f
0x00007ff9710e6c69:   5c ce f3 0f 5c c7 f3 0f 5e c1 eb d1 cc cc cc cc
0x00007ff9710e6c79:   cc cc cc 48 83 ec 28 e8 bf aa ff ff 0f bf c8 66
0x00007ff9710e6c89:   0f 6e c1 0f 5b c0 f3 0f 59 05 69 43 19 00 48 83
0x00007ff9710e6c99:   c4 28 c3 cc cc cc cc cc cc cc cc 40 55 53 56 57
0x00007ff9710e6ca9:   41 54 41 55 41 56 41 57 48 8d 6c 24 e8 48 81 ec
0x00007ff9710e6cb9:   18 01 00 00 48 8b 05 54 2b 1d 00 48 33 c4 48 89
0x00007ff9710e6cc9:   45 00 49 8b f1 4c 89 45 c8 4c 8b fa 4c 8b f1 4c
0x00007ff9710e6cd9:   8b a5 88 00 00 00 4c 8b ad 90 00 00 00 49 8b 00
0x00007ff9710e6ce9:   0f b7 40 62 66 89 44 24 50 33 c0 48 89 44 24 60
0x00007ff9710e6cf9:   89 44 24 68 48 89 44 24 70 89 44 24 78 48 89 45
0x00007ff9710e6d09:   80 89 45 88 48 89 45 90 66 89 45 98 8b f8 49 8d
0x00007ff9710e6d19:   58 20 8d 50 06 44 8d 40 02 48 8b cb e8 56 48 02
0x00007ff9710e6d29:   00 8b 53 0c 44 8b c0 48 8b 4b 18 e8 27 02 00 00
0x00007ff9710e6d39:   33 c9 66 39 4b 10 76 14 0f b7 53 10 48 c1 e2 03
0x00007ff9710e6d49:   44 8b c0 48 8b 4b 20 e8 0b 02 00 00 44 8d 80 00
0x00007ff9710e6d59:   00 08 00 ba 01 00 00 00 48 8b ce e8 17 48 02 00
0x00007ff9710e6d69:   89 45 a8 c7 45 ac 08 00 00 00 48 8d 05 8e 2f 13
0x00007ff9710e6d79:   00 48 89 45 a0 48 89 5d b0 48 89 75 b8 0f b7 44
0x00007ff9710e6d89:   24 50 89 45 c0 48 b9 ff ff ff ff ff ff ff 7f 48
0x00007ff9710e6d99:   8b 03 48 23 c1 48 83 f8 03 0f 93 45 c4 49 8b 06
0x00007ff9710e6da9:   49 ba 70 58 da 76 30 be bc d0 4c 8d 44 24 60 48
0x00007ff9710e6db9:   8d 55 a0 49 8b ce 48 8b 40 38 ff 15 07 b2 13 00
0x00007ff9710e6dc9:   8b b5 80 00 00 00 33 c9 84 c0 74 09 38 4d 98 0f
0x00007ff9710e6dd9:   84 ac 00 00 00 3b fe 73 6d c6 45 c4 01 48 8b 5d 


Stack slot to memory mapping:
stack at sp + 0 slots: 0x0 is NULL
stack at sp + 1 slots: 0x0 is NULL
stack at sp + 2 slots: 0x0 is NULL
stack at sp + 3 slots: 0x0000001e00000000 is an unknown value
stack at sp + 4 slots: 0x0000000000000020 is an unknown value
stack at sp + 5 slots: 0x0000000000000060 is an unknown value
stack at sp + 6 slots: 0x0000000000000080 is an unknown value
stack at sp + 7 slots: 0x0000000000000010 is an unknown value


Compiled method (n/a)  183196 2748     n 0       com.sun.javafx.font.directwrite.OS::GetDesignGlyphMetrics (native)
 total in heap  [0x00000150e765f890,0x00000150e765fe78] = 1512
 relocation     [0x00000150e765f9f0,0x00000150e765fa28] = 56
 main code      [0x00000150e765fa40,0x00000150e765fe70] = 1072
 oops           [0x00000150e765fe70,0x00000150e765fe78] = 8

[Constant Pool (empty)]

[MachCode]
[Entry Point]
  # {method} {0x00000150f8d68e60} 'GetDesignGlyphMetrics' '(JSZ)Lcom/sun/javafx/font/directwrite/DWRITE_GLYPH_METRICS;' in 'com/sun/javafx/font/directwrite/OS'
  # parm0:    rdx:rdx   = long
  # parm1:    r8        = short
  # parm2:    r9        = boolean
  #           [sp+0x80]  (sp of caller)
  0x00000150e765fa40: 448b 5208 | 49bb 0000 | 0000 0800 | 0000 4d03 | d349 3bc2 | 0f84 0600 

  0x00000150e765fa58: ;   {runtime_call ic_miss_stub}
  0x00000150e765fa58: 0000 e921 | 1d9c ff90 
[Verified Entry Point]
  0x00000150e765fa60: 8984 2400 | 90ff ff55 | 488b ec48 | 83ec 704c | 894c 2420 | 4d8b c84c 

  0x00000150e765fa78: ;   {oop(a 'java/lang/Class'{0x0000000745e31820} = 'com/sun/javafx/font/directwrite/OS')}
  0x00000150e765fa78: 8bc2 49be | 2018 e345 | 0700 0000 | 4c89 7424 | 584c 8d74 | 2458 498b | d6c5 f877 

  0x00000150e765fa94: ;   {internal_word}
  0x00000150e765fa94: 49ba 91fa | 65e7 5001 | 0000 4d89 | 97c8 0200 | 0049 89a7 | c002 0000 

  0x00000150e765faac: ;   {external_word}
  0x00000150e765faac: 49ba c984 | 222c f97f | 0000 4180 | 3a00 0f84 | 5000 0000 | 5241 5041 

  0x00000150e765fac4: ;   {metadata({method} {0x00000150f8d68e60} 'GetDesignGlyphMetrics' '(JSZ)Lcom/sun/javafx/font/directwrite/DWRITE_GLYPH_METRICS;' in 'com/sun/javafx/font/directwrite/OS')}
  0x00000150e765fac4: 5148 ba58 | 8ed6 f850 | 0100 0049 | 8bcf 4883 | ec20 40f6 | c40f 0f84 | 1a00 0000 | 4883 ec08 
  0x00000150e765fae4: ;   {runtime_call}
  0x00000150e765fae4: 49ba d027 | da2b f97f | 0000 41ff | d248 83c4 | 08e9 0d00 

  0x00000150e765faf8: ;   {runtime_call}
  0x00000150e765faf8: 0000 49ba | d027 da2b | f97f 0000 | 41ff d248 | 83c4 2041 | 5941 585a | 498d 8fe0 | 0200 0041 
  0x00000150e765fb18: c787 7403 | 0000 0400 

  0x00000150e765fb20: ;   {runtime_call}
  0x00000150e765fb20: 0000 49ba | a056 9f63 | f97f 0000 | 41ff d2c5 | f877 41c7 | 8774 0300 | 0005 0000 | 00f0 8344 
  0x00000150e765fb40: 24c0 0049 | 3baf 7803 | 0000 0f87 | 1100 0000 | 4181 bf70 | 0300 0000 | 0000 000f | 842c 0000 
  0x00000150e765fb60: 00c5 f877 | 4889 45f8 | 498b cf4c | 8be4 4883 | ec20 4883 

  0x00000150e765fb74: ;   {runtime_call}
  0x00000150e765fb74: e4f0 49ba | 0015 e52b | f97f 0000 | 41ff d249 | 8be4 4d33 | e448 8b45 | f841 c787 | 7403 0000 
  0x00000150e765fb94: 0800 0000 | 4181 bfe8 | 0300 0002 | 0000 000f | 8499 0200 

  0x00000150e765fba8: ;   {external_word}
  0x00000150e765fba8: 0049 bac9 | 8422 2cf9 | 7f00 0041 | 803a 000f | 844e 0000 | 0048 8945 

  0x00000150e765fbc0: ;   {metadata({method} {0x00000150f8d68e60} 'GetDesignGlyphMetrics' '(JSZ)Lcom/sun/javafx/font/directwrite/DWRITE_GLYPH_METRICS;' in 'com/sun/javafx/font/directwrite/OS')}
  0x00000150e765fbc0: f848 ba58 | 8ed6 f850 | 0100 0049 | 8bcf 4883 | ec20 40f6 | c40f 0f84 | 1a00 0000 | 4883 ec08 
  0x00000150e765fbe0: ;   {runtime_call}
  0x00000150e765fbe0: 49ba d027 | da2b f97f | 0000 41ff | d248 83c4 | 08e9 0d00 

  0x00000150e765fbf4: ;   {runtime_call}
  0x00000150e765fbf4: 0000 49ba | d027 da2b | f97f 0000 | 41ff d248 | 83c4 2048 | 8b45 f849 | c787 c002 | 0000 0000 
  0x00000150e765fc14: 0000 49c7 | 87c8 0200 | 0000 0000 | 00c5 f877 | 4885 c00f | 84ef 0100 | 00a8 010f | 84e4 0100 
  0x00000150e765fc34: 0048 8b40 | ff41 807f | 4000 0f84 | d001 0000 | 4883 f800 | 0f84 c601 | 0000 498b | 4f28 4883 
  0x00000150e765fc54: f900 0f84 | 1400 0000 | 4883 e908 | 4989 4f28 | 4903 4f38 | 4889 01e9 | a401 0000 | 4881 ecd0 
  0x00000150e765fc74: 0000 0048 | 8904 2448 | 894c 2408 | 4889 5424 | 1048 8974 | 2418 4889 | 7c24 204c | 8944 2428 
  0x00000150e765fc94: 4c89 4c24 | 304c 8954 | 2438 4c89 | 5c24 40c5 | fb11 4424 | 50c5 fb11 | 4c24 58c5 | fb11 5424 
  0x00000150e765fcb4: 60c5 fb11 | 5c24 68c5 | fb11 6424 | 70c5 fb11 | 6c24 78c5 | fb11 b424 | 8000 0000 | c5fb 11bc 
  0x00000150e765fcd4: 2488 0000 | 00c5 7b11 | 8424 9000 | 0000 c57b | 118c 2498 | 0000 00c5 | 7b11 9424 | a000 0000 
  0x00000150e765fcf4: c57b 119c | 24a8 0000 | 00c5 7b11 | a424 b000 | 0000 c57b | 11ac 24b8 | 0000 00c5 | 7b11 b424 
  0x00000150e765fd14: c000 0000 | c57b 11bc | 24c8 0000 | 0049 8bd7 | 488b c848 | 83ec 2040 | f6c4 0f0f | 841a 0000 
  0x00000150e765fd34: 0048 83ec 

  0x00000150e765fd38: ;   {runtime_call}
  0x00000150e765fd38: 0849 bab0 | 1e97 2bf9 | 7f00 0041 | ffd2 4883 | c408 e90d 

  0x00000150e765fd4c: ;   {runtime_call}
  0x00000150e765fd4c: 0000 0049 | bab0 1e97 | 2bf9 7f00 | 0041 ffd2 | 4883 c420 | c57b 10bc | 24c8 0000 | 00c5 7b10 
  0x00000150e765fd6c: b424 c000 | 0000 c57b | 10ac 24b8 | 0000 00c5 | 7b10 a424 | b000 0000 | c57b 109c | 24a8 0000 
  0x00000150e765fd8c: 00c5 7b10 | 9424 a000 | 0000 c57b | 108c 2498 | 0000 00c5 | 7b10 8424 | 9000 0000 | c5fb 10bc 
  0x00000150e765fdac: 2488 0000 | 00c5 fb10 | b424 8000 | 0000 c5fb | 106c 2478 | c5fb 1064 | 2470 c5fb | 105c 2468 
  0x00000150e765fdcc: c5fb 1054 | 2460 c5fb | 104c 2458 | c5fb 1044 | 2450 4c8b | 5c24 404c | 8b54 2438 | 4c8b 4c24 
  0x00000150e765fdec: 304c 8b44 | 2428 488b | 7c24 2048 | 8b74 2418 | 488b 5424 | 1048 8b4c | 2408 488b | 0424 4881 
  0x00000150e765fe0c: c4d0 0000 | 00c5 f877 | e903 0000 | 0048 8b00 | 498b 8f50 | 0300 00c7 | 8100 0100 | 0000 0000 
  0x00000150e765fe2c: 00c9 4981 | 7f08 0000 | 0000 0f85 | 0100 0000 

  0x00000150e765fe3c: ;   {runtime_call StubRoutines (1)}
  0x00000150e765fe3c: c3e9 be10 | 96ff c5f8 | 7748 8945 | f84c 8be4 | 4883 ec20 | 4883 e4f0 

  0x00000150e765fe54: ;   {runtime_call}
  0x00000150e765fe54: 49ba 305c | da2b f97f | 0000 41ff | d249 8be4 | 4d33 e448 | 8b45 f8e9 | 39fd ffff 
[/MachCode]


Compiled method (c2)  183231 5084       4       com.sun.javafx.font.directwrite.DWGlyph::checkMetrics (136 bytes)
 total in heap  [0x00000150e7857110,0x00000150e7857950] = 2112
 relocation     [0x00000150e7857270,0x00000150e78572a8] = 56
 main code      [0x00000150e78572c0,0x00000150e7857620] = 864
 stub code      [0x00000150e7857620,0x00000150e7857648] = 40
 oops           [0x00000150e7857648,0x00000150e7857658] = 16
 metadata       [0x00000150e7857658,0x00000150e78576e8] = 144
 scopes data    [0x00000150e78576e8,0x00000150e78577f8] = 272
 scopes pcs     [0x00000150e78577f8,0x00000150e78578c8] = 208
 dependencies   [0x00000150e78578c8,0x00000150e78578f8] = 48
 handler table  [0x00000150e78578f8,0x00000150e7857910] = 24
 nul chk table  [0x00000150e7857910,0x00000150e7857950] = 64

[Constant Pool (empty)]

[MachCode]
[Entry Point]
  # {method} {0x00000150f906ec88} 'checkMetrics' '()V' in 'com/sun/javafx/font/directwrite/DWGlyph'
  #           [sp+0x60]  (sp of caller)
  0x00000150e78572c0: 448b 5208 | 49bb 0000 | 0000 0800 | 0000 4d03 | d349 3bc2 

  0x00000150e78572d4: ;   {runtime_call ic_miss_stub}
  0x00000150e78572d4: 0f85 a6a4 | 7cff 6690 | 0f1f 4000 
[Verified Entry Point]
  0x00000150e78572e0: 8984 2400 | 90ff ff55 | 4883 ec50 | 4889 5424 | 2044 3b62 | 1c0f 8571 | 0100 0044 | 8b52 1890 
  0x00000150e7857300: ; implicit exception: dispatches to 0x00000150e78575a1
  0x00000150e7857300: 478b 5cd4 | 2043 8bac | dc84 0000 | 0049 8b54 | ec10 4c8b | 5424 2045 | 8b52 200f | 1f44 0000 
  0x00000150e7857320: ; implicit exception: dispatches to 0x00000150e78575b8
  0x00000150e7857320: 470f bf44 | d428 4533 | c948 8b6c 

  0x00000150e785732c: ;   {static_call}
  0x00000150e785732c: 2420 90e8 

  0x00000150e7857330: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*invokestatic GetDesignGlyphMetrics {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.javafx.font.directwrite.IDWriteFontFace::GetDesignGlyphMetrics@6 (line 39)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::checkMetrics@31 (line 86)
  0x00000150e7857330: 2c87 e0ff | 488b d866 | 0f1f 8400 | 0000 0000 | 4180 7f40 | 000f 8566 | 0100 004c | 8bd3 49c1 
  0x00000150e7857350: ea03 4489 | 551c 4c8b | d54c 8bdb | 4d33 da49 | c1eb 154d | 85db 0f84 | 2e01 0000 | 4885 db0f 
  0x00000150e7857370: 84d1 0100 | 0049 c1ea | 0948 b900 | 3068 eb50 | 0100 0049 | 03ca 8039 | 040f 8559 | 0100 0044 
  0x00000150e7857390: 8b5d 1847 | 8b54 dc20 | 0f1f 8400 | 0000 0000 

  0x00000150e78573a0: ; implicit exception: dispatches to 0x00000150e78575d0
  0x00000150e78573a0: c481 7a10 | 4cd4 2044 | 8965 10c5 | fa2a 4310 | c481 7a59 | 54dc 0cc5 | 7a2c d141 | 81fa 0000 
  0x00000150e78573c0: 0080 7510 | 4883 ec08 | c5fa 110c 

  0x00000150e78573cc: ;   {runtime_call StubRoutines (1)}
  0x00000150e78573cc: 24e8 1f9d | 76ff 415a | c4c1 7a2a | c2c5 ea5e | c0c5 fa11 | 450c 473b | 64dc 340f | 847f 0000 
  0x00000150e78573ec: 0043 8b6c | dc2c 458b | 54ec 0866 | 0f1f 8400 | 0000 0000 

  0x00000150e7857400: ;   {metadata('com/sun/javafx/geom/transform/Affine2D')}
  0x00000150e7857400: 4181 fa60 | a203 010f | 8547 0100 | 00c5 d25a | e84d 8d04 | ecc4 c153 | 5948 10c4 | c153 5950 
  0x00000150e7857420: 18c5 e157 | dbc4 c163 | 5960 20c4 | c163 5958 | 28c5 f358 | ccc5 eb58 | d3bd 0700 | 0000 4123 
  0x00000150e7857440: 680c 83fd | 0775 38c4 | c16b 5840 | 38c4 c173 | 5848 30c5 | eb5a d0c5 | fb5a c14c | 8b54 2420 
  0x00000150e7857460: c4c1 7a11 | 5210 c4c1 | 7a11 420c | 4883 c450 

  0x00000150e7857470: ;   {poll_return}
  0x00000150e7857470: 5d49 3ba7 | 7803 0000 | 0f87 7a01 | 0000 c344 | 8bdd 4183 | c3fa 4183 | fb01 0f87 | e900 0000 
  0x00000150e7857490: c5eb 5ad2 | c5fb 5ac1 | ebc1 660f | 1f44 0000 | 4885 db0f | 85e6 feff | ff48 8beb | e998 0000 
  0x00000150e78574b0: 0044 8b5d | 1c45 85db | 0f84 8dfe | ffff 4d8b | 5728 498b | cb48 c1e1 | 034d 85d2 | 0f84 9200 
  0x00000150e78574d0: 0000 4d8b | 5f38 4b89 | 4c13 f849 | 83c2 f84d | 8957 28e9 | 63fe ffff | 4d8b 5758 | 4d8b 5f48 
  0x00000150e78574f0: f083 4424 | c000 8039 | 0074 3244 | 8821 6690 | 4d85 db74 | 0f4b 894c | 1af8 4983 | c3f8 4d89 
  0x00000150e7857510: 5f48 eb19 | 498b d766 | 0f1f 8400 | 0000 0000 | 49ba 901e | 972b f97f | 0000 41ff | d244 8b5d 
  0x00000150e7857530: 1c49 8bdb | 48c1 e303 | 4585 db0f | 1f44 0000 | 0f85 49fe | ffff 488b | ebba 45ff 

  0x00000150e785754c: ;   {runtime_call UncommonTrapBlob}
  0x00000150e785754c: ffff 90e8 

  0x00000150e7857550: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::checkMetrics@41 (line 87)
  0x00000150e7857550: acf7 7cff | bade ffff | ffc5 fa11 

  0x00000150e785755c: ;   {runtime_call UncommonTrapBlob}
  0x00000150e785755c: 4424 28e8 

  0x00000150e7857560: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*invokevirtual transform {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::checkMetrics@115 (line 93)
  0x00000150e7857560: 9cf7 7cff | 498b d749 | bab0 1e97 | 2bf9 7f00 | 0041 ffd2 | e9d2 fdff | ffba 45ff | ffff 4c89 
  0x00000150e7857580: 4424 28c5 | fb11 6c24 | 30c5 fa11 

  0x00000150e785758c: ;   {runtime_call UncommonTrapBlob}
  0x00000150e785758c: 4424 38e8 

  0x00000150e7857590: ; ImmutableOopMap {[32]=Oop [40]=Oop }
                      ;*tableswitch {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.geom.transform.AffineBase::transform@32 (line 661)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::checkMetrics@115 (line 93)
  0x00000150e7857590: 6cf7 7cff | 488b d048 | 83c4 505d 

  0x00000150e785759c: ;   {runtime_call _rethrow_Java}
  0x00000150e785759c: e95f d387 | ffba f6ff 

  0x00000150e78575a4: ;   {runtime_call UncommonTrapBlob}
  0x00000150e78575a4: ffff 90e8 

  0x00000150e78575a8: ; ImmutableOopMap {}
                      ;*invokevirtual getFontFace {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::checkMetrics@12 (line 84)
  0x00000150e78575a8: 54f7 7cff | ba5e ffff 

  0x00000150e78575b0: ;   {runtime_call UncommonTrapBlob}
  0x00000150e78575b0: ff66 90e8 

  0x00000150e78575b4: ; ImmutableOopMap {}
                      ;*invokevirtual getFontFace {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWFontStrike::getFontFace@9 (line 116)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::checkMetrics@12 (line 84)
  0x00000150e78575b4: 48f7 7cff | baf6 ffff 

  0x00000150e78575bc: ;   {runtime_call UncommonTrapBlob}
  0x00000150e78575bc: ff66 90e8 

  0x00000150e78575c0: ; ImmutableOopMap {}
                      ;*getfield glyphIndices {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::checkMetrics@27 (line 86)
  0x00000150e78575c0: 3cf7 7cff | baf6 ffff 

  0x00000150e78575c8: ;   {runtime_call UncommonTrapBlob}
  0x00000150e78575c8: ff66 90e8 

  0x00000150e78575cc: ; ImmutableOopMap {}
                      ;*invokevirtual getUpem {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::checkMetrics@48 (line 88)
  0x00000150e78575cc: 30f7 7cff | ba5e ffff 

  0x00000150e78575d4: ;   {runtime_call UncommonTrapBlob}
  0x00000150e78575d4: ff66 90e8 

  0x00000150e78575d8: ; ImmutableOopMap {}
                      ;*invokevirtual getUnitsPerEm {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWFontStrike::getUpem@7 (line 125)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::checkMetrics@48 (line 88)
  0x00000150e78575d8: 24f7 7cff | baf6 ffff | ffc5 f97e 

  0x00000150e78575e4: ;   {runtime_call UncommonTrapBlob}
  0x00000150e78575e4: c566 90e8 

  0x00000150e78575e8: ; ImmutableOopMap {}
                      ;*invokevirtual transform {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::checkMetrics@115 (line 93)
  0x00000150e78575e8: 14f7 7cff | ba45 ffff 

  0x00000150e78575f0: ;   {runtime_call UncommonTrapBlob}
  0x00000150e78575f0: ff66 90e8 

  0x00000150e78575f4: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::checkMetrics@17 (line 85)
  0x00000150e78575f4: 08f7 7cff 

  0x00000150e78575f8: ;   {internal_word}
  0x00000150e78575f8: 49ba 7174 | 85e7 5001 | 0000 4d89 | 9790 0300 

  0x00000150e7857608: ;   {runtime_call SafepointBlob}
  0x00000150e7857608: 00e9 f207 | 7dff f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 
[Stub Code]
  0x00000150e7857620: ;   {no_reloc}
  0x00000150e7857620: 48bb 0000 | 0000 0000 

  0x00000150e7857628: ;   {runtime_call}
  0x00000150e7857628: 0000 e9fb 

  0x00000150e785762c: ;   {runtime_call ExceptionBlob}
  0x00000150e785762c: ffff ffe9 | cc0b 87ff 
[Deopt Handler Code]
  0x00000150e7857634: e800 0000 | 0048 832c 

  0x00000150e785763c: ;   {runtime_call DeoptimizationBlob}
  0x00000150e785763c: 2405 e95d | fa7c fff4 | f4f4 f4f4 
[/MachCode]


Compiled method (c2)  183258 2782   !   4       com.sun.prism.impl.GlyphCache::getCachedGlyph (491 bytes)
 total in heap  [0x00000150e7661a10,0x00000150e7665868] = 15960
 relocation     [0x00000150e7661b70,0x00000150e7661d70] = 512
 main code      [0x00000150e7661d80,0x00000150e7663b00] = 7552
 stub code      [0x00000150e7663b00,0x00000150e7663c70] = 368
 oops           [0x00000150e7663c70,0x00000150e7663c78] = 8
 metadata       [0x00000150e7663c78,0x00000150e7663e20] = 424
 scopes data    [0x00000150e7663e20,0x00000150e7664ff8] = 4568
 scopes pcs     [0x00000150e7664ff8,0x00000150e7665478] = 1152
 dependencies   [0x00000150e7665478,0x00000150e76654c8] = 80
 handler table  [0x00000150e76654c8,0x00000150e76657c8] = 768
 nul chk table  [0x00000150e76657c8,0x00000150e7665868] = 160

[Constant Pool (empty)]

[MachCode]
[Entry Point]
  # {method} {0x00000150f90e5280} 'getCachedGlyph' '(II)Lcom/sun/prism/impl/GlyphCache$GlyphData;' in 'com/sun/prism/impl/GlyphCache'
  # this:     rdx:rdx   = 'com/sun/prism/impl/GlyphCache'
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0xb0]  (sp of caller)
  0x00000150e7661d80: 448b 5208 | 49bb 0000 | 0000 0800 | 0000 4d03 | d349 3bc2 

  0x00000150e7661d94: ;   {runtime_call ic_miss_stub}
  0x00000150e7661d94: 0f85 e6f9 | 9bff 6690 | 0f1f 4000 
[Verified Entry Point]
  0x00000150e7661da0: 8984 2400 | 90ff ff55 | 4881 eca0 | 0000 0044 | 894c 2440 | 4489 4424 | 3848 8954 | 2450 448b 
  0x00000150e7661dc0: 5218 458b | d841 c1eb | 0545 8bc1 | 41c1 e01b | 450b d844 | 8b4c 2438 | 4183 e11f | 4489 4c24 
  0x00000150e7661de0: 4445 8bcb | 4181 c180 | 0000 0049 | 63f3 4181 | f900 0100 | 000f 838a 

  0x00000150e7661df8: ;   {oop(a 'java/lang/Integer'[256] {0x0000000741b48f90})}
  0x00000150e7661df8: 0b00 0049 | b890 8fb4 | 4107 0000 | 0045 8b84 | b010 0200 | 004b 8d04 | c447 8b44 | d408 6666 
  0x00000150e7661e18: 0f1f 8400 | 0000 0000 

  0x00000150e7661e20: ;   {metadata('java/util/HashMap')}
  0x00000150e7661e20: 4181 f800 | b80a 000f | 85c6 1300 | 004c 8b44 | 2450 418b | 6818 418b | dbc1 eb10 | 4133 db49 
  0x00000150e7661e40: c1e2 0345 | 8b52 2445 | 85d2 0f84 | 370c 0000 | 438b 4cd4 | 0c85 c90f | 8630 1400 | 0049 c1e2 
  0x00000150e7661e60: 03ff c923 | cb41 8b7c | 8a10 85ff | 0f84 8701 | 0000 458b | 44fc 0c49 | 8d14 fc0f | 1f44 0000 
  0x00000150e7661e80: 443b c30f | 84c2 0000 | 0048 8bc8 | 458b 44fc | 1845 85c0 | 0f84 d70a | 0000 418b | 7cfc 0890 
  0x00000150e7661ea0: ;   {metadata('java/util/HashMap$TreeNode')}
  0x00000150e7661ea0: 81ff 9865 | 1c00 0f85 | 390a 0000 | 448b 4228 | 4585 c00f | 84a9 0a00 | 0089 5c24 | 3c48 894c 
  0x00000150e7661ec0: 2448 4889 | 7424 3044 | 894c 2424 | 4489 5c24 

  0x00000150e7661ed0: ;   {optimized virtual_call}
  0x00000150e7661ed0: 2c66 90e8 

  0x00000150e7661ed4: ; ImmutableOopMap {[72]=Oop [80]=Oop }
                      ;*invokevirtual root {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.HashMap$TreeNode::getTreeNode@8 (line 2048)
                      ; - java.util.HashMap::getNode@95 (line 582)
                      ; - java.util.HashMap::get@2 (line 564)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
  0x00000150e7661ed4: a8fb 9bff | 4885 c00f | 1f44 0000 | 0f84 9014 | 0000 488b | d044 8b5c | 242c 488b | 4c24 488b 
  0x00000150e7661ef4: 5c24 3c89 | 5c24 2c44 | 895c 2428 | 448b c34c | 8bc9 33ff 

  0x00000150e7661f08: ;   {optimized virtual_call}
  0x00000150e7661f08: 6666 90e8 

  0x00000150e7661f0c: ; ImmutableOopMap {[80]=Oop }
                      ;*invokevirtual find {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.HashMap$TreeNode::getTreeNode@18 (line 2048)
                      ; - java.util.HashMap::getNode@95 (line 582)
                      ; - java.util.HashMap::get@2 (line 564)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
  0x00000150e7661f0c: 70fb 9bff | 4c8b 5424 | 5041 8b6a | 1848 85c0 | 0f1f 4000 | 0f84 df00 | 0000 488b | d049 bd00 
  0x00000150e7661f2c: 3068 eb50 | 0100 0044 | 8b5c 2428 | 448b 4c24 | 2448 8b74 | 2430 8b5c | 242c e948 | 0000 0045 
  0x00000150e7661f4c: 8b44 fc10 | 4d8b d049 | c1e2 0348 | 8bc8 660f | 1f44 0000 | 4c3b d074 | 2447 8b54 

  0x00000150e7661f68: ;   {metadata('java/lang/Integer')}
  0x00000150e7661f68: c408 4181 | fa30 c703 | 000f 8515 | ffff ff4f | 8d14 c445 | 8b42 0c90 | 453b d80f | 8503 ffff 
  0x00000150e7661f88: ff49 bd00 | 3068 eb50 | 0100 0044 | 8b52 1445 | 85d2 660f | 1f44 0000 | 0f84 7c00 | 0000 478b 
  0x00000150e7661fa8: ;   {metadata('com/sun/prism/impl/GlyphCache$GlyphData'[])}
  0x00000150e7661fa8: 44d4 0841 | 81f8 00c0 | 2101 0f85 | 8816 0000 | 4b8d 1cd4 | 448b 5b0c | 448b 5424 | 4445 3bd3 
  0x00000150e7661fc8: 0f83 4e12 | 0000 468b | 5c93 1045 | 85db 0f84 | e702 0000 | 498b c348 | c1e0 0348 | 81c4 a000 
  0x00000150e7661fe8: ;   {poll_return}
  0x00000150e7661fe8: 0000 5d49 | 3ba7 7803 | 0000 0f87 | dc1a 0000 | c349 bd00 | 3068 eb50 | 0100 00eb | 1d49 bd00 
  0x00000150e7662008: 3068 eb50 | 0100 0044 | 8b5c 2428 | 448b 4c24 | 2448 8b74 | 2430 8b5c | 242c 4d8b | 87f8 0000 
  0x00000150e7662028: 004d 8bd0 | 4981 c290 | 0000 0066 | 0f1f 8400 | 0000 0000 | 6666 6690 | 4d3b 9708 | 0100 000f 
  0x00000150e7662048: 8358 0f00 | 004d 8997 | f800 0000 | 410f 0d8a | c000 0000 | 49c7 0001 | 0000 0041 | 0f0d 8a00 
  0x00000150e7662068: ;   {metadata('com/sun/prism/impl/GlyphCache$GlyphData'[])}
  0x00000150e7662068: 0100 0041 | c740 0800 | c021 0141 | 0f0d 8a40 | 0100 0041 | c740 0c20 | 0000 0041 | 0f0d 8a80 
  0x00000150e7662088: 0100 0049 | 8bf8 4883 | c710 b910 | 0000 00c5 | fdef c0e9 | 0d00 0000 | c5fe 7f07 | c5fe 7f47 
  0x00000150e76620a8: 2048 83c7 | 4048 83e9 | 087d ed48 | 83c1 047c | 0cc5 fe7f | 0748 83c7 | 2048 83e9 | 0448 83c1 
  0x00000150e76620c8: 047e 1048 | ffc9 c5f9 | d607 4883 | c708 48ff | c97d f34c | 8984 2480 | 0000 0041 | 81f9 0001 
  0x00000150e76620e8: 0000 0f83 | 1e0b 0000 

  0x00000150e76620f0: ;   {oop(a 'java/lang/Integer'[256] {0x0000000741b48f90})}
  0x00000150e76620f0: 49ba 908f | b441 0700 | 0000 458b | 94b2 1002 | 0000 49c1 | e203 4c89 | 5424 6045 | 8b54 ec08 
  0x00000150e7662110: ;   {metadata('java/util/HashMap')}
  0x00000150e7662110: 4181 fa00 | b80a 000f | 8517 1300 | 004d 8d14 | ec4c 8954 | 2458 458b | 4a24 4585 | c90f 8409 
  0x00000150e7662130: 0900 0047 | 8b44 cc0c | 4585 c00f | 1f44 0000 | 0f86 d613 | 0000 4b8d | 3ccc 458b | d041 ffca 
  0x00000150e7662150: 4423 d345 | 85c0 0f8e | 1013 0000 | 4e8d 4497 | 1048 897c | 2468 418b | 304c 8984 | 2488 0000 
  0x00000150e7662170: 004c 8b84 | 2480 0000 | 004d 8bc8 | 49c1 e903 | 4489 4c24 | 244c 8b44 | 2460 498b | c848 c1e9 
  0x00000150e7662190: 0385 f60f | 85ec 0500 | 0049 8baf | f800 0000 | 4c8b dd49 | 83c3 204d | 3b9f 0801 | 0000 0f83 
  0x00000150e76621b0: 480e 0000 | 4d89 9ff8 | 0000 0041 | 0f0d 8bc0 | 0000 0048 | c745 0001 

  0x00000150e76621c8: ;   {metadata('java/util/HashMap$Node')}
  0x00000150e76621c8: 0000 00c7 | 4508 b860 | 1c00 4c89 | 6510 4c89 | 6518 895d | 0c89 4d10 | 448b 5c24 | 2444 895d 
  0x00000150e76621e8: 144c 8b4c | 2468 458b | 5908 6666 | 0f1f 8400 | 0000 0000 | 6666 6690 

  0x00000150e7662200: ;   {metadata('java/util/HashMap$Node'[])}
  0x00000150e7662200: 4181 fbd0 | 5e1c 000f | 8563 1300 

  0x00000150e766220c: ;   {metadata('java/util/HashMap$Node'[])}
  0x00000150e766220c: 0049 bbd0 | 5e1c 0008 | 0000 0049 | 8b83 d000 | 0000 448b | 4014 4d63 

  0x00000150e7662224: ;   {metadata('java/util/HashMap$Node')}
  0x00000150e7662224: d848 beb8 | 601c 0008 | 0000 004e | 8b1c 1e49 | 3bc3 0f85 | a007 0000 | 0f1f 4000 | 4180 7f40 
  0x00000150e7662244: 000f 8504 | 0c00 004c | 8b84 2488 | 0000 004c | 8bd5 49c1 | ea03 4589 | 104d 8bd0 | 4c8b dd4d 
  0x00000150e7662264: 33da 49c1 | eb15 4d85 | db74 2649 | c1ea 0948 | b900 3068 | eb50 0100 | 0049 03ca | 8039 040f 
  0x00000150e7662284: 850a 0c00 | 00eb 0a48 | 896c 2450 | 4c8b 6c24 | 284c 8b54 | 2458 41ff | 4218 458b | 5a1c 458b 
  0x00000150e76622a4: 5214 41ff | c24c 8b44 | 2458 4589 | 5014 453b | d30f 8f9d | 0900 0048 | 8b9c 2480 | 0000 004c 
  0x00000150e76622c4: 8b54 2450 | 458b 5a14 

  0x00000150e76622cc: ; implicit exception: dispatches to 0x00000150e7663680
  0x00000150e76622cc: 478b 44dc 

  0x00000150e76622d0: ;   {metadata('com/sun/javafx/font/CompositeStrike')}
  0x00000150e76622d0: 0841 81f8 | 48a8 1e01 | 0f85 ee10 | 0000 4889 | 5c24 304c | 896c 2428 | 448b 4424 | 3841 c1e8 
  0x00000150e76622f0: 188b 6c24 | 3881 e5ff | ffff 004b 

  0x00000150e76622fc: ;   {optimized virtual_call}
  0x00000150e76622fc: 8d14 dce8 

  0x00000150e7662300: ; ImmutableOopMap {[48]=Oop [80]=Oop }
                      ;*invokevirtual getStrikeSlot {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.javafx.font.CompositeStrike::getGlyph@12 (line 163)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@81 (line 257)
  0x00000150e7662300: dc78 ffff | 488b d044 | 8bc5 6666 | 9048 b838 | 111c 0108 

  0x00000150e7662314: ;   {virtual_call}
  0x00000150e7662314: 0000 00e8 

  0x00000150e7662318: ; ImmutableOopMap {[48]=Oop [80]=Oop }
                      ;*invokeinterface getGlyph {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.javafx.font.CompositeStrike::getGlyph@16 (line 163)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@81 (line 257)
  0x00000150e7662318: 040b 2400 | 0f1f 4000 

  0x00000150e7662320: ; implicit exception: dispatches to 0x00000150e7663838
  0x00000150e7662320: 448b 5008 

  0x00000150e7662324: ;   {metadata('com/sun/javafx/font/directwrite/DWGlyph')}
  0x00000150e7662324: 4181 fa30 | 4c20 010f | 85af 1000 | 0048 8944 | 2438 488b | d044 8b44 

  0x00000150e766233c: ;   {optimized virtual_call}
  0x00000150e766233c: 2440 90e8 

  0x00000150e7662340: ; ImmutableOopMap {[48]=Oop [56]=Oop [80]=Oop }
                      ;*invokeinterface getPixelData {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@96 (line 259)
  0x00000150e7662340: fcc4 2300 

  0x00000150e7662344: ; implicit exception: dispatches to 0x00000150e766385c
  0x00000150e7662344: 448b 580c | 4585 db0f | 86a1 1100 | 0048 8944 | 2448 488b 

  0x00000150e7662358: ;   {optimized virtual_call}
  0x00000150e7662358: 5424 38e8 

  0x00000150e766235c: ; ImmutableOopMap {[48]=Oop [56]=Oop [72]=Oop [80]=Oop }
                      ;*invokevirtual checkBounds {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getOriginX@1 (line 387)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@148 (line 271)
  0x00000150e766235c: 609f 0900 | 4c8b 5424 | 3845 8b5a | 2447 8b5c | dc0c 4489 | 5c24 4049 | 8bea 498b 

  0x00000150e7662378: ;   {optimized virtual_call}
  0x00000150e7662378: d266 90e8 

  0x00000150e766237c: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop [72]=Oop [80]=Oop }
                      ;*invokevirtual checkBounds {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getOriginY@1 (line 393)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@155 (line 272)
  0x00000150e766237c: 409f 0900 | 4c8b c545 | 8b50 2447 | 8b5c d410 | 4489 5c24 | 5849 8bd0 

  0x00000150e7662394: ;   {optimized virtual_call}
  0x00000150e7662394: 6666 90e8 

  0x00000150e7662398: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop [72]=Oop [80]=Oop }
                      ;*invokevirtual checkBounds {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getWidth@1 (line 375)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@162 (line 273)
  0x00000150e7662398: 249f 0900 | 4c8b d545 | 8b5a 2443 | 8b6c dc14 | 432b 6cdc | 0c49 8bd2 

  0x00000150e76623b0: ;   {optimized virtual_call}
  0x00000150e76623b0: 6666 90e8 

  0x00000150e76623b4: ; ImmutableOopMap {[48]=Oop [56]=Oop [72]=Oop [80]=Oop }
                      ;*invokevirtual isLCDGlyph {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getWidth@20 (line 376)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@162 (line 273)
  0x00000150e76623b4: 889c 1f00 | 85c0 660f | 1f44 0000 | 0f84 0d06 | 0000 448b | d545 8d1c | 6a44 895c | 245c 488b 
  0x00000150e76623d4: ;   {optimized virtual_call}
  0x00000150e76623d4: 5424 38e8 

  0x00000150e76623d8: ; ImmutableOopMap {[48]=Oop [56]=Oop [72]=Oop [80]=Oop }
                      ;*invokevirtual checkBounds {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getHeight@1 (line 381)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@169 (line 274)
  0x00000150e76623d8: e49e 0900 | 4c8b 5c24 | 3845 8b53 | 2447 8b44 | d418 472b | 44d4 1049 | 8b87 f800 | 0000 4c8b 
  0x00000150e76623f8: d049 83c2 | 2066 6690 | 4d3b 9708 | 0100 000f | 8312 0b00 | 004d 8997 | f800 0000 | 410f 0d8a 
  0x00000150e7662418: c000 0000 | 48c7 0001 

  0x00000150e7662420: ;   {metadata('com/sun/prism/impl/shape/MaskData')}
  0x00000150e7662420: 0000 00c7 | 4008 f0c3 | 2101 4489 | 600c 4c89 | 6010 4c89 | 6018 4489 | 4424 2448 | 8be8 488b 
  0x00000150e7662440: ;   {static_call}
  0x00000150e7662440: 5424 48e8 

  0x00000150e7662444: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop [80]=Oop }
                      ;*invokestatic wrap {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.shape.MaskData::create@12 (line 87)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@174 (line 270)
  0x00000150e7662444: d856 1f00 | 488b d54c | 8bc0 448b | 4c24 408b | 7c24 588b | 7424 5c8b 

  0x00000150e766245c: ;   {optimized virtual_call}
  0x00000150e766245c: 4c24 24e8 

  0x00000150e7662460: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop [80]=Oop }
                      ;*invokevirtual update {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.shape.MaskData::create@20 (line 87)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@174 (line 270)
  0x00000150e7662460: bc10 feff | 4c8b cd44 | 8b45 1044 | 8b5d 0c49 | 8b87 f800 | 0000 4c8b | d049 83c2 | 20b9 0200 
  0x00000150e7662480: 0000 034d | 14bf 0200 | 0000 037d | 184d 3b97 | 0801 0000 | 0f83 cb0a | 0000 4d89 | 97f8 0000 
  0x00000150e76624a0: 0041 0f0d | 8ac0 0000 | 0048 c700 | 0100 0000 

  0x00000150e76624b0: ;   {metadata('com/sun/javafx/geom/Rectangle')}
  0x00000150e76624b0: c740 0898 | ab1d 0144 | 8960 0c44 | 8960 1044 | 8960 1c89 | 4814 8978 | 1849 8baf | f800 0000 
  0x00000150e76624d0: 4c8b d549 | 83c2 2866 | 0f1f 8400 | 0000 0000 | 4d3b 9708 | 0100 000f | 834c 0a00 | 004d 8997 
  0x00000150e76624f0: f800 0000 | 410f 0d8a | c000 0000 | 48c7 4500 | 0100 0000 

  0x00000150e7662504: ;   {metadata('com/sun/prism/impl/GlyphCache$GlyphData')}
  0x00000150e7662504: c745 08c0 | 7c21 0144 | 8965 0c4c | 8965 104c | 8965 184c | 8965 204c | 894c 2448 | 4489 4424 
  0x00000150e7662524: 2444 895c | 2440 4889 | 4424 5848 | 8b54 2438 

  0x00000150e7662534: ;   {optimized virtual_call}
  0x00000150e7662534: 6666 90e8 

  0x00000150e7662538: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop [72]=Oop [80]=Oop [88]=Oop }
                      ;*invokevirtual checkMetrics {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getPixelXAdvance@1 (line 363)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@247 (line 284)
  0x00000150e7662538: a44d 1f00 | 4c8b 5424 | 38c4 c17a | 1042 0cc5 | fa11 4424 | 6049 8bd2 

  0x00000150e7662550: ;   {optimized virtual_call}
  0x00000150e7662550: 6666 90e8 

  0x00000150e7662554: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop [72]=Oop [80]=Oop [88]=Oop }
                      ;*invokevirtual checkMetrics {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getPixelYAdvance@1 (line 369)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@254 (line 285)
  0x00000150e7662554: 884d 1f00 | 0f1f 8400 | 0000 0000 | 4180 7f40 | 000f 85e4 | 0700 00c5 | fa10 4424 | 60c5 fa11 
  0x00000150e7662574: 4518 448b | 5c24 2444 | 895d 1044 | 8b54 2440 | 4489 550c | c745 1401 | 0000 004c | 8b54 2438 
  0x00000150e7662594: c4c1 7a10 | 4210 c5fa | 1145 1c48 | 8b5c 2458 | 4c8b db49 | c1eb 0344 | 895d 204c | 8bd3 4c8b 
  0x00000150e76625b4: dd4d 33d3 | 49c1 ea15 | 0f1f 4000 | 4d85 d274 | 1a49 c1eb | 0948 b900 | 3068 eb50 | 0100 0049 
  0x00000150e76625d4: 03cb 8039 | 040f 85e0 | 0700 004c | 8b54 2450 | 458b 5a1c | 4585 db0f | 84ab 0d00 | 0048 ff74 
  0x00000150e76625f4: 2458 488f | 4424 504c | 8954 2438 | 4b8d 14dc | 4c8b 4424 

  0x00000150e7662608: ;   {optimized virtual_call}
  0x00000150e7662608: 5866 90e8 

  0x00000150e766260c: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop [72]=Oop [80]=Oop [88]=Oop }
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@272 (line 288)
  0x00000150e766260c: 30a9 2300 | 85c0 0f84 | fb06 0000 | 4c8b 5424 | 3845 8b5a | 1c47 8b5c | dc28 488b | 5c24 5044 
  0x00000150e766262c: 8b4b 188b | 4b14 478b | 54dc 0866 | 0f1f 8400 | 0000 0000 

  0x00000150e7662640: ;   {metadata('com/sun/prism/d3d/D3DTexture')}
  0x00000150e7662640: 4181 fa98 | 0d21 010f | 85af 0d00 | 004b 8d3c | dc8b 4738 

  0x00000150e7662654: ; implicit exception: dispatches to 0x00000150e7663758
  0x00000150e7662654: 458b 5cc4 | 1c0f 1f80 | 0000 0000 

  0x00000150e7662660: ; implicit exception: dispatches to 0x00000150e7663790
  0x00000150e7662660: 478b 5cdc | 1445 0faf | 5cc4 1444 | 0faf d941 | 8bd3 410f 

  0x00000150e7662674: ;   {oop(a 'java/lang/Class'{0x000000074574c7a8} = 'com/sun/prism/impl/GlyphCache')}
  0x00000150e7662674: afd1 49ba | a8c7 7445 | 0700 0000 | 458b 4270 

  0x00000150e7662684: ; implicit exception: dispatches to 0x00000150e766388c
  0x00000150e7662684: 438b 74c4 | 203b d60f | 8fed 0500 | 0044 894c | 2424 894c | 2438 4889 | 7c24 5844 | 895c 243c 
  0x00000150e76626a4: 8b7b 0c8b | 7310 4889 | 5c24 5049 | c1e0 034c | 8bc8 49c1 | e103 488b | 5424 5833 | c945 33db 
  0x00000150e76626c4: 4489 1c24 | 448b 5c24 | 3844 895c | 2408 448b | 5424 2444 | 8954 2410 | 448b 5c24 | 3c44 895c 
  0x00000150e76626e4: 2418 41ba | 0100 0000 | 4489 5424 

  0x00000150e76626f0: ;   {optimized virtual_call}
  0x00000150e76626f0: 2066 90e8 

  0x00000150e76626f4: ; ImmutableOopMap {rbp=Oop [48]=Oop [72]=Oop [80]=Oop [88]=Oop }
                      ;*invokeinterface update {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@433 (line 322)
  0x00000150e76626f4: e81e 1f00 | 4c8b 5424 | 5045 8b4a | 0c41 8b7a | 1041 ffc1 | ffc7 488b | 5424 484c | 8b44 2458 
  0x00000150e7662714: be01 0000 

  0x00000150e7662718: ;   {optimized virtual_call}
  0x00000150e7662718: 0066 90e8 

  0x00000150e766271c: ; ImmutableOopMap {rbp=Oop [48]=Oop }
                      ;*invokevirtual uploadToTexture {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@478 (line 334)
  0x00000150e766271c: a0d1 2300 | 4c8b 5c24 | 3045 8b53 | 0c44 8b4c | 2444 453b | ca0f 8385 | 0c00 004b | 8d5c 8b10 
  0x00000150e766273c: 0f1f 4000 | 4180 7f40 | 000f 853b | 0600 004c | 8bd3 4c8b | dd49 c1eb | 0344 891b | 4c8b dd4d 
  0x00000150e766275c: 33da 49c1 | eb15 4d85 | db74 1649 | c1ea 094c | 8b44 2428 | 4d03 c241 | 8038 040f | 8588 0600 
  0x00000150e766277c: 0048 8bc5 | e95e f8ff | ff45 8b4c | f40c 498d | 3cf4 443b | cb0f 8533 | 0000 0045 | 8b54 f410 
  0x00000150e766279c: 4d8b ca49 | c1e1 034d | 3bc8 0f84 | 9c00 0000 

  0x00000150e76627ac: ; implicit exception: dispatches to 0x00000150e7663918
  0x00000150e76627ac: 438b 54d4 

  0x00000150e76627b0: ;   {metadata('java/lang/Integer')}
  0x00000150e76627b0: 0881 fa30 | c703 0075 | 1149 c1e2 | 0345 8b4a | 0c45 3bd9 | 0f84 7e00 | 0000 458b 

  0x00000150e76627cc: ;   {metadata('java/util/HashMap$TreeNode')}
  0x00000150e76627cc: 54f4 0841 | 81fa 9865 | 1c00 0f85 | ba02 0000 | 448b 5c24 | 2444 895c | 243c 4c8b | 4c24 6848 
  0x00000150e76627ec: ff74 2458 | 488f 4424 | 484c 8b94 | 2480 0000 | 004c 8954 | 2430 4c89 | 6c24 2848 | 8b6c 2450 
  0x00000150e766280c: 488b d74c | 8b44 2448 | 8bfb 488b | 7424 6048 | 8b4c 2430 

  0x00000150e7662820: ;   {optimized virtual_call}
  0x00000150e7662820: 6666 90e8 

  0x00000150e7662824: ; ImmutableOopMap {rbp=Oop [48]=Oop [60]=NarrowOop [72]=Oop [88]=Oop [128]=Oop }
                      ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.HashMap::putVal@123 (line 644)
                      ; - java.util.HashMap::put@9 (line 618)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@69 (line 252)
  0x00000150e7662824: 58f2 9bff | 488b f848 | 85c0 0f84 | 57fa ffff | 4889 6c24 | 504c 8b6c | 2428 448b | 5424 3c44 
  0x00000150e7662844: 8954 2424 | 4180 7f40 | 000f 8592 | 0600 0044 | 8b5c 2424 | 4489 5f14 | 4c8b d74c | 8b9c 2480 
  0x00000150e7662864: 0000 004d | 33da 49c1 | eb15 4d85 | db0f 8444 | faff ff49 | c1ea 0948 | b900 3068 | eb50 0100 
  0x00000150e7662884: 0049 03ca | 8039 040f | 842a faff | ff4d 8b57 | 584d 8b5f | 48f0 8344 | 24c0 0090 | 8039 000f 
  0x00000150e76628a4: 8412 faff | ff44 8821 | 4d85 db75 | 2149 8bd7 | 0f1f 8400 | 0000 0000 | 6666 6690 | 49ba 901e 
  0x00000150e76628c4: 972b f97f | 0000 41ff | d2e9 e9f9 | ffff 4b89 | 4c1a f849 | 83c3 f84d | 895f 4890 | e9d6 f9ff 
  0x00000150e76628e4: ff4b 8d14 | c449 bd00 | 3068 eb50 | 0100 0044 | 8b52 0c44 | 3bd3 660f | 1f44 0000 | 0f85 3900 
  0x00000150e7662904: 0000 448b | 5210 4d8b | c249 c1e0 | 034c 3bc1 | 0f84 79f6 | ffff 660f | 1f44 0000 

  0x00000150e7662920: ; implicit exception: dispatches to 0x00000150e76638d8
  0x00000150e7662920: 478b 44d4 

  0x00000150e7662924: ;   {metadata('java/lang/Integer')}
  0x00000150e7662924: 0841 81f8 | 30c7 0300 | 7511 49c1 | e203 458b | 420c 453b | d80f 8454 | f6ff ff49 | 8b87 8003 
  0x00000150e7662944: 0000 448b | 4218 4c8b 

  0x00000150e766294c: ; ImmutableOopMap {r10=Oop r8=NarrowOop rcx=Oop rbp=NarrowOop [80]=Oop }
                      ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.HashMap::getNode@145 (line 587)
                      ; - java.util.HashMap::get@2 (line 564)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
                      ;   {poll}
  0x00000150e766294c: 5424 5085 | 0045 85c0 | 0f84 c8f6 | ffff 4b8d | 14c4 6690 | eb91 4489 | 4c24 2448 | 8974 2430 
  0x00000150e766296c: e986 f5ff | ff49 bd00 | 3068 eb50 | 0100 000f | 1f44 0000 | e99d f6ff | ff49 8b87 | f800 0000 
  0x00000150e766298c: 4c8b c049 | 83c0 1066 | 0f1f 8400 | 0000 0000 | 6666 6690 | 4d3b 8708 | 0100 000f | 8358 0700 
  0x00000150e76629ac: 004d 8987 | f800 0000 | 410f 0d88 | c000 0000 | 48c7 0001 

  0x00000150e76629c0: ;   {metadata('java/lang/Integer')}
  0x00000150e76629c0: 0000 00c7 | 4008 30c7 | 0300 4489 | 580c e93e | f4ff ff89 | 6c24 5ce9 | f6f9 ffff | 0f1f 4000 
  0x00000150e76629e0: 4183 f820 | 7529 483b | c60f 844d | f8ff ff48 | 8b7e 288b | 0f48 83c7 | 0848 85c0 | f248 af0f 
  0x00000150e7662a00: 8504 0000 | 0048 8946 | 200f 842d | f8ff ffba | d6ff ffff | 448b 5c24 | 3844 895c | 2424 448b 
  0x00000150e7662a20: 4424 4044 | 8944 2430 | 448b 5c24 | 4444 895c | 2434 4489 

  0x00000150e7662a34: ;   {runtime_call UncommonTrapBlob}
  0x00000150e7662a34: 5424 48e8 

  0x00000150e7662a38: ; ImmutableOopMap {rbp=Oop [80]=Oop [104]=Oop [128]=Oop }
                      ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.HashMap::putVal@59 (line 637)
                      ; - java.util.HashMap::put@9 (line 618)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@69 (line 252)
  0x00000150e7662a38: c442 9cff | 4c8b 9424 | 8000 0000 | 4c89 5424 | 484c 896c | 2430 895c | 2428 4489 | 5c24 2448 
  0x00000150e7662a58: 8b6c 2450 | 488b 5424 

  0x00000150e7662a60: ;   {optimized virtual_call}
  0x00000150e7662a60: 5866 90e8 

  0x00000150e7662a64: ; ImmutableOopMap {rbp=Oop [72]=Oop [88]=Oop [96]=Oop [128]=Oop }
                      ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.HashMap::putVal@20 (line 635)
                      ; - java.util.HashMap::put@9 (line 618)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@69 (line 252)
  0x00000150e7662a64: 782f 66f8 

  0x00000150e7662a68: ; implicit exception: dispatches to 0x00000150e7663968
  0x00000150e7662a68: 448b 400c | 4889 6c24 | 5044 8b5c | 2424 8b5c | 2428 4c8b | 6c24 3048 | 8bf8 e9c3 | f6ff ff49 
  0x00000150e7662a88: bd00 3068 | eb50 0100 | 00e9 8cf5 | ffff 458b | 4cf4 180f | 1f44 0000 | 4585 c90f | 85e6 0000 
  0x00000150e7662aa8: 0033 ed49 | 8bb7 f800 | 0000 4c8b | d649 83c2 | 200f 1f80 | 0000 0000 | 4d3b 9708 | 0100 000f 
  0x00000150e7662ac8: 83ff 0700 | 004d 8997 | f800 0000 | 410f 0d8a | c000 0000 | 48c7 0601 

  0x00000150e7662ae0: ;   {metadata('java/util/HashMap$Node')}
  0x00000150e7662ae0: 0000 00c7 | 4608 b860 | 1c00 4c89 | 6610 4c89 | 6618 895e | 0c89 4e10 | 448b 5424 | 2444 8956 
  0x00000150e7662b00: 1441 807f | 4000 0f85 | 7905 0000 | 4c8b de49 | c1eb 0344 | 895f 184c | 8bd7 4c8b | de4d 33da 
  0x00000150e7662b20: 49c1 eb15 | 4d85 db74 | 2049 c1ea | 0948 b900 | 3068 eb50 | 0100 0049 | 03ca 660f | 1f44 0000 
  0x00000150e7662b40: 8039 040f | 8576 0500 | 0083 fd07 | 0f8c 43f7 | ffff 4c8b | 5424 684c | 8b9c 2480 | 0000 004c 
  0x00000150e7662b60: 895c 2430 | 4c89 6c24 | 2848 8b6c | 2450 488b | 5424 584d | 8bc2 448b 

  0x00000150e7662b78: ;   {optimized virtual_call}
  0x00000150e7662b78: cb66 90e8 

  0x00000150e7662b7c: ; ImmutableOopMap {rbp=Oop [48]=Oop [88]=Oop [128]=Oop }
                      ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.HashMap::putVal@169 (line 650)
                      ; - java.util.HashMap::put@9 (line 618)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@69 (line 252)
  0x00000150e7662b7c: 00ef 9bff | 4889 6c24 | 504c 8b6c | 2428 e906 | f7ff ff4b | 8d3c cc33 | ed44 8b57 | 0c44 3bd3 
  0x00000150e7662b9c: 0f1f 4000 | 0f85 3800 | 0000 448b | 5710 4d8b | ca49 c1e1 | 034d 3bc8 | 0f84 8efc | ffff 660f 
  0x00000150e7662bbc: 1f44 0000 

  0x00000150e7662bc0: ; implicit exception: dispatches to 0x00000150e7663974
  0x00000150e7662bc0: 438b 54d4 

  0x00000150e7662bc4: ;   {metadata('java/lang/Integer')}
  0x00000150e7662bc4: 0881 fa30 | c703 0075 | 1149 c1e2 | 0345 8b4a | 0c45 3bd9 | 0f84 6afc | ffff 4d8b | b780 0300 
  0x00000150e7662be4: 008b 5718 | ffc5 488b | b424 8000 | 0000 488b | 4424 58c5 | fb10 5424 

  0x00000150e7662bfc: ; ImmutableOopMap {r8=Oop rcx=NarrowOop rdi=Oop rdx=NarrowOop rsi=Oop rax=Oop xmm2=Oop [36]=NarrowOop [80]=Oop [88]=Oop [104]=Oop [128]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.HashMap::putVal@219 (line 646)
                      ; - java.util.HashMap::put@9 (line 618)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@69 (line 252)
                      ;   {poll}
  0x00000150e7662bfc: 6841 8506 | 85d2 0f84 | a3fe ffff | 498d 3cd4 | eb87 498b | 87f8 0000 | 004c 8bd0 | 4983 c210 
  0x00000150e7662c1c: 0f1f 4000 | 4d3b 9708 | 0100 000f | 8317 0600 | 004d 8997 | f800 0000 | 410f 0d8a | c000 0000 
  0x00000150e7662c3c: 48c7 0001 

  0x00000150e7662c40: ;   {metadata('java/lang/Integer')}
  0x00000150e7662c40: 0000 00c7 | 4008 30c7 | 0300 4489 | 580c 4889 | 4424 60e9 | b3f4 ffff | 4c8b 9424 | 8000 0000 
  0x00000150e7662c60: 4c89 5424 | 484c 896c | 2430 488b 

  0x00000150e7662c6c: ;   {optimized virtual_call}
  0x00000150e7662c6c: 5424 58e8 

  0x00000150e7662c70: ; ImmutableOopMap {[72]=Oop [80]=Oop [88]=Oop [128]=Oop }
                      ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.HashMap::putVal@288 (line 669)
                      ; - java.util.HashMap::put@9 (line 618)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@69 (line 252)
  0x00000150e7662c70: 0cee 9bff | 4c8b 6c24 | 30e9 3df6 | ffff 4889 | 6c24 6044 | 895c 243c | 4889 7c24 | 5089 4c24 
  0x00000150e7662c90: 3844 894c | 2424 488b 

  0x00000150e7662c98: ;   {static_call}
  0x00000150e7662c98: eb66 90e8 

  0x00000150e7662c9c: ; ImmutableOopMap {rbp=Oop [48]=Oop [72]=Oop [80]=Oop [96]=Oop }
                      ;*invokestatic newByteBuffer {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@395 (line 318)
  0x00000150e7662c9c: e0f3 9bff | 488b d841 | 807f 4000 | 0f85 ad04 | 0000 4c8b | c34d 8bd8 | 49c1 eb03 

  0x00000150e7662cb8: ;   {oop(a 'java/lang/Class'{0x000000074574c7a8} = 'com/sun/prism/impl/GlyphCache')}
  0x00000150e7662cb8: 49ba a8c7 | 7445 0700 | 0000 4589 | 5a70 4d8b | d84d 33da | 49c1 eb15 | 4d85 db74 | 1f4d 85c0 
  0x00000150e7662cd8: 741a 49c1 | ea09 48b9 | 0030 68eb | 5001 0000 | 4903 ca80 | 3904 0f85 | ab04 0000 | 4c8b 5424 
  0x00000150e7662cf8: 5041 8b42 | 3849 c1e8 | 0348 8bdd | 4c89 5424 | 5848 8b6c | 2460 e991 | f9ff ff48 | 8b54 2438 
  0x00000150e7662d18: ;   {optimized virtual_call}
  0x00000150e7662d18: 6666 90e8 

  0x00000150e7662d1c: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop [72]=Oop [80]=Oop }
                      ;*invokevirtual clearAll {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@291 (line 293)
  0x00000150e7662d1c: 1b0f 0000 | 4c8b 5c24 | 3845 8b53 | 1c45 85d2 | 0f84 e008 | 0000 4b8d | 14d4 4c8b 

  0x00000150e7662d38: ;   {optimized virtual_call}
  0x00000150e7662d38: 4424 50e8 

  0x00000150e7662d3c: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop [72]=Oop [80]=Oop }
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@300 (line 294)
  0x00000150e7662d3c: 00a2 2300 | 85c0 0f85 | d0f8 ffff | 33c0 e994 | f2ff ff44 | 8b5d 2045 | 85db 0f84 | 0ff8 ffff 
  0x00000150e7662d5c: 4d8b 5728 | 498b cb48 | c1e1 034d | 85d2 0f84 | 5807 0000 | 4d8b 5f38 | 4b89 4c13 | f849 83c2 
  0x00000150e7662d7c: f84d 8957 | 28e9 e5f7 | ffff 448b | 1b45 85db | 0f84 b9f9 | ffff 4d8b | 5728 498b | cb48 c1e1 
  0x00000150e7662d9c: 0366 6690 | 4d85 d20f | 8434 0700 | 004d 8b5f | 384b 894c | 13f8 4983 | c2f8 4d89 | 5728 e98c 
  0x00000150e7662dbc: f9ff ff4d | 8b57 584d | 8b5f 48f0 | 8344 24c0 | 0080 3900 | 0f84 09f8 | ffff 4488 | 214d 85db 
  0x00000150e7662ddc: 7515 498b | d749 ba90 | 1e97 2bf9 | 7f00 0041 | ffd2 e9ec | f7ff ff4b | 894c 1af8 | 4983 c3f8 
  0x00000150e7662dfc: 4d89 5f48 | e9da f7ff | ff4d 8b57 | 484d 8b5f | 58f0 8344 | 24c0 0041 | 8038 000f | 8460 f9ff 
  0x00000150e7662e1c: ff45 8820 | 4d85 d275 | 1849 8bc8 | 498b d749 | ba90 1e97 | 2bf9 7f00 | 0041 ffd2 | e940 f9ff 
  0x00000150e7662e3c: ff4f 8944 | 13f8 4983 | c2f8 4d89 | 5748 e92e | f9ff ff4c | 8b84 2488 | 0000 0045 | 8b18 660f 
  0x00000150e7662e5c: 1f44 0000 | 4585 db0f | 84ea f3ff | ff4d 8b57 | 2849 8bcb | 48c1 e103 | 4d85 d20f | 842b 0700 
  0x00000150e7662e7c: 004d 8b5f | 384b 894c | 13f8 4983 | c2f8 4d89 | 5728 e9c0 | f3ff ff4d | 8b57 584d | 8b5f 48f0 
  0x00000150e7662e9c: 8344 24c0 | 0080 3900 | 0f84 ebf3 | ffff 4488 | 214d 85db | 7520 498b | d766 6666 | 0f1f 8400 
  0x00000150e7662ebc: 0000 0000 | 49ba 901e | 972b f97f | 0000 41ff | d2e9 c3f3 | ffff 4b89 | 4c1a f849 | 83c3 f84d 
  0x00000150e7662edc: 895f 4890 | e9b0 f3ff | ff44 8b5f | 1445 85db | 0f84 61f9 | ffff 4d8b | 5728 498b | cb48 c1e1 
  0x00000150e7662efc: 0366 6690 | 4d85 d20f | 84bc 0600 | 004d 8b5f | 384b 894c | 13f8 4983 | c2f8 4d89 | 5728 e934 
  0x00000150e7662f1c: f9ff ff44 | 8944 2424 

  0x00000150e7662f24: ;   {metadata('com/sun/prism/impl/shape/MaskData')}
  0x00000150e7662f24: 48ba f0c3 | 2101 0800 

  0x00000150e7662f2c: ;   {runtime_call _new_instance_Java}
  0x00000150e7662f2c: 0000 90e8 

  0x00000150e7662f30: ; ImmutableOopMap {[48]=Oop [56]=Oop [72]=Oop [80]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.shape.MaskData::create@0 (line 86)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@174 (line 270)
  0x00000150e7662f30: 4cf8 a6ff | e902 f5ff | ff48 8944 | 2458 4489 | 5c24 4044 | 8944 2424 | 4c89 4c24 

  0x00000150e7662f4c: ;   {metadata('com/sun/prism/impl/GlyphCache$GlyphData')}
  0x00000150e7662f4c: 4848 bac0 | 7c21 0108 

  0x00000150e7662f54: ;   {runtime_call _new_instance_Java}
  0x00000150e7662f54: 0000 00e8 

  0x00000150e7662f58: ; ImmutableOopMap {[48]=Oop [56]=Oop [72]=Oop [80]=Oop [88]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@235 (line 283)
  0x00000150e7662f58: 24f8 a6ff | 488b e890 | e9ca f5ff | ff89 4c24 | 4c89 7c24 | 4844 895c | 2440 4489 

  0x00000150e7662f74: ;   {metadata('com/sun/javafx/geom/Rectangle')}
  0x00000150e7662f74: 4424 2448 | ba98 ab1d | 0108 0000 

  0x00000150e7662f80: ;   {runtime_call _new_instance_Java}
  0x00000150e7662f80: 0066 90e8 

  0x00000150e7662f84: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop [80]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@220 (line 282)
  0x00000150e7662f84: f8f7 a6ff | 4c8b cd44 | 8b44 2424 | 448b 5c24 | 408b 7c24 | 488b 4c24 | 4c66 6690 | e91e f5ff 
  0x00000150e7662fa4: ff4c 896c | 2458 895c | 243c 4889 | 7424 4844 | 894c 2434 | 4489 5c24 | 244c 8b54 | 2450 4c89 
  0x00000150e7662fc4: 5424 2841 | b820 0000 

  0x00000150e7662fcc: ;   {metadata('com/sun/prism/impl/GlyphCache$GlyphData'[])}
  0x00000150e7662fcc: 0048 ba00 | c021 0108 

  0x00000150e7662fd4: ;   {runtime_call _new_array_Java}
  0x00000150e7662fd4: 0000 00e8 

  0x00000150e7662fd8: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop [80]=Oop }
                      ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@54 (line 251)
  0x00000150e7662fd8: a4d3 a6ff | 448b 5c24 | 2444 8b4c | 2434 488b | 7424 488b | 5c24 3c4c | 8b6c 2458 | 4c8b c0e9 
  0x00000150e7662ff8: dff0 ffff | 894c 2470 | 4489 4c24 | 3c44 8954 | 2434 48ff | 7424 5848 | 8f44 2460 | 4c8b 9424 
  0x00000150e7663018: 8000 0000 | 4c89 5424 | 584c 896c | 2448 895c | 2430 4c8b | 5424 504c | 8954 2428 

  0x00000150e7663034: ;   {metadata('java/util/HashMap$Node')}
  0x00000150e7663034: 48ba b860 | 1c00 0800 | 0000 498b 

  0x00000150e7663040: ;   {runtime_call _new_instance_Java}
  0x00000150e7663040: e866 90e8 

  0x00000150e7663044: ; ImmutableOopMap {rbp=Oop [40]=Oop [60]=NarrowOop [88]=Oop [96]=Oop [104]=Oop [136]=Derived_oop_[104] [112]=NarrowOop [128]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.HashMap::newNode@0 (line 1909)
                      ; - java.util.HashMap::putVal@56 (line 637)
                      ; - java.util.HashMap::put@9 (line 618)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@69 (line 252)
  0x00000150e7663044: 38f7 a6ff | 4c8b 5424 | 284c 8954 | 2450 8b5c | 2430 4c8b | 6c24 4848 | ff74 2460 | 488f 4424 
  0x00000150e7663064: 5844 8b54 | 2434 448b | 5c24 3c44 | 895c 2424 | 8b4c 2470 | 488b e80f | 1f44 0000 | e955 f1ff 
  0x00000150e7663084: ff44 8b57 | 1845 85d2 | 0f84 7afa | ffff 4d8b | 5f28 498b | ca48 c1e1 | 0366 6690 | 4d85 db0f 
  0x00000150e76630a4: 8431 0500 | 004d 8b57 | 384b 894c | 1af8 4983 | c3f8 4d89 | 5f28 e94d | faff ff4d | 8b57 584d 
  0x00000150e76630c4: 8b5f 48f0 | 8344 24c0 | 0080 3900 | 0f84 73fa | ffff 4488 | 214d 85db | 7515 498b | d749 ba90 
  0x00000150e76630e4: 1e97 2bf9 | 7f00 0041 | ffd2 e956 | faff ff4b | 894c 1af8 | 4983 c3f8 | 4d89 5f48 | e944 faff 
  0x00000150e7663104: ff48 8974 | 2448 4489 | 4c24 3044 | 8b44 2444 | 4489 4424 | 2c44 895c | 2428 4489 | 5424 2448 
  0x00000150e7663124: ;   {metadata('java/lang/Integer')}
  0x00000150e7663124: 8bea 48ba | 30c7 0300 | 0800 0000 

  0x00000150e7663130: ;   {runtime_call _new_instance_Java}
  0x00000150e7663130: 6666 90e8 

  0x00000150e7663134: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [80]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.Integer::valueOf@23 (line 1074)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@22 (line 245)
  0x00000150e7663134: 48f6 a6ff | 448b 5424 | 2444 8b5c | 2428 448b | 4c24 2c44 | 894c 2444 | 448b 4c24 | 3048 8b74 
  0x00000150e7663154: 2448 e96f 

  0x00000150e7663158: ;   {oop(a 'java/lang/Class'{0x000000074574c7a8} = 'com/sun/prism/impl/GlyphCache')}
  0x00000150e7663158: f8ff ff49 | baa8 c774 | 4507 0000 | 0045 8b52 | 7045 85d2 | 0f84 3cfb | ffff 4d8b | 5f28 498b 
  0x00000150e7663178: ca48 c1e1 | 0366 6690 | 4d85 db0f | 8469 0400 | 004d 8b57 | 384b 894c | 1af8 4983 | c3f8 4d89 
  0x00000150e7663198: 5f28 e90f | fbff ff4d | 8b57 584d | 8b5f 48f0 | 8344 24c0 | 0080 3900 | 7427 4488 | 214d 85db 
  0x00000150e76631b8: 740f 4b89 | 4c1a f849 | 83c3 f84d | 895f 48eb | 1049 8bd7 | 49ba 901e | 972b f97f | 0000 41ff 
  0x00000150e76631d8: ;   {oop(a 'java/lang/Class'{0x000000074574c7a8} = 'com/sun/prism/impl/GlyphCache')}
  0x00000150e76631d8: d249 baa8 | c774 4507 | 0000 0045 | 8b5a 704d | 8bc3 49c1 | e003 e901 | fbff ffba | deff ffff 
  0x00000150e76631f8: 488b 6c24 | 5044 8b4c | 2438 4489 | 4c24 2444 | 895c 242c | 4489 5424 | 3448 8944 

  0x00000150e7663214: ;   {runtime_call UncommonTrapBlob}
  0x00000150e7663214: 2438 90e8 

  0x00000150e7663218: ; ImmutableOopMap {rbp=Oop [52]=NarrowOop [56]=Oop }
                      ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
  0x00000150e7663218: e43a 9cff | bae4 ffff | ff48 8b6c | 2450 448b | 5424 3844 | 8954 2424 | 448b 5c24 | 4044 895c 
  0x00000150e7663238: 2428 4889 

  0x00000150e766323c: ;   {runtime_call UncommonTrapBlob}
  0x00000150e766323c: 5c24 38e8 

  0x00000150e7663240: ; ImmutableOopMap {rbp=Oop [56]=Oop }
                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@42 (line 247)
  0x00000150e7663240: bc3a 9cff | 4c89 4424 | 584c 896c | 2448 895c | 2434 4489 | 5c24 244c | 8b54 2450 | 4c89 5424 
  0x00000150e7663260: ;   {metadata('java/lang/Integer')}
  0x00000150e7663260: 2848 ba30 | c703 0008 

  0x00000150e7663268: ;   {runtime_call _new_instance_Java}
  0x00000150e7663268: 0000 00e8 

  0x00000150e766326c: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop [88]=Oop [128]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.Integer::valueOf@23 (line 1074)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@64 (line 252)
  0x00000150e766326c: 10f5 a6ff | 4c8b 5424 | 284c 8954 | 2450 448b | 5c24 248b | 5c24 344c | 8b6c 2448 | e9bd f9ff 
  0x00000150e766328c: ffba 45ff | ffff 498b | e844 8b44 | 2438 4489 | 4424 2444 | 8b4c 2440 | 4489 4c24 | 2844 895c 
  0x00000150e76632ac: 242c 448b | 4424 4444 | 8944 2430 | 4889 4424 | 3844 8954 | 2434 894c 

  0x00000150e76632c4: ;   {runtime_call UncommonTrapBlob}
  0x00000150e76632c4: 2444 90e8 

  0x00000150e76632c8: ; ImmutableOopMap {rbp=Oop [52]=NarrowOop [56]=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.HashMap::getNode@14 (line 575)
                      ; - java.util.HashMap::get@2 (line 564)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
  0x00000150e76632c8: 343a 9cff | 4889 7c24 | 7889 4c24 | 7444 8b54 | 2424 4489 | 5424 7048 | ff74 2458 | 488f 4424 
  0x00000150e76632e8: 604c 8b94 | 2480 0000 | 004c 8954 | 2458 4c89 | 6c24 4889 | 5c24 3c44 | 8b5c 2444 | 4489 5c24 
  0x00000150e7663308: 244c 8b54 | 2450 4c89 

  0x00000150e7663310: ;   {metadata('java/util/HashMap$Node')}
  0x00000150e7663310: 5424 3048 | bab8 601c | 0008 0000 | 004c 8944 | 2428 4c8b | 5424 584c | 8954 2450 

  0x00000150e766332c: ;   {runtime_call _new_instance_Java}
  0x00000150e766332c: 6666 90e8 

  0x00000150e7663330: ; ImmutableOopMap {[40]=Oop [48]=Oop [80]=Oop [96]=Oop [104]=Oop [112]=NarrowOop [116]=NarrowOop [120]=Oop [128]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.HashMap::newNode@0 (line 1909)
                      ; - java.util.HashMap::putVal@152 (line 648)
                      ; - java.util.HashMap::put@9 (line 618)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@69 (line 252)
  0x00000150e7663330: 4cf4 a6ff | 4c8b 5424 | 304c 8954 | 2450 448b | 5424 2444 | 8954 2444 | 8b5c 243c | 4c8b 6c24 
  0x00000150e7663350: 4848 ff74 | 2460 488f | 4424 5844 | 8b5c 2470 | 4489 5c24 | 248b 4c24 | 7448 8b7c | 2478 488b 
  0x00000150e7663370: f0e9 7cf7 | ffff baf6 | ffff ff48 | 8b6c 2450 | 448b 5c24 | 3844 895c | 2424 448b | 5424 3c44 
  0x00000150e7663390: 8954 2434 

  0x00000150e7663394: ;   {runtime_call UncommonTrapBlob}
  0x00000150e7663394: 6666 90e8 

  0x00000150e7663398: ; ImmutableOopMap {rbp=Oop [72]=Oop }
                      ;*invokevirtual find {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.HashMap$TreeNode::getTreeNode@18 (line 2048)
                      ; - java.util.HashMap::getNode@95 (line 582)
                      ; - java.util.HashMap::get@2 (line 564)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
  0x00000150e7663398: 6439 9cff | baf6 ffff | ff44 8b5c | 2444 4489 | 5c24 244c | 8b54 2448 | 4c89 5424 

  0x00000150e76633b4: ;   {runtime_call UncommonTrapBlob}
  0x00000150e76633b4: 3866 90e8 

  0x00000150e76633b8: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop [80]=Oop [88]=Oop }
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@272 (line 288)
  0x00000150e76633b8: 4439 9cff | bae4 ffff | ff4c 895c 

  0x00000150e76633c4: ;   {runtime_call UncommonTrapBlob}
  0x00000150e76633c4: 2428 90e8 

  0x00000150e76633c8: ; ImmutableOopMap {rbp=Oop [40]=Oop }
                      ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.GlyphCache::getCachedGlyph@487 (line 340)
  0x00000150e76633c8: 3439 9cff | bade ffff | ff48 895c | 2430 4489 

  0x00000150e76633d8: ;   {runtime_call UncommonTrapBlob}
  0x00000150e76633d8: 5c24 2ce8 

  0x00000150e76633dc: ; ImmutableOopMap {[44]=NarrowOop [48]=Oop [80]=Oop }
                      ;*invokeinterface getGlyph {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@81 (line 257)
  0x00000150e76633dc: 2039 9cff | bade ffff | ff4c 8b54 | 2430 4c89 | 5424 2848 | 8944 2438 

  0x00000150e76633f4: ;   {runtime_call UncommonTrapBlob}
  0x00000150e76633f4: 6666 90e8 

  0x00000150e76633f8: ; ImmutableOopMap {[40]=Oop [56]=Oop [80]=Oop }
                      ;*invokeinterface getPixelData {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@96 (line 259)
  0x00000150e76633f8: 0439 9cff | bade ffff | ff44 8b54 | 2444 4489 | 5424 244c | 8b54 2430 | 4c89 5424 | 284c 8b54 
  0x00000150e7663418: 2448 4c89 | 5424 3089 | 4c24 4444 | 894c 2448 | 4489 5c24 

  0x00000150e766342c: ;   {runtime_call UncommonTrapBlob}
  0x00000150e766342c: 4c66 90e8 

  0x00000150e7663430: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [76]=NarrowOop [80]=Oop }
                      ;*invokeinterface getPixelFormat {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@352 (line 314)
  0x00000150e7663430: cc38 9cff | bade ffff | ff44 8b54 | 2438 4489 | 5424 2444 | 8b5c 2440 | 4489 5c24 | 3044 8b5c 
  0x00000150e7663450: 2444 4489 | 5c24 344c | 8b94 2480 | 0000 004c | 8954 2438 

  0x00000150e7663464: ;   {runtime_call UncommonTrapBlob}
  0x00000150e7663464: 6666 90e8 

  0x00000150e7663468: ; ImmutableOopMap {rbp=NarrowOop [56]=Oop [80]=Oop [96]=Oop }
                      ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@69 (line 252)
  0x00000150e7663468: 9438 9cff | bae4 ffff | ff48 8b6c | 2450 448b | 4424 3844 | 8944 2424 | 448b 5c24 | 4044 895c 
  0x00000150e7663488: 2428 448b | 4424 4444 | 8944 242c | 4c8b 9c24 | 8000 0000 | 4c89 5c24 | 3048 ff74 | 2458 488f 
  0x00000150e76634a8: 4424 3889 | 5c24 404c | 8b5c 2460 | 4c89 5c24 | 4848 897c | 2460 4489 

  0x00000150e76634c0: ;   {runtime_call UncommonTrapBlob}
  0x00000150e76634c0: 5424 68e8 

  0x00000150e76634c4: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop [72]=Oop [96]=Oop }
                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.HashMap::putVal@40 (line 636)
                      ; - java.util.HashMap::put@9 (line 618)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@69 (line 252)
  0x00000150e76634c4: 3838 9cff | 498b d749 | bab0 1e97 | 2bf9 7f00 | 0041 ffd2 | e98e f0ff | ff49 8bd7 | 49ba b01e 
  0x00000150e76634e4: 972b f97f | 0000 41ff | d2e9 59f2 | ffff ba45 | ffff ff4c | 8b54 2430 | 4c89 5424 | 284c 8b54 
  0x00000150e7663504: 2438 4c89 | 5424 3048 | 8944 2438 | 4489 5c24 

  0x00000150e7663514: ;   {runtime_call UncommonTrapBlob}
  0x00000150e7663514: 4066 90e8 

  0x00000150e7663518: ; ImmutableOopMap {[40]=Oop [48]=Oop [56]=Oop [80]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.GlyphCache::getCachedGlyph@111 (line 260)
  0x00000150e7663518: e437 9cff | ba45 ffff | ff48 8b6c | 2450 448b | 5424 3844 | 8954 2424 | 448b 5424 | 4044 8954 
  0x00000150e7663538: 2428 448b | 5c24 4444 | 895c 242c | 4c8b 9424 | 8000 0000 | 4c89 5424 | 3048 ff74 | 2458 488f 
  0x00000150e7663558: 4424 3889 | 5c24 4044 | 894c 2444 | 4489 4424 

  0x00000150e7663568: ;   {runtime_call UncommonTrapBlob}
  0x00000150e7663568: 5c66 90e8 

  0x00000150e766356c: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop [68]=NarrowOop [96]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.HashMap::putVal@16 (line 634)
                      ; - java.util.HashMap::put@9 (line 618)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@69 (line 252)
  0x00000150e766356c: 9037 9cff | bad6 ffff | ff4c 8b5c | 2450 4c89 | 5c24 2844 | 8b5c 2438 | 4489 5c24 | 2444 8b5c 
  0x00000150e766358c: 2440 4489 | 5c24 3044 | 8b5c 2444 | 4489 5c24 | 3444 8954 

  0x00000150e76635a0: ;   {runtime_call UncommonTrapBlob}
  0x00000150e76635a0: 2450 90e8 

  0x00000150e76635a4: ; ImmutableOopMap {rbp=Oop [40]=Oop [88]=Oop [104]=Oop [128]=Oop }
                      ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.HashMap::putVal@59 (line 637)
                      ; - java.util.HashMap::put@9 (line 618)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@69 (line 252)
  0x00000150e76635a4: 5837 9cff | 498b d849 | 8bd7 49ba | b01e 972b | f97f 0000 | 41ff d24c | 8bc3 6690 | e98e ecff 
  0x00000150e76635c4: ff49 8bd7 | 49ba b01e | 972b f97f | 0000 41ff | d2e9 79f2 | ffff 498b | d766 6690 | 49ba b01e 
  0x00000150e76635e4: 972b f97f | 0000 41ff | d2e9 1af5 | ffff 498b | d766 6666 | 0f1f 8400 | 0000 0000 | 49ba b01e 
  0x00000150e7663604: 972b f97f | 0000 41ff | d2e9 9cf6 | ffff baf6 | ffff ff4c | 895c 2428 | 448b 5424 | 4444 8954 
  0x00000150e7663624: 2424 4c8b | 5424 484c | 8954 2438 | 4c8b 5424 | 504c 8954 

  0x00000150e7663638: ;   {runtime_call UncommonTrapBlob}
  0x00000150e7663638: 2448 90e8 

  0x00000150e766363c: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [56]=Oop [72]=Oop [80]=Oop }
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@300 (line 294)
  0x00000150e766363c: c036 9cff | bade ffff | ff48 8b6c | 2450 4489 | 5c24 2c44 | 8954 2434 

  0x00000150e7663654: ;   {runtime_call UncommonTrapBlob}
  0x00000150e7663654: 6666 90e8 

  0x00000150e7663658: ; ImmutableOopMap {rbp=Oop [52]=NarrowOop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@28 (line 245)
  0x00000150e7663658: a436 9cff | baf6 ffff | ff48 8b6c | 2450 448b | 5424 3844 | 8954 2424 | 4489 5c24 | 2c48 8944 
  0x00000150e7663678: ;   {runtime_call UncommonTrapBlob}
  0x00000150e7663678: 2438 90e8 

  0x00000150e766367c: ; ImmutableOopMap {rbp=Oop [56]=Oop }
                      ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
  0x00000150e766367c: 8036 9cff | baf6 ffff | ff48 895c 

  0x00000150e7663688: ;   {runtime_call UncommonTrapBlob}
  0x00000150e7663688: 2430 90e8 

  0x00000150e766368c: ; ImmutableOopMap {[48]=Oop [80]=Oop }
                      ;*invokeinterface getGlyph {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@81 (line 257)
  0x00000150e766368c: 7036 9cff | baf6 ffff | ff4c 8b5c | 2430 4c89 | 5c24 284c | 8954 2430 

  0x00000150e76636a4: ;   {runtime_call UncommonTrapBlob}
  0x00000150e76636a4: 6666 90e8 

  0x00000150e76636a8: ; ImmutableOopMap {[40]=Oop [48]=Oop [72]=Oop [80]=Oop }
                      ;*getfield left {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getOriginX@8 (line 388)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@148 (line 271)
  0x00000150e76636a8: 5436 9cff | baf6 ffff | ff4c 8b54 | 2430 4c89 | 5424 284c | 8944 2430 

  0x00000150e76636c0: ;   {runtime_call UncommonTrapBlob}
  0x00000150e76636c0: 6666 90e8 

  0x00000150e76636c4: ; ImmutableOopMap {[40]=Oop [48]=Oop [72]=Oop [80]=Oop }
                      ;*getfield top {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getOriginY@8 (line 394)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@155 (line 272)
  0x00000150e76636c4: 3836 9cff | baf6 ffff | ff44 8b5c | 2444 4489 | 5c24 244c | 8b5c 2430 | 4c89 5c24 | 284c 8954 
  0x00000150e76636e4: ;   {runtime_call UncommonTrapBlob}
  0x00000150e76636e4: 2430 90e8 

  0x00000150e76636e8: ; ImmutableOopMap {[40]=Oop [48]=Oop [72]=Oop [80]=Oop }
                      ;*getfield right {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getWidth@8 (line 376)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@162 (line 273)
  0x00000150e76636e8: 1436 9cff | baf6 ffff | ff44 8b54 | 2444 4489 | 5424 244c | 8b54 2430 | 4c89 5424 | 284c 895c 
  0x00000150e7663708: 2430 4c8b | 5424 484c | 8954 2438 

  0x00000150e7663714: ;   {runtime_call UncommonTrapBlob}
  0x00000150e7663714: 6666 90e8 

  0x00000150e7663718: ; ImmutableOopMap {[40]=Oop [48]=Oop [56]=Oop [80]=Oop }
                      ;*getfield bottom {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getHeight@8 (line 382)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@169 (line 274)
  0x00000150e7663718: e435 9cff | baf6 ffff | ff4c 8b54 | 2430 4c89 

  0x00000150e7663728: ;   {runtime_call UncommonTrapBlob}
  0x00000150e7663728: 5424 28e8 

  0x00000150e766372c: ; ImmutableOopMap {rbp=Oop [40]=Oop [72]=Oop [80]=Oop }
                      ;*invokevirtual getBackingStore {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getBackingStore@4 (line 226)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@331 (line 311)
  0x00000150e766372c: d035 9cff | baf6 ffff | ff44 8b5c | 2444 4489 | 5c24 244c | 8b54 2430 | 4c89 5424 | 2889 4c24 
  0x00000150e766374c: 4044 894c 

  0x00000150e7663750: ;   {runtime_call UncommonTrapBlob}
  0x00000150e7663750: 2444 90e8 

  0x00000150e7663754: ; ImmutableOopMap {rbp=Oop [40]=Oop [72]=Oop [80]=Oop }
                      ;*invokeinterface getPixelFormat {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@352 (line 314)
  0x00000150e7663754: a835 9cff | baf6 ffff | ff44 8b5c | 2444 4489 | 5c24 244c | 8b54 2430 | 4c89 5424 | 284c 8b54 
  0x00000150e7663774: 2448 4c89 | 5424 3048 | 897c 2440 | 894c 2448 | 4489 4c24 

  0x00000150e7663788: ;   {runtime_call UncommonTrapBlob}
  0x00000150e7663788: 4c66 90e8 

  0x00000150e766378c: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [64]=Oop [80]=Oop }
                      ;*invokevirtual getBytesPerPixelUnit {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@357 (line 314)
  0x00000150e766378c: 7035 9cff | baf6 ffff | ff44 8b54 | 2444 4489 | 5424 244c | 8b54 2430 | 4c89 5424 | 284c 8b54 
  0x00000150e76637ac: 2448 4c89 | 5424 3048 | 897c 2440 | 894c 2448 | 4489 4c24 

  0x00000150e76637c0: ;   {runtime_call UncommonTrapBlob}
  0x00000150e76637c0: 4c66 90e8 

  0x00000150e76637c4: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [64]=Oop [80]=Oop }
                      ;*invokevirtual getSizeInBytes {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.PixelFormat::getBytesPerPixelUnit@8 (line 98)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@357 (line 314)
  0x00000150e76637c4: 3835 9cff | baf4 ffff | ff48 8b6c | 2450 448b | 5424 3844 | 8954 2424 | 448b 4424 | 4044 8944 
  0x00000150e76637e4: 2428 4489 | 5c24 2c89 | 7c24 3489 | 5c24 4048 | 8944 2448 

  0x00000150e76637f8: ;   {runtime_call UncommonTrapBlob}
  0x00000150e76637f8: 6666 90e8 

  0x00000150e76637fc: ; ImmutableOopMap {rbp=Oop [52]=NarrowOop [72]=Oop }
                      ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.Integer::equals@1 (line 1228)
                      ; - java.util.HashMap::getNode@63 (line 578)
                      ; - java.util.HashMap::get@2 (line 564)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
  0x00000150e76637fc: 0035 9cff | baf6 ffff | ff44 8b5c | 2438 4489 | 5c24 2444 | 8b54 2440 | 4489 5424 | 2844 8b54 
  0x00000150e766381c: 2444 4489 | 5424 2c4c | 8b94 2480 | 0000 004c | 8954 2430 

  0x00000150e7663830: ;   {runtime_call UncommonTrapBlob}
  0x00000150e7663830: 6666 90e8 

  0x00000150e7663834: ; ImmutableOopMap {[48]=Oop [80]=Oop [96]=Oop }
                      ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@69 (line 252)
  0x00000150e7663834: c834 9cff | ba45 ffff | ff44 8b5c | 2440 4489 | 5c24 2444 | 8b54 2444 | 4489 5424 | 2848 8944 
  0x00000150e7663854: ;   {runtime_call UncommonTrapBlob}
  0x00000150e7663854: 2440 90e8 

  0x00000150e7663858: ; ImmutableOopMap {[48]=Oop [64]=Oop [80]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.GlyphCache::getCachedGlyph@90 (line 258)
  0x00000150e7663858: a434 9cff | ba45 ffff | ff44 8b5c | 2444 4489 | 5c24 244c | 8b54 2430 | 4c89 5424 | 284c 8b54 
  0x00000150e7663878: 2438 4c89 | 5424 3048 | 8944 2440 

  0x00000150e7663884: ;   {runtime_call UncommonTrapBlob}
  0x00000150e7663884: 6666 90e8 

  0x00000150e7663888: ; ImmutableOopMap {[40]=Oop [48]=Oop [64]=Oop [80]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.GlyphCache::getCachedGlyph@105 (line 260)
  0x00000150e7663888: 7434 9cff | 448b 5424 | 4444 8954 | 2424 4c8b | 5424 304c | 8954 2428 | 4c8b 5424 | 484c 8954 
  0x00000150e76638a8: 2430 4889 | 5c24 3848 | 897c 2440 | 894c 2448 | 4489 4c24 | 4c44 895c | 2450 8954 | 2454 4489 
  0x00000150e76638c8: 4424 58ba | 45ff ffff 

  0x00000150e76638d0: ;   {runtime_call UncommonTrapBlob}
  0x00000150e76638d0: 6666 90e8 

  0x00000150e76638d4: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [88]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.GlyphCache::getCachedGlyph@379 (line 317)
  0x00000150e76638d4: 2834 9cff | 488b 6c24 | 5044 8b44 | 2438 4489 | 4424 2444 | 8b54 2440 | 4489 5424 | 2844 895c 
  0x00000150e76638f4: 242c 448b | 5c24 4444 | 895c 2430 | 4889 5424 | 4089 5c24 | 3448 894c | 2448 baf4 

  0x00000150e7663910: ;   {runtime_call UncommonTrapBlob}
  0x00000150e7663910: ffff ffe8 

  0x00000150e7663914: ; ImmutableOopMap {rbp=Oop [64]=Oop [72]=Oop }
                      ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.Integer::equals@1 (line 1228)
                      ; - java.util.HashMap::getNode@128 (line 585)
                      ; - java.util.HashMap::get@2 (line 564)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
  0x00000150e7663914: e833 9cff | baf4 ffff | ff4c 8b54 | 2450 498b | ea44 8b5c | 2438 4489 | 5c24 2444 | 8b5c 2440 
  0x00000150e7663934: 4489 5c24 | 2844 8b54 | 2444 4489 | 5424 2c4c | 8b94 2480 | 0000 0048 | ff74 2458 | 488f 4424 
  0x00000150e7663954: 3889 5c24 | 404c 8954 | 2450 8974 

  0x00000150e7663960: ;   {runtime_call UncommonTrapBlob}
  0x00000150e7663960: 2444 90e8 

  0x00000150e7663964: ; ImmutableOopMap {rbp=Oop [56]=Oop [68]=NarrowOop [80]=Oop [96]=Oop [104]=Oop [128]=Oop }
                      ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.Integer::equals@1 (line 1228)
                      ; - java.util.HashMap::putVal@91 (line 641)
                      ; - java.util.HashMap::put@9 (line 618)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@69 (line 252)
  0x00000150e7663964: 9833 9cff | baf6 ffff 

  0x00000150e766396c: ;   {runtime_call UncommonTrapBlob}
  0x00000150e766396c: ff66 90e8 

  0x00000150e7663970: ; ImmutableOopMap {rbp=Oop [72]=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.HashMap::putVal@26 (line 635)
                      ; - java.util.HashMap::put@9 (line 618)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@69 (line 252)
  0x00000150e7663970: 8c33 9cff | baf4 ffff | ff4c 8b54 | 2450 4c89 | 5424 2844 | 8b54 2438 | 4489 5424 | 2444 8b54 
  0x00000150e7663990: 2440 4489 | 5424 3044 | 8b5c 2444 | 4489 5c24 | 344c 8b94 | 2480 0000 | 0048 ff74 | 2458 488f 
  0x00000150e76639b0: 4424 4089 | 5c24 484c | 8954 2458 | 4c8b 5424 | 684c 8954 | 2460 4889 | 7c24 684c | 8944 2470 
  0x00000150e76639d0: ;   {runtime_call UncommonTrapBlob}
  0x00000150e76639d0: 6666 90e8 

  0x00000150e76639d4: ; ImmutableOopMap {[40]=Oop [64]=Oop [88]=Oop [96]=Oop [104]=Oop [112]=Oop [128]=Oop }
                      ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.Integer::equals@1 (line 1228)
                      ; - java.util.HashMap::putVal@203 (line 654)
                      ; - java.util.HashMap::put@9 (line 618)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@69 (line 252)
  0x00000150e76639d4: 2833 9cff | e988 0000 | 0048 8bd0 | e9e2 0000 | 0048 8bd0 | e9da 0000 | 00e9 7300 | 0000 488b 
  0x00000150e76639f4: d0e9 cd00 | 0000 488b | d066 6690 | e9c2 0000 | 0048 8bd0 | e9ba 0000 | 00e9 9d00 | 0000 e94e 
  0x00000150e7663a14: 0000 0048 | 8bd0 e9a8 | 0000 0048 | 8bd0 e9a0 | 0000 0048 | 8bd0 e998 | 0000 00eb | 34eb 3244 
  0x00000150e7663a34: ;   {metadata('java/lang/Exception')}
  0x00000150e7663a34: 8b50 0849 | bb28 4808 | 0008 0000 | 0049 b800 | 0000 0008 | 0000 004d | 03c2 4d8b | 5040 4d3b 
  0x00000150e7663a54: d30f 84ed | f2ff ff48 | 8bd0 6690 | e962 0000 | 0048 8bd0 | e95a 0000 | 0048 8bd0 | e952 0000 
  0x00000150e7663a74: 0048 8bd0 | e94a 0000 | 0048 8bd0 | e942 0000 | 0048 8bd0 | e93a 0000 | 0048 8bd0 | e932 0000 
  0x00000150e7663a94: 0048 8bd0 | e92a 0000 | 0048 8bd0 | e922 0000 | 0048 8bd0 | e91a 0000 | 00eb 0048 | 8bd0 eb13 
  0x00000150e7663ab4: eb00 488b | d0eb 0ceb | 0048 8bd0 | eb05 eb00 | 488b d048 | 81c4 a000 

  0x00000150e7663acc: ;   {runtime_call _rethrow_Java}
  0x00000150e7663acc: 0000 5de9 | 2c0e a7ff 

  0x00000150e7663ad4: ;   {internal_word}
  0x00000150e7663ad4: 49ba eb1f | 66e7 5001 | 0000 4d89 | 9790 0300 

  0x00000150e7663ae4: ;   {runtime_call SafepointBlob}
  0x00000150e7663ae4: 00e9 1643 | 9cff f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 
[Stub Code]
  0x00000150e7663b00: ;   {no_reloc}
  0x00000150e7663b00: 48bb 0000 | 0000 0000 

  0x00000150e7663b08: ;   {runtime_call}
  0x00000150e7663b08: 0000 e9fb 

  0x00000150e7663b0c: ;   {static_stub}
  0x00000150e7663b0c: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000150e7663b18: ;   {runtime_call}
  0x00000150e7663b18: 00e9 fbff 

  0x00000150e7663b1c: ;   {static_stub}
  0x00000150e7663b1c: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000150e7663b28: ;   {runtime_call}
  0x00000150e7663b28: e9fb ffff 

  0x00000150e7663b2c: ;   {static_stub}
  0x00000150e7663b2c: ff48 bb00 | 0000 0000 

  0x00000150e7663b34: ;   {runtime_call}
  0x00000150e7663b34: 0000 00e9 | fbff ffff 

  0x00000150e7663b3c: ;   {static_stub}
  0x00000150e7663b3c: 48bb 0000 | 0000 0000 

  0x00000150e7663b44: ;   {runtime_call}
  0x00000150e7663b44: 0000 e9fb 

  0x00000150e7663b48: ;   {static_stub}
  0x00000150e7663b48: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000150e7663b54: ;   {runtime_call}
  0x00000150e7663b54: 00e9 fbff 

  0x00000150e7663b58: ;   {static_stub}
  0x00000150e7663b58: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000150e7663b64: ;   {runtime_call}
  0x00000150e7663b64: e9fb ffff 

  0x00000150e7663b68: ;   {static_stub}
  0x00000150e7663b68: ff48 bba0 | 0107 f950 

  0x00000150e7663b70: ;   {runtime_call I2C/C2I adapters}
  0x00000150e7663b70: 0100 00e9 | e1d2 9bff 

  0x00000150e7663b78: ;   {static_stub}
  0x00000150e7663b78: 48bb 0000 | 0000 0000 

  0x00000150e7663b80: ;   {runtime_call}
  0x00000150e7663b80: 0000 e9fb 

  0x00000150e7663b84: ;   {static_stub}
  0x00000150e7663b84: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000150e7663b90: ;   {runtime_call}
  0x00000150e7663b90: 00e9 fbff 

  0x00000150e7663b94: ;   {static_stub}
  0x00000150e7663b94: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000150e7663ba0: ;   {runtime_call}
  0x00000150e7663ba0: e9fb ffff 

  0x00000150e7663ba4: ;   {static_stub}
  0x00000150e7663ba4: ff48 bb00 | 0000 0000 

  0x00000150e7663bac: ;   {runtime_call}
  0x00000150e7663bac: 0000 00e9 | fbff ffff 

  0x00000150e7663bb4: ;   {static_stub}
  0x00000150e7663bb4: 48bb 0000 | 0000 0000 

  0x00000150e7663bbc: ;   {runtime_call}
  0x00000150e7663bbc: 0000 e9fb 

  0x00000150e7663bc0: ;   {static_stub}
  0x00000150e7663bc0: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000150e7663bcc: ;   {runtime_call}
  0x00000150e7663bcc: 00e9 fbff 

  0x00000150e7663bd0: ;   {static_stub}
  0x00000150e7663bd0: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000150e7663bdc: ;   {runtime_call}
  0x00000150e7663bdc: e9fb ffff 

  0x00000150e7663be0: ;   {static_stub}
  0x00000150e7663be0: ff48 bb18 | b90e f950 

  0x00000150e7663be8: ;   {runtime_call I2C/C2I adapters}
  0x00000150e7663be8: 0100 00e9 | 77bf 99ff 

  0x00000150e7663bf0: ;   {static_stub}
  0x00000150e7663bf0: 48bb 0000 | 0000 0000 

  0x00000150e7663bf8: ;   {runtime_call}
  0x00000150e7663bf8: 0000 e9fb 

  0x00000150e7663bfc: ;   {static_stub}
  0x00000150e7663bfc: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000150e7663c08: ;   {runtime_call}
  0x00000150e7663c08: 00e9 fbff 

  0x00000150e7663c0c: ;   {static_stub}
  0x00000150e7663c0c: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000150e7663c18: ;   {runtime_call}
  0x00000150e7663c18: e9fb ffff 

  0x00000150e7663c1c: ;   {static_stub}
  0x00000150e7663c1c: ff48 bb00 | 0000 0000 

  0x00000150e7663c24: ;   {runtime_call}
  0x00000150e7663c24: 0000 00e9 | fbff ffff 

  0x00000150e7663c2c: ;   {static_stub}
  0x00000150e7663c2c: 48bb 0000 | 0000 0000 

  0x00000150e7663c34: ;   {runtime_call}
  0x00000150e7663c34: 0000 e9fb 

  0x00000150e7663c38: ;   {static_stub}
  0x00000150e7663c38: ffff ff48 | bb78 7f0e | f950 0100 

  0x00000150e7663c44: ;   {runtime_call I2C/C2I adapters}
  0x00000150e7663c44: 00e9 0fd2 

  0x00000150e7663c48: ;   {static_stub}
  0x00000150e7663c48: 9bff 48bb | 0000 0000 | 0000 0000 

  0x00000150e7663c54: ;   {runtime_call}
  0x00000150e7663c54: e9fb ffff 

  0x00000150e7663c58: ;   {runtime_call ExceptionBlob}
  0x00000150e7663c58: ffe9 a245 | a6ff e800 | 0000 0048 | 832c 2405 

  0x00000150e7663c68: ;   {runtime_call DeoptimizationBlob}
  0x00000150e7663c68: e933 349c | fff4 f4f4 
[/MachCode]


---------------  P R O C E S S  ---------------

Threads class SMR info:
_java_thread_list=0x00000150fdefd4c0, length=114, elements={
0x00000150d7b2a0a0, 0x00000150f8071fe0, 0x00000150f8072b10, 0x00000150f8074a50,
0x00000150f8077810, 0x00000150f807a150, 0x00000150f807ca90, 0x00000150f8086710,
0x00000150f808a580, 0x00000150f808ef10, 0x00000150fc45a270, 0x00000150fca24630,
0x00000150fce19a90, 0x00000150fd542b10, 0x00000150fcdee750, 0x00000150fcdeba20,
0x00000150fd9e5580, 0x00000150fd9e5ad0, 0x00000150fd9e6570, 0x00000150fd9e5030,
0x00000150fd9e6020, 0x00000150fde8fb00, 0x00000150fde94010, 0x00000150fde92030,
0x00000150fde93570, 0x00000150fde8f060, 0x00000150fde94560, 0x00000150fde94ab0,
0x00000150fde90af0, 0x00000150fde92580, 0x00000150fde95000, 0x00000150fde93ac0,
0x00000150fde91040, 0x00000150fde8f5b0, 0x00000150fde8e5c0, 0x00000150fde8eb10,
0x00000150fde95550, 0x00000150fde95aa0, 0x00000150fde90050, 0x00000150fde8e070,
0x00000150fde91590, 0x00000150fde905a0, 0x00000150fd06f010, 0x00000150fd068080,
0x00000150fd06f560, 0x00000150fd069b10, 0x00000150fd06b050, 0x00000150fd06fab0,
0x00000150fd06baf0, 0x00000150fd069070, 0x00000150fd06cae0, 0x00000150fd06e570,
0x00000150fd06c040, 0x00000150fd06eac0, 0x00000150fd0685d0, 0x00000150fd068b20,
0x00000150fd06c590, 0x00000150fd0695c0, 0x00000150fd06a060, 0x00000150fd06e020,
0x00000150fd06a5b0, 0x00000150fd06ab00, 0x00000150fd06b5a0, 0x00000150fd06d030,
0x00000150fd06d580, 0x00000150fd06dad0, 0x00000150fcc76050, 0x00000150fcc7c540,
0x00000150fcc7b000, 0x00000150fcc75060, 0x00000150fcc7bff0, 0x00000150fcc7baa0,
0x00000150fcc76af0, 0x00000150fcc75b00, 0x00000150fcc7ca90, 0x00000150fcc7a560,
0x00000150fcc77590, 0x00000150fcc755b0, 0x00000150fcc765a0, 0x00000150fcc77ae0,
0x00000150fcc77040, 0x00000150fcc79020, 0x00000150fcc7aab0, 0x00000150fcc78030,
0x00000150fcc7a010, 0x00000150fcc78580, 0x00000150fcc7b550, 0x00000150fcc78ad0,
0x00000150fcc79570, 0x00000150fcc79ac0, 0x00000150fd22f370, 0x00000150fd22be50,
0x00000150fd229e70, 0x00000150fd22a910, 0x00000150fd230e00, 0x00000150fd22e380,
0x00000150fd22a3c0, 0x00000150fd231350, 0x00000150fd22d8e0, 0x00000150fd22de30,
0x00000150fd22e8d0, 0x00000150fd22ae60, 0x00000150fd22ee20, 0x00000150fd22c8f0,
0x00000150fd2318a0, 0x00000150fd22ce40, 0x00000150fd22b3b0, 0x00000150fd22f8c0,
0x00000150fd22b900, 0x00000150fd22c3a0, 0x00000150fd22d390, 0x00000150fd22fe10,
0x00000150fd230360, 0x00000150fde91ae0
}

Java Threads: ( => current thread )
  0x00000150d7b2a0a0 JavaThread "main" [_thread_blocked, id=35084, stack(0x0000001ec4200000,0x0000001ec4300000)]
  0x00000150f8071fe0 JavaThread "Reference Handler" daemon [_thread_blocked, id=23180, stack(0x0000001ec4900000,0x0000001ec4a00000)]
  0x00000150f8072b10 JavaThread "Finalizer" daemon [_thread_blocked, id=7440, stack(0x0000001ec4a00000,0x0000001ec4b00000)]
  0x00000150f8074a50 JavaThread "Signal Dispatcher" daemon [_thread_blocked, id=39500, stack(0x0000001ec4b00000,0x0000001ec4c00000)]
  0x00000150f8077810 JavaThread "Attach Listener" daemon [_thread_blocked, id=37036, stack(0x0000001ec4c00000,0x0000001ec4d00000)]
  0x00000150f807a150 JavaThread "Service Thread" daemon [_thread_blocked, id=40700, stack(0x0000001ec4d00000,0x0000001ec4e00000)]
  0x00000150f807ca90 JavaThread "Monitor Deflation Thread" daemon [_thread_blocked, id=35424, stack(0x0000001ec4e00000,0x0000001ec4f00000)]
  0x00000150f8086710 JavaThread "C2 CompilerThread0" daemon [_thread_blocked, id=29492, stack(0x0000001ec4f00000,0x0000001ec5000000)]
  0x00000150f808a580 JavaThread "C1 CompilerThread0" daemon [_thread_blocked, id=14936, stack(0x0000001ec5000000,0x0000001ec5100000)]
  0x00000150f808ef10 JavaThread "Sweeper thread" daemon [_thread_blocked, id=956, stack(0x0000001ec5100000,0x0000001ec5200000)]
  0x00000150fc45a270 JavaThread "Common-Cleaner" daemon [_thread_blocked, id=41008, stack(0x0000001ec5200000,0x0000001ec5300000)]
  0x00000150fca24630 JavaThread "Monitor Ctrl-Break" daemon [_thread_in_native, id=19440, stack(0x0000001ec5400000,0x0000001ec5500000)]
  0x00000150fce19a90 JavaThread "Notification Thread" daemon [_thread_blocked, id=30476, stack(0x0000001ec5500000,0x0000001ec5600000)]
=>0x00000150fd542b10 JavaThread "QuantumRenderer-0" daemon [_thread_in_native, id=35328, stack(0x0000001ec5300000,0x0000001ec5400000)]
  0x00000150fcdee750 JavaThread "InvokeLaterDispatcher" daemon [_thread_blocked, id=19164, stack(0x0000001ec5a00000,0x0000001ec5b00000)]
  0x00000150fcdeba20 JavaThread "JavaFX Application Thread" [_thread_blocked, id=26984, stack(0x0000001ec5b00000,0x0000001ec5c00000)]
  0x00000150fd9e5580 JavaThread "Thread-1" daemon [_thread_in_native, id=22012, stack(0x0000001ec5f00000,0x0000001ec6000000)]
  0x00000150fd9e5ad0 JavaThread "JavaFX-Launcher" [_thread_blocked, id=38688, stack(0x0000001ec6000000,0x0000001ec6100000)]
  0x00000150fd9e6570 JavaThread "JFXMedia Player EventQueueThread" daemon [_thread_blocked, id=10628, stack(0x0000001ec6600000,0x0000001ec6700000)]
  0x00000150fd9e5030 JavaThread "Prism Font Disposer" daemon [_thread_blocked, id=35592, stack(0x0000001ec6e00000,0x0000001ec6f00000)]
  0x00000150fd9e6020 JavaThread "Media Resource Disposer" daemon [_thread_blocked, id=34244, stack(0x0000001ec6f00000,0x0000001ec7000000)]
  0x00000150fde8fb00 JavaThread "Timer-0" daemon [_thread_blocked, id=33644, stack(0x0000001ec7000000,0x0000001ec7100000)]
  0x00000150fde94010 JavaThread "Thread-62" [_thread_blocked, id=8576, stack(0x0000001ec7300000,0x0000001ec7400000)]
  0x00000150fde92030 JavaThread "Cleaner-0" daemon [_thread_blocked, id=25724, stack(0x0000001ec7400000,0x0000001ec7500000)]
  0x00000150fde93570 JavaThread "Thread-65" [_thread_blocked, id=24028, stack(0x0000001ec7500000,0x0000001ec7600000)]
  0x00000150fde8f060 JavaThread "Thread-67" [_thread_blocked, id=12424, stack(0x0000001ec7600000,0x0000001ec7700000)]
  0x00000150fde94560 JavaThread "Thread-68" [_thread_blocked, id=23860, stack(0x0000001ec7700000,0x0000001ec7800000)]
  0x00000150fde94ab0 JavaThread "Thread-70" [_thread_blocked, id=42372, stack(0x0000001ec7800000,0x0000001ec7900000)]
  0x00000150fde90af0 JavaThread "Thread-71" [_thread_blocked, id=28624, stack(0x0000001ec7900000,0x0000001ec7a00000)]
  0x00000150fde92580 JavaThread "Thread-73" [_thread_blocked, id=29632, stack(0x0000001ec7a00000,0x0000001ec7b00000)]
  0x00000150fde95000 JavaThread "Thread-78" [_thread_blocked, id=21820, stack(0x0000001ec7b00000,0x0000001ec7c00000)]
  0x00000150fde93ac0 JavaThread "Thread-79" [_thread_blocked, id=21816, stack(0x0000001ec7c00000,0x0000001ec7d00000)]
  0x00000150fde91040 JavaThread "Thread-81" [_thread_blocked, id=41224, stack(0x0000001ec7d00000,0x0000001ec7e00000)]
  0x00000150fde8f5b0 JavaThread "Thread-82" [_thread_blocked, id=40768, stack(0x0000001ec7e00000,0x0000001ec7f00000)]
  0x00000150fde8e5c0 JavaThread "Thread-85" [_thread_blocked, id=2564, stack(0x0000001ec7f00000,0x0000001ec8000000)]
  0x00000150fde8eb10 JavaThread "Thread-86" [_thread_blocked, id=39712, stack(0x0000001ec8000000,0x0000001ec8100000)]
  0x00000150fde95550 JavaThread "Thread-88" [_thread_blocked, id=26408, stack(0x0000001ec8100000,0x0000001ec8200000)]
  0x00000150fde95aa0 JavaThread "Thread-89" [_thread_blocked, id=9416, stack(0x0000001ec8200000,0x0000001ec8300000)]
  0x00000150fde90050 JavaThread "Thread-91" [_thread_blocked, id=14200, stack(0x0000001ec8300000,0x0000001ec8400000)]
  0x00000150fde8e070 JavaThread "Thread-94" [_thread_blocked, id=23236, stack(0x0000001ec8400000,0x0000001ec8500000)]
  0x00000150fde91590 JavaThread "Thread-95" [_thread_blocked, id=16844, stack(0x0000001ec8500000,0x0000001ec8600000)]
  0x00000150fde905a0 JavaThread "Thread-96" [_thread_blocked, id=9552, stack(0x0000001ec8600000,0x0000001ec8700000)]
  0x00000150fd06f010 JavaThread "Thread-97" [_thread_blocked, id=9068, stack(0x0000001ec8700000,0x0000001ec8800000)]
  0x00000150fd068080 JavaThread "Thread-98" [_thread_blocked, id=12140, stack(0x0000001ec8800000,0x0000001ec8900000)]
  0x00000150fd06f560 JavaThread "Thread-99" [_thread_blocked, id=30704, stack(0x0000001ec8900000,0x0000001ec8a00000)]
  0x00000150fd069b10 JavaThread "Thread-102" [_thread_blocked, id=20044, stack(0x0000001ec8a00000,0x0000001ec8b00000)]
  0x00000150fd06b050 JavaThread "Thread-103" [_thread_blocked, id=21172, stack(0x0000001ec8b00000,0x0000001ec8c00000)]
  0x00000150fd06fab0 JavaThread "Thread-104" [_thread_blocked, id=42664, stack(0x0000001ec8c00000,0x0000001ec8d00000)]
  0x00000150fd06baf0 JavaThread "Thread-106" [_thread_blocked, id=2536, stack(0x0000001ec8d00000,0x0000001ec8e00000)]
  0x00000150fd069070 JavaThread "Thread-107" [_thread_blocked, id=11928, stack(0x0000001ec8e00000,0x0000001ec8f00000)]
  0x00000150fd06cae0 JavaThread "Thread-108" [_thread_blocked, id=17160, stack(0x0000001ec8f00000,0x0000001ec9000000)]
  0x00000150fd06e570 JavaThread "Thread-109" [_thread_blocked, id=19088, stack(0x0000001ec9000000,0x0000001ec9100000)]
  0x00000150fd06c040 JavaThread "Thread-111" [_thread_blocked, id=29880, stack(0x0000001ec9100000,0x0000001ec9200000)]
  0x00000150fd06eac0 JavaThread "Thread-112" [_thread_blocked, id=30648, stack(0x0000001ec9200000,0x0000001ec9300000)]
  0x00000150fd0685d0 JavaThread "Thread-114" [_thread_blocked, id=23788, stack(0x0000001ec9300000,0x0000001ec9400000)]
  0x00000150fd068b20 JavaThread "Thread-115" [_thread_blocked, id=42560, stack(0x0000001ec9400000,0x0000001ec9500000)]
  0x00000150fd06c590 JavaThread "Thread-117" [_thread_blocked, id=18548, stack(0x0000001ec9500000,0x0000001ec9600000)]
  0x00000150fd0695c0 JavaThread "Thread-118" [_thread_blocked, id=21140, stack(0x0000001ec9600000,0x0000001ec9700000)]
  0x00000150fd06a060 JavaThread "Thread-119" [_thread_blocked, id=42324, stack(0x0000001ec9700000,0x0000001ec9800000)]
  0x00000150fd06e020 JavaThread "Thread-121" [_thread_blocked, id=38984, stack(0x0000001ec9800000,0x0000001ec9900000)]
  0x00000150fd06a5b0 JavaThread "Thread-122" [_thread_blocked, id=18448, stack(0x0000001ec9900000,0x0000001ec9a00000)]
  0x00000150fd06ab00 JavaThread "Thread-123" [_thread_blocked, id=28816, stack(0x0000001ec9a00000,0x0000001ec9b00000)]
  0x00000150fd06b5a0 JavaThread "Thread-126" [_thread_blocked, id=2868, stack(0x0000001ec9b00000,0x0000001ec9c00000)]
  0x00000150fd06d030 JavaThread "Thread-127" [_thread_blocked, id=40556, stack(0x0000001ec9c00000,0x0000001ec9d00000)]
  0x00000150fd06d580 JavaThread "Thread-128" [_thread_blocked, id=18852, stack(0x0000001ec9d00000,0x0000001ec9e00000)]
  0x00000150fd06dad0 JavaThread "Thread-129" [_thread_blocked, id=252, stack(0x0000001ec9e00000,0x0000001ec9f00000)]
  0x00000150fcc76050 JavaThread "Thread-131" [_thread_blocked, id=24508, stack(0x0000001ec9f00000,0x0000001eca000000)]
  0x00000150fcc7c540 JavaThread "Thread-133" [_thread_blocked, id=29856, stack(0x0000001eca000000,0x0000001eca100000)]
  0x00000150fcc7b000 JavaThread "Thread-134" [_thread_blocked, id=36656, stack(0x0000001eca100000,0x0000001eca200000)]
  0x00000150fcc75060 JavaThread "Thread-136" [_thread_blocked, id=30340, stack(0x0000001eca200000,0x0000001eca300000)]
  0x00000150fcc7bff0 JavaThread "Thread-137" [_thread_blocked, id=11788, stack(0x0000001eca300000,0x0000001eca400000)]
  0x00000150fcc7baa0 JavaThread "Thread-138" [_thread_blocked, id=6004, stack(0x0000001eca400000,0x0000001eca500000)]
  0x00000150fcc76af0 JavaThread "Thread-139" [_thread_blocked, id=27444, stack(0x0000001eca500000,0x0000001eca600000)]
  0x00000150fcc75b00 JavaThread "Thread-141" [_thread_blocked, id=25396, stack(0x0000001eca600000,0x0000001eca700000)]
  0x00000150fcc7ca90 JavaThread "Thread-142" [_thread_blocked, id=29836, stack(0x0000001eca700000,0x0000001eca800000)]
  0x00000150fcc7a560 JavaThread "Thread-143" [_thread_blocked, id=15324, stack(0x0000001eca800000,0x0000001eca900000)]
  0x00000150fcc77590 JavaThread "Thread-144" [_thread_blocked, id=36076, stack(0x0000001eca900000,0x0000001ecaa00000)]
  0x00000150fcc755b0 JavaThread "Thread-145" [_thread_blocked, id=37560, stack(0x0000001ecaa00000,0x0000001ecab00000)]
  0x00000150fcc765a0 JavaThread "Thread-146" [_thread_blocked, id=6128, stack(0x0000001ecab00000,0x0000001ecac00000)]
  0x00000150fcc77ae0 JavaThread "Thread-147" [_thread_blocked, id=35444, stack(0x0000001ecac00000,0x0000001ecad00000)]
  0x00000150fcc77040 JavaThread "Thread-148" [_thread_blocked, id=36200, stack(0x0000001ecad00000,0x0000001ecae00000)]
  0x00000150fcc79020 JavaThread "Thread-149" [_thread_blocked, id=16452, stack(0x0000001ecae00000,0x0000001ecaf00000)]
  0x00000150fcc7aab0 JavaThread "Thread-150" [_thread_blocked, id=22608, stack(0x0000001ecaf00000,0x0000001ecb000000)]
  0x00000150fcc78030 JavaThread "Thread-151" [_thread_blocked, id=33504, stack(0x0000001ecb000000,0x0000001ecb100000)]
  0x00000150fcc7a010 JavaThread "Thread-152" [_thread_blocked, id=36964, stack(0x0000001ecb100000,0x0000001ecb200000)]
  0x00000150fcc78580 JavaThread "Thread-153" [_thread_blocked, id=29468, stack(0x0000001ecb200000,0x0000001ecb300000)]
  0x00000150fcc7b550 JavaThread "Thread-155" [_thread_blocked, id=27692, stack(0x0000001ecb300000,0x0000001ecb400000)]
  0x00000150fcc78ad0 JavaThread "Thread-157" [_thread_blocked, id=33436, stack(0x0000001ecb400000,0x0000001ecb500000)]
  0x00000150fcc79570 JavaThread "Thread-158" [_thread_blocked, id=36904, stack(0x0000001ecb500000,0x0000001ecb600000)]
  0x00000150fcc79ac0 JavaThread "Thread-159" [_thread_blocked, id=8200, stack(0x0000001ecb600000,0x0000001ecb700000)]
  0x00000150fd22f370 JavaThread "Thread-160" [_thread_blocked, id=22900, stack(0x0000001ecb700000,0x0000001ecb800000)]
  0x00000150fd22be50 JavaThread "Thread-161" [_thread_blocked, id=21792, stack(0x0000001ecb800000,0x0000001ecb900000)]
  0x00000150fd229e70 JavaThread "Thread-162" [_thread_blocked, id=6788, stack(0x0000001ecb900000,0x0000001ecba00000)]
  0x00000150fd22a910 JavaThread "Thread-166" [_thread_blocked, id=40776, stack(0x0000001ecba00000,0x0000001ecbb00000)]
  0x00000150fd230e00 JavaThread "Thread-167" [_thread_blocked, id=36980, stack(0x0000001ecbb00000,0x0000001ecbc00000)]
  0x00000150fd22e380 JavaThread "Thread-168" [_thread_blocked, id=35624, stack(0x0000001ecbc00000,0x0000001ecbd00000)]
  0x00000150fd22a3c0 JavaThread "Thread-169" [_thread_blocked, id=27596, stack(0x0000001ecbd00000,0x0000001ecbe00000)]
  0x00000150fd231350 JavaThread "Thread-170" [_thread_blocked, id=32688, stack(0x0000001ecbe00000,0x0000001ecbf00000)]
  0x00000150fd22d8e0 JavaThread "Thread-171" [_thread_blocked, id=23316, stack(0x0000001ecbf00000,0x0000001ecc000000)]
  0x00000150fd22de30 JavaThread "Thread-175" [_thread_blocked, id=3424, stack(0x0000001ecc000000,0x0000001ecc100000)]
  0x00000150fd22e8d0 JavaThread "Thread-179" [_thread_blocked, id=7124, stack(0x0000001ecc100000,0x0000001ecc200000)]
  0x00000150fd22ae60 JavaThread "Thread-181" [_thread_blocked, id=20220, stack(0x0000001ecc200000,0x0000001ecc300000)]
  0x00000150fd22ee20 JavaThread "Thread-185" [_thread_blocked, id=16916, stack(0x0000001ecc300000,0x0000001ecc400000)]
  0x00000150fd22c8f0 JavaThread "Thread-188" [_thread_blocked, id=24484, stack(0x0000001ecc400000,0x0000001ecc500000)]
  0x00000150fd2318a0 JavaThread "Thread-190" [_thread_blocked, id=27508, stack(0x0000001ecc500000,0x0000001ecc600000)]
  0x00000150fd22ce40 JavaThread "Thread-191" [_thread_blocked, id=28684, stack(0x0000001ecc600000,0x0000001ecc700000)]
  0x00000150fd22b3b0 JavaThread "Thread-192" [_thread_blocked, id=3272, stack(0x0000001ecc700000,0x0000001ecc800000)]
  0x00000150fd22f8c0 JavaThread "Thread-195" [_thread_blocked, id=36276, stack(0x0000001ecc800000,0x0000001ecc900000)]
  0x00000150fd22b900 JavaThread "Thread-196" [_thread_blocked, id=25584, stack(0x0000001ecc900000,0x0000001ecca00000)]
  0x00000150fd22c3a0 JavaThread "Thread-197" [_thread_blocked, id=2872, stack(0x0000001ecca00000,0x0000001eccb00000)]
  0x00000150fd22d390 JavaThread "Thread-199" [_thread_blocked, id=31872, stack(0x0000001eccb00000,0x0000001eccc00000)]
  0x00000150fd22fe10 JavaThread "Thread-201" [_thread_blocked, id=34764, stack(0x0000001eccc00000,0x0000001eccd00000)]
  0x00000150fd230360 JavaThread "Thread-205" [_thread_blocked, id=11144, stack(0x0000001eccd00000,0x0000001ecce00000)]
  0x00000150fde91ae0 JavaThread "SIGINT handler" daemon [_thread_blocked, id=24832, stack(0x0000001ec3f00000,0x0000001ec4000000)]

Other Threads:
  0x00000150f8056d20 VMThread "VM Thread" [stack: 0x0000001ec4800000,0x0000001ec4900000] [id=37328]
  0x00000150fcde9f50 WatcherThread "VM Periodic Task Thread" [stack: 0x0000001ec5600000,0x0000001ec5700000] [id=26068]
  0x00000150d7b87160 WorkerThread "GC Thread#0" [stack: 0x0000001ec4300000,0x0000001ec4400000] [id=5740]
  0x00000150fccccf30 WorkerThread "GC Thread#1" [stack: 0x0000001ec5700000,0x0000001ec5800000] [id=34952]
  0x00000150fd5e0880 WorkerThread "GC Thread#2" [stack: 0x0000001ec5800000,0x0000001ec5900000] [id=32728]
  0x00000150fc90d0e0 WorkerThread "GC Thread#3" [stack: 0x0000001ec5900000,0x0000001ec5a00000] [id=17700]
  0x00000150d7b949b0 ConcurrentGCThread "G1 Main Marker" [stack: 0x0000001ec4400000,0x0000001ec4500000] [id=36536]
  0x00000150d7b96290 WorkerThread "G1 Conc#0" [stack: 0x0000001ec4500000,0x0000001ec4600000] [id=9644]
  0x00000150d7bedfa0 ConcurrentGCThread "G1 Refine#0" [stack: 0x0000001ec4600000,0x0000001ec4700000] [id=24600]
  0x00000150d7bee980 ConcurrentGCThread "G1 Service" [stack: 0x0000001ec4700000,0x0000001ec4800000] [id=9236]

Threads with active compile tasks:

VM state: not at safepoint (normal execution)

VM Mutex/Monitor currently owned by a thread: None

Heap address: 0x0000000741a00000, size: 3046 MB, Compressed Oops mode: Zero based, Oop shift amount: 3

CDS archive(s) mapped at: [0x0000000800000000-0x0000000800c40000-0x0000000800c40000), size 12845056, SharedBaseAddress: 0x0000000800000000, ArchiveRelocationMode: 0.
Compressed class space mapped at: 0x0000000801000000-0x0000000841000000, reserved size: 1073741824
Narrow klass base: 0x0000000800000000, Narrow klass shift: 0, Narrow klass range: 0x100000000

GC Precious Log:
 CardTable entry size: 512
 Card Set container configuration: InlinePtr #cards 4 size 8 Array Of Cards #cards 16 size 48 Howl #buckets 8 coarsen threshold 3686 Howl Bitmap #cards 512 size 80 coarsen threshold 460 Card regions per heap region 1 cards per card region 4096
 CPUs: 4 total, 4 available
 Memory: 12179M
 Large Page Support: Disabled
 NUMA Support: Disabled
 Compressed Oops: Enabled (Zero based)
 Heap Region Size: 2M
 Heap Min Capacity: 8M
 Heap Initial Capacity: 192M
 Heap Max Capacity: 3046M
 Pre-touch: Disabled
 Parallel Workers: 4
 Concurrent Workers: 1
 Concurrent Refinement Workers: 4
 Periodic GC: Disabled

Heap:
 garbage-first heap   total 196608K, used 117168K [0x0000000741a00000, 0x0000000800000000)
  region size 2048K, 25 young (51200K), 1 survivors (2048K)
 Metaspace       used 18573K, committed 18880K, reserved 1114112K
  class space    used 2464K, committed 2624K, reserved 1048576K

Heap Regions: E=young(eden), S=young(survivor), O=old, HS=humongous(starts), HC=humongous(continues), CS=collection set, F=free, OA=open archive, CA=closed archive, TAMS=top-at-mark-start (previous, next)
|   0|0x0000000741a00000, 0x0000000741c00000, 0x0000000741c00000|100%| O|  |TAMS 0x0000000741a00000, 0x0000000741a00000| Untracked 
|   1|0x0000000741c00000, 0x0000000741e00000, 0x0000000741e00000|100%|HS|  |TAMS 0x0000000741c00000, 0x0000000741c00000| Complete 
|   2|0x0000000741e00000, 0x0000000742000000, 0x0000000742000000|100%|HC|  |TAMS 0x0000000741e00000, 0x0000000741e00000| Complete 
|   3|0x0000000742000000, 0x0000000742200000, 0x0000000742200000|100%|HC|  |TAMS 0x0000000742000000, 0x0000000742000000| Complete 
|   4|0x0000000742200000, 0x0000000742400000, 0x0000000742400000|100%|HC|  |TAMS 0x0000000742200000, 0x0000000742200000| Complete 
|   5|0x0000000742400000, 0x0000000742600000, 0x0000000742600000|100%|HC|  |TAMS 0x0000000742400000, 0x0000000742400000| Complete 
|   6|0x0000000742600000, 0x0000000742800000, 0x0000000742800000|100%|HC|  |TAMS 0x0000000742600000, 0x0000000742600000| Complete 
|   7|0x0000000742800000, 0x0000000742a00000, 0x0000000742a00000|100%|HC|  |TAMS 0x0000000742800000, 0x0000000742800000| Complete 
|   8|0x0000000742a00000, 0x0000000742c00000, 0x0000000742c00000|100%|HC|  |TAMS 0x0000000742a00000, 0x0000000742a00000| Complete 
|   9|0x0000000742c00000, 0x0000000742e00000, 0x0000000742e00000|100%|HC|  |TAMS 0x0000000742c00000, 0x0000000742c00000| Complete 
|  10|0x0000000742e00000, 0x0000000743000000, 0x0000000743000000|100%|HC|  |TAMS 0x0000000742e00000, 0x0000000742e00000| Complete 
|  11|0x0000000743000000, 0x0000000743200000, 0x0000000743200000|100%|HC|  |TAMS 0x0000000743000000, 0x0000000743000000| Complete 
|  12|0x0000000743200000, 0x0000000743400000, 0x0000000743400000|100%|HC|  |TAMS 0x0000000743200000, 0x0000000743200000| Complete 
|  13|0x0000000743400000, 0x0000000743600000, 0x0000000743600000|100%|HS|  |TAMS 0x0000000743400000, 0x0000000743400000| Complete 
|  14|0x0000000743600000, 0x0000000743800000, 0x0000000743800000|100%| O|  |TAMS 0x0000000743600000, 0x0000000743600000| Untracked 
|  15|0x0000000743800000, 0x0000000743800000, 0x0000000743a00000|  0%| F|  |TAMS 0x0000000743800000, 0x0000000743800000| Untracked 
|  16|0x0000000743a00000, 0x0000000743a00000, 0x0000000743c00000|  0%| F|  |TAMS 0x0000000743a00000, 0x0000000743a00000| Untracked 
|  17|0x0000000743c00000, 0x0000000743c00000, 0x0000000743e00000|  0%| F|  |TAMS 0x0000000743c00000, 0x0000000743c00000| Untracked 
|  18|0x0000000743e00000, 0x0000000744000000, 0x0000000744000000|100%|HS|  |TAMS 0x0000000743e00000, 0x0000000743e00000| Complete 
|  19|0x0000000744000000, 0x0000000744200000, 0x0000000744200000|100%|HS|  |TAMS 0x0000000744000000, 0x0000000744000000| Complete 
|  20|0x0000000744200000, 0x0000000744400000, 0x0000000744400000|100%|HC|  |TAMS 0x0000000744200000, 0x0000000744200000| Complete 
|  21|0x0000000744400000, 0x0000000744600000, 0x0000000744600000|100%|HS|  |TAMS 0x0000000744400000, 0x0000000744400000| Complete 
|  22|0x0000000744600000, 0x0000000744800000, 0x0000000744800000|100%|HS|  |TAMS 0x0000000744600000, 0x0000000744600000| Complete 
|  23|0x0000000744800000, 0x0000000744a00000, 0x0000000744a00000|100%|HC|  |TAMS 0x0000000744800000, 0x0000000744800000| Complete 
|  24|0x0000000744a00000, 0x0000000744c00000, 0x0000000744c00000|100%|HS|  |TAMS 0x0000000744a00000, 0x0000000744a00000| Complete 
|  25|0x0000000744c00000, 0x0000000744e00000, 0x0000000744e00000|100%|HS|  |TAMS 0x0000000744c00000, 0x0000000744c00000| Complete 
|  26|0x0000000744e00000, 0x0000000745000000, 0x0000000745000000|100%|HS|  |TAMS 0x0000000744e00000, 0x0000000744e00000| Complete 
|  27|0x0000000745000000, 0x0000000745200000, 0x0000000745200000|100%|HC|  |TAMS 0x0000000745000000, 0x0000000745000000| Complete 
|  28|0x0000000745200000, 0x0000000745400000, 0x0000000745400000|100%|HS|  |TAMS 0x0000000745200000, 0x0000000745200000| Complete 
|  29|0x0000000745400000, 0x0000000745600000, 0x0000000745600000|100%| O|  |TAMS 0x0000000745400000, 0x0000000745400000| Untracked 
|  30|0x0000000745600000, 0x0000000745800000, 0x0000000745800000|100%| O|  |TAMS 0x0000000745600000, 0x0000000745600000| Untracked 
|  31|0x0000000745800000, 0x0000000745a00000, 0x0000000745a00000|100%|HS|  |TAMS 0x0000000745800000, 0x0000000745800000| Complete 
|  32|0x0000000745a00000, 0x0000000745c00000, 0x0000000745c00000|100%|HS|  |TAMS 0x0000000745a00000, 0x0000000745a00000| Complete 
|  33|0x0000000745c00000, 0x0000000745e00000, 0x0000000745e00000|100%|HS|  |TAMS 0x0000000745c00000, 0x0000000745c00000| Complete 
|  34|0x0000000745e00000, 0x0000000746000000, 0x0000000746000000|100%| O|  |TAMS 0x0000000745e00000, 0x0000000745e00000| Untracked 
|  35|0x0000000746000000, 0x0000000746200000, 0x0000000746200000|100%| O|  |TAMS 0x0000000746000000, 0x0000000746000000| Untracked 
|  36|0x0000000746200000, 0x0000000746346a00, 0x0000000746400000| 63%| O|  |TAMS 0x0000000746200000, 0x0000000746200000| Untracked 
|  37|0x0000000746400000, 0x0000000746400000, 0x0000000746600000|  0%| F|  |TAMS 0x0000000746400000, 0x0000000746400000| Untracked 
|  38|0x0000000746600000, 0x0000000746600000, 0x0000000746800000|  0%| F|  |TAMS 0x0000000746600000, 0x0000000746600000| Untracked 
|  39|0x0000000746800000, 0x0000000746800000, 0x0000000746a00000|  0%| F|  |TAMS 0x0000000746800000, 0x0000000746800000| Untracked 
|  40|0x0000000746a00000, 0x0000000746a00000, 0x0000000746c00000|  0%| F|  |TAMS 0x0000000746a00000, 0x0000000746a00000| Untracked 
|  41|0x0000000746c00000, 0x0000000746c00000, 0x0000000746e00000|  0%| F|  |TAMS 0x0000000746c00000, 0x0000000746c00000| Untracked 
|  42|0x0000000746e00000, 0x0000000746e00000, 0x0000000747000000|  0%| F|  |TAMS 0x0000000746e00000, 0x0000000746e00000| Untracked 
|  43|0x0000000747000000, 0x0000000747000000, 0x0000000747200000|  0%| F|  |TAMS 0x0000000747000000, 0x0000000747000000| Untracked 
|  44|0x0000000747200000, 0x0000000747200000, 0x0000000747400000|  0%| F|  |TAMS 0x0000000747200000, 0x0000000747200000| Untracked 
|  45|0x0000000747400000, 0x0000000747400000, 0x0000000747600000|  0%| F|  |TAMS 0x0000000747400000, 0x0000000747400000| Untracked 
|  46|0x0000000747600000, 0x0000000747600000, 0x0000000747800000|  0%| F|  |TAMS 0x0000000747600000, 0x0000000747600000| Untracked 
|  47|0x0000000747800000, 0x0000000747800000, 0x0000000747a00000|  0%| F|  |TAMS 0x0000000747800000, 0x0000000747800000| Untracked 
|  48|0x0000000747a00000, 0x0000000747a00000, 0x0000000747c00000|  0%| F|  |TAMS 0x0000000747a00000, 0x0000000747a00000| Untracked 
|  49|0x0000000747c00000, 0x0000000747c00000, 0x0000000747e00000|  0%| F|  |TAMS 0x0000000747c00000, 0x0000000747c00000| Untracked 
|  50|0x0000000747e00000, 0x0000000747f25630, 0x0000000748000000| 57%| S|CS|TAMS 0x0000000747e00000, 0x0000000747e00000| Complete 
|  51|0x0000000748000000, 0x0000000748000000, 0x0000000748200000|  0%| F|  |TAMS 0x0000000748000000, 0x0000000748000000| Untracked 
|  52|0x0000000748200000, 0x0000000748200000, 0x0000000748400000|  0%| F|  |TAMS 0x0000000748200000, 0x0000000748200000| Untracked 
|  53|0x0000000748400000, 0x0000000748400000, 0x0000000748600000|  0%| F|  |TAMS 0x0000000748400000, 0x0000000748400000| Untracked 
|  54|0x0000000748600000, 0x0000000748600000, 0x0000000748800000|  0%| F|  |TAMS 0x0000000748600000, 0x0000000748600000| Untracked 
|  55|0x0000000748800000, 0x0000000748800000, 0x0000000748a00000|  0%| F|  |TAMS 0x0000000748800000, 0x0000000748800000| Untracked 
|  56|0x0000000748a00000, 0x0000000748a00000, 0x0000000748c00000|  0%| F|  |TAMS 0x0000000748a00000, 0x0000000748a00000| Untracked 
|  57|0x0000000748c00000, 0x0000000748c00000, 0x0000000748e00000|  0%| F|  |TAMS 0x0000000748c00000, 0x0000000748c00000| Untracked 
|  58|0x0000000748e00000, 0x0000000748e00000, 0x0000000749000000|  0%| F|  |TAMS 0x0000000748e00000, 0x0000000748e00000| Untracked 
|  59|0x0000000749000000, 0x0000000749000000, 0x0000000749200000|  0%| F|  |TAMS 0x0000000749000000, 0x0000000749000000| Untracked 
|  60|0x0000000749200000, 0x0000000749200000, 0x0000000749400000|  0%| F|  |TAMS 0x0000000749200000, 0x0000000749200000| Untracked 
|  61|0x0000000749400000, 0x0000000749400000, 0x0000000749600000|  0%| F|  |TAMS 0x0000000749400000, 0x0000000749400000| Untracked 
|  62|0x0000000749600000, 0x0000000749600000, 0x0000000749800000|  0%| F|  |TAMS 0x0000000749600000, 0x0000000749600000| Untracked 
|  63|0x0000000749800000, 0x0000000749800000, 0x0000000749a00000|  0%| F|  |TAMS 0x0000000749800000, 0x0000000749800000| Untracked 
|  64|0x0000000749a00000, 0x0000000749a00000, 0x0000000749c00000|  0%| F|  |TAMS 0x0000000749a00000, 0x0000000749a00000| Untracked 
|  65|0x0000000749c00000, 0x0000000749c00000, 0x0000000749e00000|  0%| F|  |TAMS 0x0000000749c00000, 0x0000000749c00000| Untracked 
|  66|0x0000000749e00000, 0x0000000749e00000, 0x000000074a000000|  0%| F|  |TAMS 0x0000000749e00000, 0x0000000749e00000| Untracked 
|  67|0x000000074a000000, 0x000000074a000000, 0x000000074a200000|  0%| F|  |TAMS 0x000000074a000000, 0x000000074a000000| Untracked 
|  68|0x000000074a200000, 0x000000074a200000, 0x000000074a400000|  0%| F|  |TAMS 0x000000074a200000, 0x000000074a200000| Untracked 
|  69|0x000000074a400000, 0x000000074a400000, 0x000000074a600000|  0%| F|  |TAMS 0x000000074a400000, 0x000000074a400000| Untracked 
|  70|0x000000074a600000, 0x000000074a600000, 0x000000074a800000|  0%| F|  |TAMS 0x000000074a600000, 0x000000074a600000| Untracked 
|  71|0x000000074a800000, 0x000000074a800000, 0x000000074aa00000|  0%| F|  |TAMS 0x000000074a800000, 0x000000074a800000| Untracked 
|  72|0x000000074aa00000, 0x000000074aa21b90, 0x000000074ac00000|  6%| E|  |TAMS 0x000000074aa00000, 0x000000074aa00000| Complete 
|  73|0x000000074ac00000, 0x000000074ae00000, 0x000000074ae00000|100%| E|CS|TAMS 0x000000074ac00000, 0x000000074ac00000| Complete 
|  74|0x000000074ae00000, 0x000000074b000000, 0x000000074b000000|100%| E|CS|TAMS 0x000000074ae00000, 0x000000074ae00000| Complete 
|  75|0x000000074b000000, 0x000000074b200000, 0x000000074b200000|100%| E|CS|TAMS 0x000000074b000000, 0x000000074b000000| Complete 
|  76|0x000000074b200000, 0x000000074b400000, 0x000000074b400000|100%| E|CS|TAMS 0x000000074b200000, 0x000000074b200000| Complete 
|  77|0x000000074b400000, 0x000000074b600000, 0x000000074b600000|100%| E|CS|TAMS 0x000000074b400000, 0x000000074b400000| Complete 
|  78|0x000000074b600000, 0x000000074b800000, 0x000000074b800000|100%| E|CS|TAMS 0x000000074b600000, 0x000000074b600000| Complete 
|  79|0x000000074b800000, 0x000000074ba00000, 0x000000074ba00000|100%| E|CS|TAMS 0x000000074b800000, 0x000000074b800000| Complete 
|  80|0x000000074ba00000, 0x000000074bc00000, 0x000000074bc00000|100%| E|CS|TAMS 0x000000074ba00000, 0x000000074ba00000| Complete 
|  81|0x000000074bc00000, 0x000000074be00000, 0x000000074be00000|100%| E|CS|TAMS 0x000000074bc00000, 0x000000074bc00000| Complete 
|  82|0x000000074be00000, 0x000000074c000000, 0x000000074c000000|100%| E|CS|TAMS 0x000000074be00000, 0x000000074be00000| Complete 
|  83|0x000000074c000000, 0x000000074c200000, 0x000000074c200000|100%| E|CS|TAMS 0x000000074c000000, 0x000000074c000000| Complete 
|  84|0x000000074c200000, 0x000000074c400000, 0x000000074c400000|100%| E|CS|TAMS 0x000000074c200000, 0x000000074c200000| Complete 
|  85|0x000000074c400000, 0x000000074c600000, 0x000000074c600000|100%| E|CS|TAMS 0x000000074c400000, 0x000000074c400000| Complete 
|  86|0x000000074c600000, 0x000000074c800000, 0x000000074c800000|100%| E|CS|TAMS 0x000000074c600000, 0x000000074c600000| Complete 
|  87|0x000000074c800000, 0x000000074ca00000, 0x000000074ca00000|100%| E|CS|TAMS 0x000000074c800000, 0x000000074c800000| Complete 
|  88|0x000000074ca00000, 0x000000074cc00000, 0x000000074cc00000|100%| E|CS|TAMS 0x000000074ca00000, 0x000000074ca00000| Complete 
|  89|0x000000074cc00000, 0x000000074ce00000, 0x000000074ce00000|100%| E|CS|TAMS 0x000000074cc00000, 0x000000074cc00000| Complete 
|  90|0x000000074ce00000, 0x000000074d000000, 0x000000074d000000|100%| E|CS|TAMS 0x000000074ce00000, 0x000000074ce00000| Complete 
|  91|0x000000074d000000, 0x000000074d200000, 0x000000074d200000|100%| E|CS|TAMS 0x000000074d000000, 0x000000074d000000| Complete 
|  92|0x000000074d200000, 0x000000074d400000, 0x000000074d400000|100%| E|CS|TAMS 0x000000074d200000, 0x000000074d200000| Complete 
|  93|0x000000074d400000, 0x000000074d600000, 0x000000074d600000|100%| E|CS|TAMS 0x000000074d400000, 0x000000074d400000| Complete 
|  94|0x000000074d600000, 0x000000074d800000, 0x000000074d800000|100%| E|CS|TAMS 0x000000074d600000, 0x000000074d600000| Complete 
|  95|0x000000074d800000, 0x000000074da00000, 0x000000074da00000|100%| E|CS|TAMS 0x000000074d800000, 0x000000074d800000| Complete 

Card table byte_map: [0x00000150ef090000,0x00000150ef690000] _byte_map_base: 0x00000150eb683000

Marking Bits (Prev, Next): (CMBitMap*) 0x00000150d7b87790, (CMBitMap*) 0x00000150d7b877d0
 Prev Bits: [0x00000150efc90000, 0x00000150f2c28000)
 Next Bits: [0x00000150f2c30000, 0x00000150f5bc8000)

Polling page: 0x00000150d72f0000

Metaspace:

Usage:
  Non-class:     15.73 MB used.
      Class:      2.41 MB used.
       Both:     18.14 MB used.

Virtual space:
  Non-class space:       64.00 MB reserved,      15.88 MB ( 25%) committed,  1 nodes.
      Class space:        1.00 GB reserved,       2.56 MB ( <1%) committed,  1 nodes.
             Both:        1.06 GB reserved,      18.44 MB (  2%) committed. 

Chunk freelists:
   Non-Class:  80.00 KB
       Class:  1.41 MB
        Both:  1.49 MB

MaxMetaspaceSize: unlimited
CompressedClassSpaceSize: 1.00 GB
Initial GC threshold: 21.00 MB
Current GC threshold: 21.00 MB
CDS: on
MetaspaceReclaimPolicy: balanced
 - commit_granule_bytes: 65536.
 - commit_granule_words: 8192.
 - virtual_space_node_default_size: 8388608.
 - enlarge_chunks_in_place: 1.
 - new_chunks_are_fully_committed: 0.
 - uncommit_free_chunks: 1.
 - use_allocation_guard: 0.


Internal statistics:

num_allocs_failed_limit: 0.
num_arena_births: 404.
num_arena_deaths: 0.
num_vsnodes_births: 2.
num_vsnodes_deaths: 0.
num_space_committed: 295.
num_space_uncommitted: 0.
num_chunks_returned_to_freelist: 0.
num_chunks_taken_from_freelist: 992.
num_chunk_merges: 0.
num_chunk_splits: 693.
num_chunks_enlarged: 510.
num_inconsistent_stats: 0.

CodeHeap 'non-profiled nmethods': size=120000Kb used=3608Kb max_used=3608Kb free=116392Kb
 bounds [0x00000150e7560000, 0x00000150e78f0000, 0x00000150eea90000]
CodeHeap 'profiled nmethods': size=120000Kb used=7573Kb max_used=9605Kb free=112426Kb
 bounds [0x00000150dfa90000, 0x00000150e0400000, 0x00000150e6fc0000]
CodeHeap 'non-nmethods': size=5760Kb used=1550Kb max_used=1657Kb free=4209Kb
 bounds [0x00000150e6fc0000, 0x00000150e7230000, 0x00000150e7560000]
 total_blobs=5207 nmethods=4366 adapters=751
 compilation: enabled
              stopped_count=0, restarted_count=0
 full_count=0

Compilation events (20 events):
Event: 160.191 Thread 0x00000150f808a580 5239       3       jdk.internal.ref.Cleaner::<init> (24 bytes)
Event: 160.192 Thread 0x00000150f808a580 nmethod 5239 0x00000150dfedde90 code [0x00000150dfede060, 0x00000150dfede438]
Event: 160.192 Thread 0x00000150f808a580 5240  s    3       jdk.internal.ref.Cleaner::add (26 bytes)
Event: 160.192 Thread 0x00000150f808a580 nmethod 5240 0x00000150e01f2390 code [0x00000150e01f2540, 0x00000150e01f2878]
Event: 160.506 Thread 0x00000150f8086710 5242       4       java.nio.MappedByteBuffer::position (6 bytes)
Event: 160.510 Thread 0x00000150f8086710 nmethod 5242 0x00000150e78da110 code [0x00000150e78da2a0, 0x00000150e78da378]
Event: 160.510 Thread 0x00000150f8086710 5243       4       jdk.internal.misc.Unsafe::allocateMemory (65 bytes)
Event: 160.513 Thread 0x00000150f8086710 nmethod 5243 0x00000150e78da490 code [0x00000150e78da620, 0x00000150e78da768]
Event: 160.672 Thread 0x00000150f8086710 5244       4       jdk.internal.misc.Unsafe::setMemory (10 bytes)
Event: 160.676 Thread 0x00000150f8086710 nmethod 5244 0x00000150e78da910 code [0x00000150e78daaa0, 0x00000150e78daba8]
Event: 160.676 Thread 0x00000150f8086710 5245       4       java.nio.MappedByteBuffer::<init> (22 bytes)
Event: 160.684 Thread 0x00000150f8086710 nmethod 5245 0x00000150e78dad10 code [0x00000150e78daea0, 0x00000150e78db238]
Event: 163.660 Thread 0x00000150f8086710 5246       4       com.sun.scenario.effect.impl.prism.ps.PPSTwoSamplerPeer::filterImpl (1040 bytes)
Event: 164.253 Thread 0x00000150f8086710 nmethod 5246 0x00000150e78db510 code [0x00000150e78db920, 0x00000150e78df9d8]
Event: 165.891 Thread 0x00000150f8086710 5247       4       java.nio.DirectByteBuffer$Deallocator::<init> (41 bytes)
Event: 165.893 Thread 0x00000150f8086710 nmethod 5247 0x00000150e78e4690 code [0x00000150e78e4800, 0x00000150e78e4878]
Event: 172.404 Thread 0x00000150f8086710 5248       4       java.util.concurrent.ConcurrentHashMap::put (8 bytes)
Event: 172.406 Thread 0x00000150f8086710 nmethod 5248 0x00000150e78e4990 code [0x00000150e78e4b20, 0x00000150e78e4bc8]
Event: 175.373 Thread 0x00000150f8086710 5249       4       com.sun.scenario.effect.impl.prism.ps.PPSBlend_DARKENPeer::getEffect (8 bytes)
Event: 175.375 Thread 0x00000150f8086710 nmethod 5249 0x00000150e78e4c90 code [0x00000150e78e4e20, 0x00000150e78e4ed8]

GC Heap History (16 events):
Event: 1.060 GC heap before
{Heap before GC invocations=0 (full 0):
 garbage-first heap   total 196608K, used 10240K [0x0000000741a00000, 0x0000000800000000)
  region size 2048K, 6 young (12288K), 0 survivors (0K)
 Metaspace       used 2690K, committed 2880K, reserved 1114112K
  class space    used 263K, committed 320K, reserved 1048576K
}
Event: 1.067 GC heap after
{Heap after GC invocations=1 (full 0):
 garbage-first heap   total 196608K, used 2294K [0x0000000741a00000, 0x0000000800000000)
  region size 2048K, 1 young (2048K), 1 survivors (2048K)
 Metaspace       used 2690K, committed 2880K, reserved 1114112K
  class space    used 263K, committed 320K, reserved 1048576K
}
Event: 2.064 GC heap before
{Heap before GC invocations=1 (full 0):
 garbage-first heap   total 196608K, used 16630K [0x0000000741a00000, 0x0000000800000000)
  region size 2048K, 9 young (18432K), 1 survivors (2048K)
 Metaspace       used 7871K, committed 8192K, reserved 1114112K
  class space    used 936K, committed 1088K, reserved 1048576K
}
Event: 2.071 GC heap after
{Heap after GC invocations=2 (full 0):
 garbage-first heap   total 196608K, used 4091K [0x0000000741a00000, 0x0000000800000000)
  region size 2048K, 2 young (4096K), 2 survivors (4096K)
 Metaspace       used 7871K, committed 8192K, reserved 1114112K
  class space    used 936K, committed 1088K, reserved 1048576K
}
Event: 15.605 GC heap before
{Heap before GC invocations=2 (full 0):
 garbage-first heap   total 196608K, used 71675K [0x0000000741a00000, 0x0000000800000000)
  region size 2048K, 22 young (45056K), 2 survivors (4096K)
 Metaspace       used 15800K, committed 16128K, reserved 1114112K
  class space    used 2051K, committed 2240K, reserved 1048576K
}
Event: 15.624 GC heap after
{Heap after GC invocations=3 (full 0):
 garbage-first heap   total 196608K, used 34628K [0x0000000741a00000, 0x0000000800000000)
  region size 2048K, 3 young (6144K), 3 survivors (6144K)
 Metaspace       used 15800K, committed 16128K, reserved 1114112K
  class space    used 2051K, committed 2240K, reserved 1048576K
}
Event: 22.735 GC heap before
{Heap before GC invocations=3 (full 0):
 garbage-first heap   total 196608K, used 155460K [0x0000000741a00000, 0x0000000800000000)
  region size 2048K, 45 young (92160K), 3 survivors (6144K)
 Metaspace       used 18393K, committed 18752K, reserved 1114112K
  class space    used 2456K, committed 2624K, reserved 1048576K
}
Event: 22.753 GC heap after
{Heap after GC invocations=4 (full 0):
 garbage-first heap   total 196608K, used 63704K [0x0000000741a00000, 0x0000000800000000)
  region size 2048K, 6 young (12288K), 6 survivors (12288K)
 Metaspace       used 18393K, committed 18752K, reserved 1114112K
  class space    used 2456K, committed 2624K, reserved 1048576K
}
Event: 52.272 GC heap before
{Heap before GC invocations=4 (full 0):
 garbage-first heap   total 196608K, used 149720K [0x0000000741a00000, 0x0000000800000000)
  region size 2048K, 43 young (88064K), 6 survivors (12288K)
 Metaspace       used 18541K, committed 18880K, reserved 1114112K
  class space    used 2457K, committed 2624K, reserved 1048576K
}
Event: 52.299 GC heap after
{Heap after GC invocations=5 (full 0):
 garbage-first heap   total 196608K, used 70479K [0x0000000741a00000, 0x0000000800000000)
  region size 2048K, 1 young (2048K), 1 survivors (2048K)
 Metaspace       used 18541K, committed 18880K, reserved 1114112K
  class space    used 2457K, committed 2624K, reserved 1048576K
}
Event: 86.167 GC heap before
{Heap before GC invocations=5 (full 0):
 garbage-first heap   total 196608K, used 150351K [0x0000000741a00000, 0x0000000800000000)
  region size 2048K, 40 young (81920K), 1 survivors (2048K)
 Metaspace       used 18547K, committed 18880K, reserved 1114112K
  class space    used 2457K, committed 2624K, reserved 1048576K
}
Event: 86.177 GC heap after
{Heap after GC invocations=6 (full 0):
 garbage-first heap   total 196608K, used 70865K [0x0000000741a00000, 0x0000000800000000)
  region size 2048K, 1 young (2048K), 1 survivors (2048K)
 Metaspace       used 18547K, committed 18880K, reserved 1114112K
  class space    used 2457K, committed 2624K, reserved 1048576K
}
Event: 121.333 GC heap before
{Heap before GC invocations=6 (full 0):
 garbage-first heap   total 196608K, used 156881K [0x0000000741a00000, 0x0000000800000000)
  region size 2048K, 43 young (88064K), 1 survivors (2048K)
 Metaspace       used 18565K, committed 18880K, reserved 1114112K
  class space    used 2463K, committed 2624K, reserved 1048576K
}
Event: 121.342 GC heap after
{Heap after GC invocations=7 (full 0):
 garbage-first heap   total 196608K, used 70032K [0x0000000741a00000, 0x0000000800000000)
  region size 2048K, 1 young (2048K), 1 survivors (2048K)
 Metaspace       used 18565K, committed 18880K, reserved 1114112K
  class space    used 2463K, committed 2624K, reserved 1048576K
}
Event: 159.728 GC heap before
{Heap before GC invocations=7 (full 0):
 garbage-first heap   total 196608K, used 160144K [0x0000000741a00000, 0x0000000800000000)
  region size 2048K, 45 young (92160K), 1 survivors (2048K)
 Metaspace       used 18565K, committed 18880K, reserved 1114112K
  class space    used 2463K, committed 2624K, reserved 1048576K
}
Event: 159.736 GC heap after
{Heap after GC invocations=8 (full 0):
 garbage-first heap   total 196608K, used 70064K [0x0000000741a00000, 0x0000000800000000)
  region size 2048K, 1 young (2048K), 1 survivors (2048K)
 Metaspace       used 18565K, committed 18880K, reserved 1114112K
  class space    used 2463K, committed 2624K, reserved 1048576K
}

Dll operation events (20 events):
Event: 1.254 Loaded shared library C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-crt-private-l1-1-0.dll
Event: 1.261 Loaded shared library C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-crt-process-l1-1-0.dll
Event: 1.268 Loaded shared library C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-crt-runtime-l1-1-0.dll
Event: 1.274 Loaded shared library C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-crt-stdio-l1-1-0.dll
Event: 1.281 Loaded shared library C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-crt-string-l1-1-0.dll
Event: 1.287 Loaded shared library C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-crt-time-l1-1-0.dll
Event: 1.293 Loaded shared library C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-crt-utility-l1-1-0.dll
Event: 1.322 Loaded shared library C:\Users\andre\.openjfx\cache\19+11\amd64\ucrtbase.dll
Event: 1.330 Loaded shared library C:\Users\andre\.openjfx\cache\19+11\amd64\vcruntime140.dll
Event: 1.336 Loaded shared library C:\Users\andre\.openjfx\cache\19+11\amd64\vcruntime140_1.dll
Event: 1.354 Loaded shared library C:\Users\andre\.openjfx\cache\19+11\amd64\msvcp140.dll
Event: 1.360 Loaded shared library C:\Users\andre\.openjfx\cache\19+11\amd64\msvcp140_1.dll
Event: 1.370 Loaded shared library C:\Users\andre\.openjfx\cache\19+11\amd64\msvcp140_2.dll
Event: 1.453 Loaded shared library C:\Users\andre\.openjfx\cache\19+11\amd64\prism_d3d.dll
Event: 1.602 Loaded shared library C:\Users\andre\.openjfx\cache\19+11\amd64\glass.dll
Event: 2.739 Loaded shared library C:\Users\andre\.openjfx\cache\19+11\amd64\javafx_font.dll
Event: 2.963 Loaded shared library C:\Users\andre\.openjfx\cache\19+11\amd64\glib-lite.dll
Event: 2.995 Loaded shared library C:\Users\andre\.openjfx\cache\19+11\amd64\gstreamer-lite.dll
Event: 3.024 Loaded shared library C:\Users\andre\.openjfx\cache\19+11\amd64\jfxmedia.dll
Event: 3.980 Loaded shared library C:\Users\andre\.openjfx\cache\19+11\amd64\javafx_iio.dll

Deoptimization events (20 events):
Event: 145.492 Thread 0x00000150fd06a5b0 DEOPT PACKING pc=0x00000150dfe36277 sp=0x0000001ec99feff0
Event: 145.493 Thread 0x00000150fd06a5b0 DEOPT UNPACKING pc=0x00000150e7027543 sp=0x0000001ec99fe500 mode 0
Event: 153.892 Thread 0x00000150fde91590 DEOPT PACKING pc=0x00000150dfe36277 sp=0x0000001ec85ff350
Event: 153.892 Thread 0x00000150fde91590 DEOPT UNPACKING pc=0x00000150e7027543 sp=0x0000001ec85fe860 mode 0
Event: 159.745 Thread 0x00000150fd542b10 Uncommon trap: trap_request=0xffffff45 fr.pc=0x00000150e77d8790 relative=0x0000000000000df0
Event: 159.745 Thread 0x00000150fd542b10 Uncommon trap: reason=unstable_if action=reinterpret pc=0x00000150e77d8790 method=java.nio.Bits.tryReserveMemory(JJ)Z @ 30 c2
Event: 159.745 Thread 0x00000150fd542b10 DEOPT PACKING pc=0x00000150e77d8790 sp=0x0000001ec53fe560
Event: 159.745 Thread 0x00000150fd542b10 DEOPT UNPACKING pc=0x00000150e7026da3 sp=0x0000001ec53fe3c8 mode 2
Event: 160.356 Thread 0x00000150fcdeba20 Uncommon trap: trap_request=0xffffffc6 fr.pc=0x00000150e76fd71c relative=0x00000000000008bc
Event: 160.356 Thread 0x00000150fcdeba20 Uncommon trap: reason=bimorphic_or_optimized_type_check action=maybe_recompile pc=0x00000150e76fd71c method=javafx.scene.Node.getGeomBounds(Lcom/sun/javafx/geom/BaseBounds;Lcom/sun/javafx/geom/transform/BaseTransform;)Lcom/sun/javafx/geom/BaseBounds; @ 21
Event: 160.356 Thread 0x00000150fcdeba20 DEOPT PACKING pc=0x00000150e76fd71c sp=0x0000001ec5bfe610
Event: 160.356 Thread 0x00000150fcdeba20 DEOPT UNPACKING pc=0x00000150e7026da3 sp=0x0000001ec5bfe528 mode 2
Event: 161.916 Thread 0x00000150fd068080 DEOPT PACKING pc=0x00000150dfe36277 sp=0x0000001ec88ff490
Event: 161.916 Thread 0x00000150fd068080 DEOPT UNPACKING pc=0x00000150e7027543 sp=0x0000001ec88fe9a0 mode 0
Event: 171.933 Thread 0x00000150fd22d8e0 DEOPT PACKING pc=0x00000150dfe36277 sp=0x0000001ecbfff3a0
Event: 171.933 Thread 0x00000150fd22d8e0 DEOPT UNPACKING pc=0x00000150e7027543 sp=0x0000001ecbffe8b0 mode 0
Event: 182.467 Thread 0x00000150f8074a50 Uncommon trap: trap_request=0xffffff45 fr.pc=0x00000150e75d9ea4 relative=0x0000000000000c84
Event: 182.467 Thread 0x00000150f8074a50 Uncommon trap: reason=unstable_if action=reinterpret pc=0x00000150e75d9ea4 method=java.security.AccessControlContext.optimize()Ljava/security/AccessControlContext; @ 83 c2
Event: 182.467 Thread 0x00000150f8074a50 DEOPT PACKING pc=0x00000150e75d9ea4 sp=0x0000001ec4bff050
Event: 182.467 Thread 0x00000150f8074a50 DEOPT UNPACKING pc=0x00000150e7026da3 sp=0x0000001ec4bfefc0 mode 2

Classes loaded (20 events):
Event: 16.126 Loading class java/lang/FdLibm$Hypot
Event: 16.127 Loading class java/lang/FdLibm$Hypot done
Event: 16.130 Loading class java/lang/FdLibm
Event: 16.130 Loading class java/lang/FdLibm done
Event: 16.261 Loading class jdk/internal/ref/CleanerImpl$InnocuousThreadFactory
Event: 16.261 Loading class jdk/internal/ref/CleanerImpl$InnocuousThreadFactory done
Event: 16.272 Loading class sun/misc/Unsafe
Event: 16.273 Loading class sun/misc/Unsafe done
Event: 16.274 Loading class java/lang/invoke/DirectMethodHandle$StaticAccessor
Event: 16.275 Loading class java/lang/invoke/DirectMethodHandle$StaticAccessor done
Event: 16.388 Loading class java/nio/HeapIntBuffer
Event: 16.388 Loading class java/nio/HeapIntBuffer done
Event: 17.079 Loading class java/lang/Math$RandomNumberGeneratorHolder
Event: 17.079 Loading class java/lang/Math$RandomNumberGeneratorHolder done
Event: 21.431 Loading class java/lang/foreign/MemorySegment
Event: 21.432 Loading class java/lang/foreign/Addressable
Event: 21.432 Loading class java/lang/foreign/Addressable done
Event: 21.432 Loading class java/lang/foreign/MemorySegment done
Event: 182.466 Loading class jdk/internal/misc/Signal$1
Event: 182.467 Loading class jdk/internal/misc/Signal$1 done

Classes unloaded (0 events):
No events

Classes redefined (0 events):
No events

Internal exceptions (20 events):
Event: 15.594 Thread 0x00000150fcdeba20 Exception <a 'java/lang/NoSuchMethodError'{0x000000074afd1670}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(java.lang.Object, java.lang.Object, int)'> (0x000000074afd1670) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 774]
Event: 15.595 Thread 0x00000150fcdeba20 Exception <a 'java/lang/NoSuchMethodError'{0x000000074afd5868}: 'void java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(java.lang.Object, java.lang.Object, int, java.lang.Object)'> (0x000000074afd5868) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 774]
Event: 15.598 Thread 0x00000150fcdeba20 Exception <a 'java/lang/NoSuchMethodError'{0x000000074afdcf08}: 'void java.lang.invoke.DelegatingMethodHandle$Holder.delegate(java.lang.Object, java.lang.Object, int, java.lang.Object)'> (0x000000074afdcf08) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 774]
Event: 15.603 Thread 0x00000150fcdeba20 Exception <a 'java/lang/NoSuchMethodError'{0x000000074aff80b0}: 'void java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial(java.lang.Object, java.lang.Object, int)'> (0x000000074aff80b0) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 774]
Event: 15.605 Thread 0x00000150fcdeba20 Exception <a 'java/lang/NoSuchMethodError'{0x000000074afff558}: 'void java.lang.invoke.DelegatingMethodHandle$Holder.reinvoke_L(java.lang.Object, java.lang.Object, int)'> (0x000000074afff558) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 774]
Event: 15.783 Thread 0x00000150fcdeba20 Exception <a 'java/lang/NoSuchMethodError'{0x000000074d619240}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(java.lang.Object, double)'> (0x000000074d619240) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 774]
Event: 15.849 Thread 0x00000150fcdeba20 Exception <a 'java/io/FileNotFoundException'{0x000000074d7ebaa0}> (0x000000074d7ebaa0) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 517]
Event: 15.904 Thread 0x00000150fcdeba20 Exception <a 'java/lang/ClassNotFoundException'{0x000000074d4b6660}: com/sun/javafx/scene/control/skin/resources/controls> (0x000000074d4b6660) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 536]
Event: 15.908 Thread 0x00000150fcdeba20 Exception <a 'java/lang/ClassNotFoundException'{0x000000074d4c4710}: com/sun/javafx/scene/control/skin/resources/controls_es> (0x000000074d4c4710) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 536]
Event: 15.910 Thread 0x00000150fcdeba20 Exception <a 'java/lang/ClassNotFoundException'{0x000000074d4d2480}: com/sun/javafx/scene/control/skin/resources/controls_es_CO> (0x000000074d4d2480) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 536]
Event: 15.980 Thread 0x00000150fcdeba20 Implicit null exception at 0x00000150e766f76c to 0x00000150e766f95c
Event: 15.980 Thread 0x00000150fcdeba20 Implicit null exception at 0x00000150e769a0a4 to 0x00000150e769a0f1
Event: 16.099 Thread 0x00000150fd542b10 Implicit null exception at 0x00000150e7682ef5 to 0x00000150e7684b98
Event: 16.122 Thread 0x00000150fd542b10 Exception <a 'java/lang/NoSuchMethodError'{0x000000074d28d570}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.invokeStaticInit(java.lang.Object, int)'> (0x000000074d28d570) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 774]
Event: 16.312 Thread 0x00000150fd542b10 Implicit null exception at 0x00000150e76869d3 to 0x00000150e7686b24
Event: 16.325 Thread 0x00000150fd542b10 Implicit null exception at 0x00000150e7697f20 to 0x00000150e76989e0
Event: 17.096 Thread 0x00000150fcdeba20 Exception <a 'java/lang/NoSuchMethodError'{0x000000074bdf2e60}: 'void java.lang.invoke.DirectMethodHandle$Holder.invokeVirtual(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)'> (0x000000074bdf2e60) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 774]
Event: 22.767 Thread 0x00000150fd542b10 Implicit null exception at 0x00000150e7771140 to 0x00000150e77712fc
Event: 22.767 Thread 0x00000150fd542b10 Implicit null exception at 0x00000150e76a092c to 0x00000150e76a09b0
Event: 22.767 Thread 0x00000150fd542b10 Implicit null exception at 0x00000150e774eb60 to 0x00000150e774ebe8

VM Operations (20 events):
Event: 109.189 Executing VM operation: Cleanup
Event: 109.190 Executing VM operation: Cleanup done
Event: 115.633 Executing VM operation: HandshakeAllThreads
Event: 115.633 Executing VM operation: HandshakeAllThreads done
Event: 116.633 Executing VM operation: Cleanup
Event: 116.633 Executing VM operation: Cleanup done
Event: 120.635 Executing VM operation: Cleanup
Event: 120.636 Executing VM operation: Cleanup done
Event: 121.332 Executing VM operation: G1CollectForAllocation
Event: 121.343 Executing VM operation: G1CollectForAllocation done
Event: 144.356 Executing VM operation: Cleanup
Event: 144.356 Executing VM operation: Cleanup done
Event: 159.728 Executing VM operation: G1CollectForAllocation
Event: 159.736 Executing VM operation: G1CollectForAllocation done
Event: 161.736 Executing VM operation: Cleanup
Event: 161.736 Executing VM operation: Cleanup done
Event: 164.737 Executing VM operation: Cleanup
Event: 164.738 Executing VM operation: Cleanup done
Event: 172.764 Executing VM operation: Cleanup
Event: 172.765 Executing VM operation: Cleanup done

Events (20 events):
Event: 120.197 Thread 0x00000150fde91ae0 Thread exited: 0x00000150fde91ae0
Event: 120.197 Thread 0x00000150fde91ae0 Thread added: 0x00000150fde91ae0
Event: 120.197 Thread 0x00000150fde91ae0 Thread exited: 0x00000150fde91ae0
Event: 120.236 Thread 0x00000150fde91ae0 Thread added: 0x00000150fde91ae0
Event: 120.237 Thread 0x00000150fde91ae0 Thread exited: 0x00000150fde91ae0
Event: 120.240 Thread 0x00000150fde91ae0 Thread added: 0x00000150fde91ae0
Event: 120.240 Thread 0x00000150fde91ae0 Thread exited: 0x00000150fde91ae0
Event: 120.240 Thread 0x00000150fde91ae0 Thread added: 0x00000150fde91ae0
Event: 120.241 Thread 0x00000150fde91ae0 Thread exited: 0x00000150fde91ae0
Event: 120.241 Thread 0x00000150fde91ae0 Thread added: 0x00000150fde91ae0
Event: 120.241 Thread 0x00000150fde91ae0 Thread exited: 0x00000150fde91ae0
Event: 120.277 Thread 0x00000150fde91ae0 Thread added: 0x00000150fde91ae0
Event: 120.278 Thread 0x00000150fde91ae0 Thread exited: 0x00000150fde91ae0
Event: 120.948 Thread 0x00000150fde91ae0 Thread added: 0x00000150fde91ae0
Event: 120.949 Thread 0x00000150fde91ae0 Thread exited: 0x00000150fde91ae0
Event: 182.467 Thread 0x00000150fde91ae0 Thread added: 0x00000150fde91ae0
Event: 182.468 Thread 0x00000150fc7c1380 Thread added: 0x00000150fc7c1380
Event: 182.468 Thread 0x00000150fc7bfe40 Thread added: 0x00000150fc7bfe40
Event: 182.469 Thread 0x00000150fc7c0e30 Thread added: 0x00000150fc7c0e30
Event: 182.476 Thread 0x00000150fc7bfe40 Thread exited: 0x00000150fc7bfe40


Dynamic libraries:
0x00007ff6a2130000 - 0x00007ff6a2140000 	C:\Program Files\Java\jdk-19\bin\java.exe
0x00007ff978290000 - 0x00007ff9784a4000 	C:\WINDOWS\SYSTEM32\ntdll.dll
0x00007ff976300000 - 0x00007ff9763c2000 	C:\WINDOWS\System32\KERNEL32.DLL
0x00007ff975a40000 - 0x00007ff975de3000 	C:\WINDOWS\System32\KERNELBASE.dll
0x00007ff975880000 - 0x00007ff975991000 	C:\WINDOWS\System32\ucrtbase.dll
0x00007ff96cf50000 - 0x00007ff96cf68000 	C:\Program Files\Java\jdk-19\bin\jli.dll
0x00007ff966d70000 - 0x00007ff966d8b000 	C:\Program Files\Java\jdk-19\bin\VCRUNTIME140.dll
0x00007ff976750000 - 0x00007ff9767fe000 	C:\WINDOWS\System32\ADVAPI32.dll
0x00007ff976100000 - 0x00007ff9761a7000 	C:\WINDOWS\System32\msvcrt.dll
0x00007ff9770b0000 - 0x00007ff977154000 	C:\WINDOWS\System32\sechost.dll
0x00007ff978130000 - 0x00007ff978247000 	C:\WINDOWS\System32\RPCRT4.dll
0x00007ff977630000 - 0x00007ff9777db000 	C:\WINDOWS\System32\USER32.dll
0x00007ff975a10000 - 0x00007ff975a36000 	C:\WINDOWS\System32\win32u.dll
0x00007ff976620000 - 0x00007ff976649000 	C:\WINDOWS\System32\GDI32.dll
0x00007ff975df0000 - 0x00007ff975f09000 	C:\WINDOWS\System32\gdi32full.dll
0x00007ff975fd0000 - 0x00007ff97606a000 	C:\WINDOWS\System32\msvcp_win.dll
0x00007ff964020000 - 0x00007ff9642ae000 	C:\WINDOWS\WinSxS\amd64_microsoft.windows.common-controls_6595b64144ccf1df_6.0.22621.1635_none_270f70857386168e\COMCTL32.dll
0x00007ff970420000 - 0x00007ff97042a000 	C:\WINDOWS\SYSTEM32\VERSION.dll
0x00007ff977160000 - 0x00007ff977191000 	C:\WINDOWS\System32\IMM32.DLL
0x00007ff966d60000 - 0x00007ff966d6c000 	C:\Program Files\Java\jdk-19\bin\vcruntime140_1.dll
0x00007ff954a10000 - 0x00007ff954a9e000 	C:\Program Files\Java\jdk-19\bin\msvcp140.dll
0x00007ff92b650000 - 0x00007ff92c310000 	C:\Program Files\Java\jdk-19\bin\server\jvm.dll
0x00007ff96a700000 - 0x00007ff96a709000 	C:\WINDOWS\SYSTEM32\WSOCK32.dll
0x00007ff96f4e0000 - 0x00007ff96f514000 	C:\WINDOWS\SYSTEM32\WINMM.dll
0x00007ff977020000 - 0x00007ff977091000 	C:\WINDOWS\System32\WS2_32.dll
0x00007ff9746a0000 - 0x00007ff9746b8000 	C:\WINDOWS\SYSTEM32\kernel.appcore.dll
0x00007ff966d50000 - 0x00007ff966d5a000 	C:\Program Files\Java\jdk-19\bin\jimage.dll
0x00007ff9731d0000 - 0x00007ff9733fe000 	C:\WINDOWS\SYSTEM32\DBGHELP.DLL
0x00007ff9771a0000 - 0x00007ff977529000 	C:\WINDOWS\System32\combase.dll
0x00007ff977550000 - 0x00007ff977627000 	C:\WINDOWS\System32\OLEAUT32.dll
0x00007ff96ee90000 - 0x00007ff96eec2000 	C:\WINDOWS\SYSTEM32\dbgcore.DLL
0x00007ff975800000 - 0x00007ff97587b000 	C:\WINDOWS\System32\bcryptPrimitives.dll
0x00007ff970590000 - 0x00007ff97059e000 	C:\Program Files\Java\jdk-19\bin\instrument.dll
0x00007ff966cb0000 - 0x00007ff966cd6000 	C:\Program Files\Java\jdk-19\bin\java.dll
0x00007ff93f620000 - 0x00007ff93f6f7000 	C:\Program Files\Java\jdk-19\bin\jsvml.dll
0x00007ff977830000 - 0x00007ff97802a000 	C:\WINDOWS\System32\SHELL32.dll
0x00007ff973640000 - 0x00007ff973f0e000 	C:\WINDOWS\SYSTEM32\windows.storage.dll
0x00007ff973500000 - 0x00007ff97363e000 	C:\WINDOWS\SYSTEM32\wintypes.dll
0x00007ff978030000 - 0x00007ff978121000 	C:\WINDOWS\System32\SHCORE.dll
0x00007ff976ea0000 - 0x00007ff976efe000 	C:\WINDOWS\System32\shlwapi.dll
0x00007ff9755c0000 - 0x00007ff9755e1000 	C:\WINDOWS\SYSTEM32\profapi.dll
0x00007ff9609a0000 - 0x00007ff9609b3000 	C:\Program Files\Java\jdk-19\bin\net.dll
0x00007ff96f690000 - 0x00007ff96f7c7000 	C:\WINDOWS\SYSTEM32\WINHTTP.dll
0x00007ff974b00000 - 0x00007ff974b69000 	C:\WINDOWS\system32\mswsock.dll
0x00007ff960980000 - 0x00007ff960996000 	C:\Program Files\Java\jdk-19\bin\nio.dll
0x00007ff960900000 - 0x00007ff960918000 	C:\Program Files\Java\jdk-19\bin\zip.dll
0x00007ff970040000 - 0x00007ff97005a000 	C:\Program Files\JetBrains\IntelliJ IDEA 2022.3.2\bin\breakgen64.dll
0x00000150d7ab0000 - 0x00000150d7ab3000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-core-console-l1-1-0.dll
0x00000150d7ac0000 - 0x00000150d7ac3000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-core-console-l1-2-0.dll
0x00000150d7ad0000 - 0x00000150d7ad3000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-core-datetime-l1-1-0.dll
0x00000150d7ae0000 - 0x00000150d7ae3000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-core-debug-l1-1-0.dll
0x00000150f8360000 - 0x00000150f8363000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-core-errorhandling-l1-1-0.dll
0x00000150f8370000 - 0x00000150f8374000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-core-file-l1-1-0.dll
0x00000150f8380000 - 0x00000150f8383000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-core-file-l1-2-0.dll
0x00000150f8390000 - 0x00000150f8393000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-core-file-l2-1-0.dll
0x00000150f83c0000 - 0x00000150f83c3000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-core-handle-l1-1-0.dll
0x00000150f83d0000 - 0x00000150f83d3000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-core-heap-l1-1-0.dll
0x00000150f83a0000 - 0x00000150f83a3000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-core-interlocked-l1-1-0.dll
0x00000150f8230000 - 0x00000150f8233000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-core-libraryloader-l1-1-0.dll
0x00000150f8240000 - 0x00000150f8243000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-core-localization-l1-2-0.dll
0x00000150f8250000 - 0x00000150f8253000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-core-memory-l1-1-0.dll
0x00000150f8280000 - 0x00000150f8283000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-core-namedpipe-l1-1-0.dll
0x00000150f8260000 - 0x00000150f8263000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-core-processenvironment-l1-1-0.dll
0x00000150f8270000 - 0x00000150f8273000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-core-processthreads-l1-1-0.dll
0x00000150f8290000 - 0x00000150f8293000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-core-processthreads-l1-1-1.dll
0x00000150f82a0000 - 0x00000150f82a3000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-core-profile-l1-1-0.dll
0x00000150f82b0000 - 0x00000150f82b3000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-core-rtlsupport-l1-1-0.dll
0x00000150f82c0000 - 0x00000150f82c3000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-core-string-l1-1-0.dll
0x00000150f82d0000 - 0x00000150f82d3000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-core-synch-l1-1-0.dll
0x00000150f82e0000 - 0x00000150f82e3000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-core-synch-l1-2-0.dll
0x00000150f82f0000 - 0x00000150f82f3000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-core-sysinfo-l1-1-0.dll
0x00000150f8300000 - 0x00000150f8303000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-core-timezone-l1-1-0.dll
0x00000150f8310000 - 0x00000150f8313000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-core-util-l1-1-0.dll
0x00000150f8320000 - 0x00000150f8323000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-crt-conio-l1-1-0.dll
0x00000150f8330000 - 0x00000150f8334000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-crt-convert-l1-1-0.dll
0x00000150f8340000 - 0x00000150f8343000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-crt-environment-l1-1-0.dll
0x00000150f8350000 - 0x00000150f8353000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-crt-filesystem-l1-1-0.dll
0x00000150f83b0000 - 0x00000150f83b3000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-crt-heap-l1-1-0.dll
0x00000150f83e0000 - 0x00000150f83e3000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-crt-locale-l1-1-0.dll
0x00000150f83f0000 - 0x00000150f83f5000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-crt-math-l1-1-0.dll
0x00000150fdfd0000 - 0x00000150fdfd5000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-crt-multibyte-l1-1-0.dll
0x00000150fdfe0000 - 0x00000150fdff0000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-crt-private-l1-1-0.dll
0x00000150fdff0000 - 0x00000150fdff3000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-crt-process-l1-1-0.dll
0x00000150fe000000 - 0x00000150fe004000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-crt-runtime-l1-1-0.dll
0x00000150fe010000 - 0x00000150fe014000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-crt-stdio-l1-1-0.dll
0x00000150fe020000 - 0x00000150fe024000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-crt-string-l1-1-0.dll
0x00000150fe030000 - 0x00000150fe033000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-crt-time-l1-1-0.dll
0x00000150fe040000 - 0x00000150fe043000 	C:\Users\andre\.openjfx\cache\19+11\amd64\api-ms-win-crt-utility-l1-1-0.dll
0x00007ff95ccf0000 - 0x00007ff95cdec000 	C:\Users\andre\.openjfx\cache\19+11\amd64\ucrtbase.dll
0x00007ff969260000 - 0x00007ff96927b000 	C:\Users\andre\.openjfx\cache\19+11\amd64\vcruntime140.dll
0x00007ff970070000 - 0x00007ff97007c000 	C:\Users\andre\.openjfx\cache\19+11\amd64\vcruntime140_1.dll
0x00007ff954980000 - 0x00007ff954a0e000 	C:\Users\andre\.openjfx\cache\19+11\amd64\msvcp140.dll
0x00007ff96dd50000 - 0x00007ff96dd59000 	C:\Users\andre\.openjfx\cache\19+11\amd64\msvcp140_1.dll
0x00007ff963900000 - 0x00007ff963930000 	C:\Users\andre\.openjfx\cache\19+11\amd64\msvcp140_2.dll
0x00007ff9638d0000 - 0x00007ff9638fc000 	C:\Users\andre\.openjfx\cache\19+11\amd64\prism_d3d.dll
0x00007ff942850000 - 0x00007ff9429f9000 	C:\WINDOWS\system32\d3d9.dll
0x00007ff972ca0000 - 0x00007ff972ccb000 	C:\WINDOWS\SYSTEM32\dwmapi.dll
0x00007ff972980000 - 0x00007ff9729b8000 	C:\WINDOWS\SYSTEM32\dxcore.dll
0x00007ff972890000 - 0x00007ff97293b000 	C:\WINDOWS\system32\uxtheme.dll
0x00007ff940df0000 - 0x00007ff940f9f000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_51f685305808e3a5\igdumdim64.dll
0x00007ff976800000 - 0x00007ff97699c000 	C:\WINDOWS\System32\ole32.dll
0x00007ff911f10000 - 0x00007ff914fb3000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_51f685305808e3a5\igd9dxva64.dll
0x00007ff976a20000 - 0x00007ff976e94000 	C:\WINDOWS\System32\SETUPAPI.dll
0x00007ff975290000 - 0x00007ff9752de000 	C:\WINDOWS\SYSTEM32\cfgmgr32.dll
0x00007ff95aa40000 - 0x00007ff95ae49000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_51f685305808e3a5\igdgmm64.dll
0x00007ff95f4a0000 - 0x00007ff95f4e8000 	C:\WINDOWS\SYSTEM32\directxdatabasehelper.dll
0x00007ff95cf00000 - 0x00007ff95cf42000 	C:\Users\andre\.openjfx\cache\19+11\amd64\glass.dll
0x00007ff976650000 - 0x00007ff976747000 	C:\WINDOWS\System32\COMDLG32.dll
0x00007ff9761b0000 - 0x00007ff9762d7000 	C:\WINDOWS\System32\MSCTF.dll
0x00007ff961910000 - 0x00007ff961937000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_51f685305808e3a5\igdinfo64.dll
0x00007ff957060000 - 0x00007ff95a7f4000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_51f685305808e3a5\igc64.dll
0x00007ff9639f0000 - 0x00007ff963a04000 	C:\Users\andre\.openjfx\cache\19+11\amd64\javafx_font.dll
0x00007ff952fe0000 - 0x00007ff95307d000 	C:\Users\andre\.openjfx\cache\19+11\amd64\glib-lite.dll
0x00007ff941a70000 - 0x00007ff941b5a000 	C:\Users\andre\.openjfx\cache\19+11\amd64\gstreamer-lite.dll
0x00007ff944dd0000 - 0x00007ff944e72000 	C:\WINDOWS\SYSTEM32\DSOUND.dll
0x00007ff975560000 - 0x00007ff9755ad000 	C:\WINDOWS\SYSTEM32\powrprof.dll
0x00007ff9497d0000 - 0x00007ff9497f9000 	C:\WINDOWS\SYSTEM32\winmmbase.dll
0x00007ff941840000 - 0x00007ff9418f1000 	C:\WINDOWS\SYSTEM32\ResampleDmo.DLL
0x00007ff95f2e0000 - 0x00007ff95f2eb000 	C:\WINDOWS\SYSTEM32\msdmo.dll
0x00007ff975540000 - 0x00007ff975553000 	C:\WINDOWS\SYSTEM32\UMPDC.dll
0x00007ff961760000 - 0x00007ff961783000 	C:\Users\andre\.openjfx\cache\19+11\amd64\jfxmedia.dll
0x00007ff976f70000 - 0x00007ff977020000 	C:\WINDOWS\System32\clbcatq.dll
0x00007ff972570000 - 0x00007ff972670000 	C:\WINDOWS\system32\propsys.dll
0x00007ff9500a0000 - 0x00007ff95013f000 	C:\Windows\System32\Windows.FileExplorer.Common.dll
0x00007ff972680000 - 0x00007ff972717000 	C:\WINDOWS\SYSTEM32\apphelp.dll
0x00007ff94fe20000 - 0x00007ff94fe3a000 	C:\WINDOWS\system32\NetworkExplorer.dll
0x00007ff95eec0000 - 0x00007ff95eee2000 	C:\Users\andre\.openjfx\cache\19+11\amd64\fxplugins.dll
0x00007ff96e200000 - 0x00007ff96e29d000 	C:\WINDOWS\System32\MMDevApi.dll

dbghelp: loaded successfully - version: 4.0.5 - missing functions: none
symbol engine: initialized successfully - sym options: 0x614 - pdb path: .;C:\Program Files\Java\jdk-19\bin;C:\WINDOWS\SYSTEM32;C:\WINDOWS\WinSxS\amd64_microsoft.windows.common-controls_6595b64144ccf1df_6.0.22621.1635_none_270f70857386168e;C:\Program Files\Java\jdk-19\bin\server;C:\Program Files\JetBrains\IntelliJ IDEA 2022.3.2\bin;C:\Users\andre\.openjfx\cache\19+11\amd64;C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_51f685305808e3a5;C:\Program Files\Common Files\Microsoft Shared\Ink

VM Arguments:
jvm_args: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2022.3.2\lib\idea_rt.jar=53419:C:\Program Files\JetBrains\IntelliJ IDEA 2022.3.2\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 --module-path=C:\Users\andre\.m2\repository\org\openjfx\javafx-controls\19\javafx-controls-19-win.jar;C:\Users\andre\.m2\repository\org\openjfx\javafx-media\17.0.2\javafx-media-17.0.2-win.jar;C:\Users\andre\.m2\repository\org\openjfx\javafx-graphics\19\javafx-graphics-19-win.jar;C:\Users\andre\.m2\repository\org\openjfx\javafx-base\19\javafx-base-19-win.jar;D:\temporal\nuclear-throne\target\classes;C:\Users\andre\.m2\repository\org\openjfx\javafx-fxml\19\javafx-fxml-19-win.jar -Djdk.module.main=com.example.nuclearthrone 
java_command: com.example.nuclearthrone/com.example.nuclearthrone.MainMenu
java_class_path (initial): C:\Users\andre\.m2\repository\org\openjfx\javafx-controls\19\javafx-controls-19.jar;C:\Users\andre\.m2\repository\org\openjfx\javafx-graphics\19\javafx-graphics-19.jar;C:\Users\andre\.m2\repository\org\openjfx\javafx-base\19\javafx-base-19.jar;C:\Users\andre\.m2\repository\org\openjfx\javafx-fxml\19\javafx-fxml-19.jar;C:\Users\andre\.m2\repository\org\openjfx\javafx-media\17.0.2\javafx-media-17.0.2.jar
Launcher Type: SUN_STANDARD

[Global flags]
     intx CICompilerCount                          = 3                                         {product} {ergonomic}
     uint ConcGCThreads                            = 1                                         {product} {ergonomic}
     uint G1ConcRefinementThreads                  = 4                                         {product} {ergonomic}
   size_t G1HeapRegionSize                         = 2097152                                   {product} {ergonomic}
    uintx GCDrainStackTargetSize                   = 64                                        {product} {ergonomic}
   size_t InitialHeapSize                          = 201326592                                 {product} {ergonomic}
   size_t MarkStackSize                            = 4194304                                   {product} {ergonomic}
   size_t MaxHeapSize                              = 3193962496                                {product} {ergonomic}
   size_t MaxNewSize                               = 1914699776                                {product} {ergonomic}
   size_t MinHeapDeltaBytes                        = 2097152                                   {product} {ergonomic}
   size_t MinHeapSize                              = 8388608                                   {product} {ergonomic}
    uintx NonNMethodCodeHeapSize                   = 5832780                                {pd product} {ergonomic}
    uintx NonProfiledCodeHeapSize                  = 122912730                              {pd product} {ergonomic}
    uintx ProfiledCodeHeapSize                     = 122912730                              {pd product} {ergonomic}
    uintx ReservedCodeCacheSize                    = 251658240                              {pd product} {ergonomic}
     bool SegmentedCodeCache                       = true                                      {product} {ergonomic}
   size_t SoftMaxHeapSize                          = 3193962496                             {manageable} {ergonomic}
     bool UseCompressedClassPointers               = true                           {product lp64_product} {ergonomic}
     bool UseCompressedOops                        = true                           {product lp64_product} {ergonomic}
     bool UseG1GC                                  = true                                      {product} {ergonomic}
     bool UseLargePagesIndividualAllocation        = false                                  {pd product} {ergonomic}

Logging:
Log output configuration:
 #0: stdout all=warning uptime,level,tags foldmultilines=false
 #1: stderr all=off uptime,level,tags foldmultilines=false

Environment Variables:
JAVA_HOME=C:\Program Files\Java\jdk-19
PATH=C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files\Microsoft\jdk-11.0.16.101-hotspot\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-19\bin;C:\src\flutter\bin;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\andre\AppData\Local\Microsoft\WindowsApps;C:\Users\andre\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\andre\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\IntelliJ IDEA 2022.3.2\bin;;C:\src\flutter\bin;C:\Users\andre\.dotnet\tools;C:\Users\andre\AppData\Roaming\npm;C:\msys64\mingw64\bin;
USERNAME=andre
OS=Windows_NT
PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 78 Stepping 3, GenuineIntel
TMP=C:\Users\andre\AppData\Local\Temp
TEMP=C:\Users\andre\AppData\Local\Temp



---------------  S Y S T E M  ---------------

OS:
 Windows 11 , 64 bit Build 22621 (10.0.22621.1778)
OS uptime: 11 days 7:32 hours
Hyper-V role detected

CPU: total 4 (initial active 4) (2 cores per cpu, 2 threads per core) family 6 model 78 stepping 3 microcode 0xd6, cx8, cmov, fxsr, ht, mmx, 3dnowpref, sse, sse2, sse3, ssse3, sse4.1, sse4.2, popcnt, lzcnt, tsc, tscinvbit, avx, avx2, aes, erms, clmul, bmi1, bmi2, adx, fma, vzeroupper, clflush, clflushopt, hv, rdtscp

Memory: 4k page, system-wide physical 12179M (3970M free)
TotalPageFile size 14668M (AvailPageFile size 5937M)
current process WorkingSet (physical memory assigned to process): 408M, peak: 428M
current process commit charge ("private bytes"): 464M, peak: 508M

vm_info: Java HotSpot(TM) 64-Bit Server VM (19.0.2+7-44) for windows-amd64 JRE (19.0.2+7-44), built on 2022-11-30T18:02:09Z by "mach5one" with MS VC++ 17.1 (VS2022)

END.
